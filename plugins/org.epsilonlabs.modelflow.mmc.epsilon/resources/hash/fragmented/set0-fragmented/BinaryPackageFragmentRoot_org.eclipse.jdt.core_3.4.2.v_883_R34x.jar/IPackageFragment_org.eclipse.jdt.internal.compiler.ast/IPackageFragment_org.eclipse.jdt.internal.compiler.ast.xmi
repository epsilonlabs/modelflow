<?xml version="1.0" encoding="ASCII"?>
<core:IPackageFragment xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:core="org.amma.dsl.jdt.core" elementName="org.eclipse.jdt.internal.compiler.ast" isDefaultPackage="false">
  <packageFragmentRoot xsi:type="core:BinaryPackageFragmentRoot" href="../BinaryPackageFragmentRoot_org.eclipse.jdt.core_3.4.2.v_883_R34x.jar.xmi#/"/>
  <classFiles elementName="AND_AND_Expression.class" isClass="true" isInterface="false">
    <type elementName="AND_AND_Expression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression">
      <fields elementName="rightInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="mergedInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="AND_AND_Expression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedBoolean" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="isCompactableOperation" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ASTNode.class" isClass="true" isInterface="false">
    <type elementName="ASTNode" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ASTNode" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ASTNode">
      <fields elementName="sourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="sourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit1" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit2" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit3" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit4" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit5" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit6" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit7" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit8" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit9" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit10" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit11" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit12" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit13" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit14" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit15" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit16" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit17" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit18" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit19" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit20" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit21" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit22" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit23" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit24" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit25" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit26" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit27" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit28" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit29" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit30" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit31" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit32" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit32L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit33L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit34L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit35L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit36L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit37L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit38L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit39L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit40L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit41L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit42L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit43L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit44L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit45L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit46L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit47L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit48L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit49L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit50L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit51L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit52L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit53L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit54L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit55L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit56L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit57L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit58L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit59L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit60L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit61L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit62L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit63L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="Bit64L" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="bits" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ReturnTypeIDMASK" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="OperatorSHIFT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="OperatorMASK" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsReturnedValue" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnnecessaryCast" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DisableUnnecessaryCastCheck" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="GenerateCheckcast" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnsafeCast" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="RestrictiveFlagMASK" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FirstAssignmentToLocal" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsImplicitThis" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DepthSHIFT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DepthMASK" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsReachable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LabelUsed" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DocumentedFallthrough" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsLocalDeclarationReachable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsSubRoutineEscaping" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsTryBlockExiting" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ContainsAssertion" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsLocalType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsAnonymousType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsMemberType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="HasAbstractMethods" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsSecondaryType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="HasBeenGenerated" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="HasLocalType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="HasBeenResolved" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParenthesizedSHIFT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParenthesizedMASK" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IgnoreNoEffectAssignCheck" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsStrictlyAssigned" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsCompoundAssigned" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DiscardEnclosingInstance" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsUsefulEmptyStatement" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UndocumentedEmptyBlock" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="OverridingMethodWithSupercall" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ErrorInSignature" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NeedFreeReturn" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsDefaultConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="HasAllMethodBodies" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsImplicitUnit" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InsideJavadoc" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SuperAccess" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Empty" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsElseIfStatement" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ThenExit" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsSuperType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsVarArgs" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IgnoreRawTypeCheck" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsAnnotationDefaultValue" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsNonNull" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NeededScope" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="OnDemand" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Used" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DidResolve" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsAnySubRoutineEscaping" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsSynchronized" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="BlockExit" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsRecovered" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="INVOCATION_ARGUMENT_OK" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="INVOCATION_ARGUMENT_UNCHECKED" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="INVOCATION_ARGUMENT_WILDCARD" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="ASTNode" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="checkInvocationArgument" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="checkInvocationArguments" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg4" type="[Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg5" type="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg6" type="Z"/>
        <parameters name="arg7" type="Lorg.eclipse.jdt.internal.compiler.lookup.InvocationSite;"/>
      </methods>
      <methods elementName="concreteStatement" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isFieldUseDeprecated" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="isImplicitThis" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isMethodUseDeprecated" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="isSuper" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isThis" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isTypeUseDeprecated" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="print" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printAnnotations" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printIndent" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printModifiers" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveAnnotations" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.Binding;"/>
      </methods>
      <methods elementName="resolveDeprecatedAnnotations" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.Binding;"/>
      </methods>
      <methods elementName="sourceStart" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="sourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="AbstractMethodDeclaration.class" isClass="true" isInterface="false">
    <type elementName="AbstractMethodDeclaration" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration">
      <fields elementName="scope" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;" isVolatile="false" isTransient="false"/>
      <fields elementName="selector" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="declarationSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="declarationSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiersSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="annotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="arguments" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Argument;" isVolatile="false" isTransient="false"/>
      <fields elementName="thrownExceptions" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="statements" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isVolatile="false" isTransient="false"/>
      <fields elementName="explicitDeclarations" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="binding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="ignoreFurtherInvestigation" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="javadoc" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Javadoc;" isVolatile="false" isTransient="false"/>
      <fields elementName="bodyStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="bodyEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="compilationResult" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.CompilationResult;" isVolatile="false" isTransient="false"/>
      <methods elementName="AbstractMethodDeclaration" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="abort" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
      </methods>
      <methods elementName="analyseCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="bindArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="bindThrownExceptions" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="compilationResult" returnType="Lorg.eclipse.jdt.internal.compiler.CompilationResult;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ClassFile;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ClassFile;"/>
      </methods>
      <methods elementName="checkArgumentsSize" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="hasErrors" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isAbstract" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isAnnotationMethod" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isClinit" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isConstructor" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isDefaultConstructor" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isInitializationMethod" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isMethod" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isNative" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isStatic" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseStatements" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="print" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printBody" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printReturnType" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="resolveJavadoc" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resolveStatements" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="tagAsHavingErrors" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="typeParameters" returnType="[Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="AbstractVariableDeclaration.class" isClass="true" isInterface="false">
    <type elementName="AbstractVariableDeclaration" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration">
      <fields elementName="declarationEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="declarationSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="declarationSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="hiddenVariableDepth" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="initialization" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiersSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="annotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="name" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="type" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="FIELD" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="INITIALIZER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ENUM_CONSTANT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LOCAL_VARIABLE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="PARAMETER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TYPE_PARAMETER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="AbstractVariableDeclaration" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="genericTypeArguments" returnType="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getKind" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isSuperAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isTypeAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printAsExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="setActualReceiverType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
      </methods>
      <methods elementName="setDepth" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="setFieldIndex" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="AllocationExpression.class" isClass="true" isInterface="false">
    <type elementName="AllocationExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.AllocationExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.AllocationExpression">
      <fields elementName="type" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="arguments" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="binding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="codegenBinding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="syntheticAccessor" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="typeArguments" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="genericTypeArguments" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="enumConstant" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;" isVolatile="false" isTransient="false"/>
      <methods elementName="AllocationExpression" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="checkCapturedLocalInitializationIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="enclosingInstance" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="genericTypeArguments" returnType="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isSuperAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isTypeAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="manageEnclosingInstanceAccessIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="manageSyntheticAccessIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="setActualReceiverType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
      </methods>
      <methods elementName="setDepth" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="setFieldIndex" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="Annotation.class" isClass="true" isInterface="false">
    <type elementName="Annotation" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.Annotation" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.Annotation">
      <fields elementName="NoValuePairs" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.MemberValuePair;" isVolatile="false" isTransient="false"/>
      <fields elementName="declarationSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="recipient" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.Binding;" isVolatile="false" isTransient="false"/>
      <fields elementName="type" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="compilerAnnotation" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.AnnotationBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="Annotation" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="getRetentionPolicy" returnType="J" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="getTargetElementType" returnType="J" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="computeElementValuePairs" returnType="[Lorg.eclipse.jdt.internal.compiler.lookup.ElementValuePair;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="detectStandardAnnotation" returnType="J" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.MemberValuePair;"/>
      </methods>
      <methods elementName="getCompilerAnnotation" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.AnnotationBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="memberValuePairs" returnType="[Lorg.eclipse.jdt.internal.compiler.ast.MemberValuePair;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="recordSuppressWarnings" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="AnnotationMethodDeclaration.class" isClass="true" isInterface="false">
    <type elementName="AnnotationMethodDeclaration" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration">
      <fields elementName="defaultValue" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="extendedDimensions" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="AnnotationMethodDeclaration" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ClassFile;"/>
      </methods>
      <methods elementName="isAnnotationMethod" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isMethod" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseStatements" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="print" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveStatements" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="Argument.class" isClass="true" isInterface="false">
    <type elementName="Argument" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.Argument" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.Argument">
      <fields elementName="SET" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="Argument" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="J"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="bind" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="getKind" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isVarArgs" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="print" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveForCatch" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ArrayAllocationExpression.class" isClass="true" isInterface="false">
    <type elementName="ArrayAllocationExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression">
      <fields elementName="type" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="dimensions" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="initializer" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.ArrayInitializer;" isVolatile="false" isTransient="false"/>
      <methods elementName="ArrayAllocationExpression" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ArrayInitializer.class" isClass="true" isInterface="false">
    <type elementName="ArrayInitializer" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ArrayInitializer" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ArrayInitializer">
      <fields elementName="expressions" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="binding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.ArrayBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="ArrayInitializer" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveTypeExpecting" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ArrayQualifiedTypeReference.class" isClass="true" isInterface="false">
    <type elementName="ArrayQualifiedTypeReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference">
      <fields elementName="dimensions" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="ArrayQualifiedTypeReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[J"/>
      </methods>
      <methods elementName="dimensions" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getParameterizedTypeName" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ArrayReference.class" isClass="true" isInterface="false">
    <type elementName="ArrayReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ArrayReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ArrayReference">
      <fields elementName="receiver" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="position" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <methods elementName="ArrayReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
      </methods>
      <methods elementName="analyseAssignment" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.Assignment;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateAssignment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.Assignment;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateCompoundAssignment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="Z"/>
      </methods>
      <methods elementName="generatePostIncrement" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.CompoundAssignment;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="nullStatus" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ArrayTypeReference.class" isClass="true" isInterface="false">
    <type elementName="ArrayTypeReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference">
      <fields elementName="dimensions" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="originalSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="ArrayTypeReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="J"/>
      </methods>
      <methods elementName="dimensions" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getParameterizedTypeName" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="AssertStatement.class" isClass="true" isInterface="false">
    <type elementName="AssertStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.AssertStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.AssertStatement">
      <fields elementName="assertExpression" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="exceptionArgument" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="preAssertInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="assertionSyntheticFieldBinding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="AssertStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="AssertStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="manageSyntheticAccessIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="Assignment.class" isClass="true" isInterface="false">
    <type elementName="Assignment" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.Assignment" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.Assignment">
      <fields elementName="lhs" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="expression" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <methods elementName="Assignment" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="checkAssignment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="getDirectBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.Binding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
      </methods>
      <methods elementName="getLastField" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
      </methods>
      <methods elementName="nullStatus" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="print" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printExpressionNoParenthesis" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolveTypeExpecting" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="localVariableBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="BinaryExpression.class" isClass="true" isInterface="false">
    <type elementName="BinaryExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.BinaryExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.BinaryExpression">
      <fields elementName="left" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="right" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="optimizedBooleanConstant" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isVolatile="false" isTransient="false"/>
      <methods elementName="BinaryExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="BinaryExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.BinaryExpression;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="computeConstant" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="optimizedBooleanConstant" returnType="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedBoolean" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedGreaterThan" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedGreaterThanOrEqual" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedLessThan" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedLessThanOrEqual" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="generateLogicalAnd" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateLogicalOr" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateLogicalXor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedLogicalAnd" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedLogicalOr" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedLogicalXor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedStringConcatenation" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="generateOptimizedStringConcatenationCreation" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="isCompactableOperation" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="nonRecursiveResolveTypeUpwards" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="optimizedBooleanConstant" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="printExpressionNoParenthesis" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="Block.class" isClass="true" isInterface="false">
    <type elementName="Block" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.Block" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.Block">
      <fields elementName="statements" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isVolatile="false" isTransient="false"/>
      <fields elementName="explicitDeclarations" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="scope" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;" isVolatile="false" isTransient="false"/>
      <methods elementName="Block" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="isEmptyBlock" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printBody" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolveUsing" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="branchChainTo" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="BranchStatement.class" isClass="true" isInterface="false">
    <type elementName="BranchStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.BranchStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.BranchStatement">
      <fields elementName="label" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="targetLabel" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;" isVolatile="false" isTransient="false"/>
      <fields elementName="subroutines" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.SubRoutineStatement;" isVolatile="false" isTransient="false"/>
      <fields elementName="initStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="BranchStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="BreakStatement.class" isClass="true" isInterface="false">
    <type elementName="BreakStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.BreakStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.BreakStatement">
      <methods elementName="BreakStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="CaseStatement.class" isClass="true" isInterface="false">
    <type elementName="CaseStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.CaseStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.CaseStatement">
      <fields elementName="constantExpression" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="targetLabel" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.CaseLabel;" isVolatile="false" isTransient="false"/>
      <methods elementName="CaseStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolveCase" returnType="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.SwitchStatement;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="CastExpression$1.class" isClass="true" isInterface="false">
    <type elementName="" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.CastExpression$1" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.CastExpression.1">
      <fields elementName="val$invocationSite" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.InvocationSite;" isVolatile="false" isTransient="false"/>
      <methods elementName="" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.InvocationSite;"/>
      </methods>
      <methods elementName="genericTypeArguments" returnType="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isSuperAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isTypeAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="setActualReceiverType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
      </methods>
      <methods elementName="setDepth" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="setFieldIndex" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="sourceStart" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="sourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="CastExpression.class" isClass="true" isInterface="false">
    <type elementName="CastExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.CastExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.CastExpression">
      <fields elementName="expression" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="type" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="expectedType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="CastExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="checkNeedForAssignedCast" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.CastExpression;"/>
      </methods>
      <methods elementName="checkNeedForCastCast" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.CastExpression;"/>
      </methods>
      <methods elementName="checkNeedForEnclosingInstanceCast" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="checkNeedForArgumentCast" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg4" type="I"/>
      </methods>
      <methods elementName="checkNeedForArgumentCasts" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg4" type="[Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg5" type="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg6" type="Lorg.eclipse.jdt.internal.compiler.lookup.InvocationSite;"/>
      </methods>
      <methods elementName="checkNeedForArgumentCasts" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="Z"/>
        <parameters name="arg6" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg7" type="I"/>
        <parameters name="arg8" type="Z"/>
      </methods>
      <methods elementName="checkAlternateBinding" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg4" type="[Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg5" type="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg6" type="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg7" type="Lorg.eclipse.jdt.internal.compiler.lookup.InvocationSite;"/>
      </methods>
      <methods elementName="checkUnsafeCast" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="innermostCastedExpression" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="localVariableBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="nullStatus" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="optimizedBooleanConstant" returnType="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="setExpectedType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="isIndirectlyUsed" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="tagAsNeedCheckCast" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="tagAsUnnecessaryCast" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="CharLiteral.class" isClass="true" isInterface="false">
    <type elementName="CharLiteral" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.CharLiteral" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.CharLiteral">
      <fields elementName="value" isEnumConstant="false" typeSignature="C" isVolatile="false" isTransient="false"/>
      <methods elementName="CharLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="computeConstant" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="computeValue" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="literalType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ClassLiteralAccess.class" isClass="true" isInterface="false">
    <type elementName="ClassLiteralAccess" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess">
      <fields elementName="type" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="targetType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="syntheticField" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="ClassLiteralAccess" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="Clinit.class" isClass="true" isInterface="false">
    <type elementName="Clinit" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.Clinit" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.Clinit">
      <fields elementName="assertionSyntheticFieldBinding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="classLiteralSyntheticField" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="Clinit" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="analyseCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ClassFile;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ClassFile;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="isClinit" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isInitializationMethod" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isStatic" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseStatements" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="print" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="setAssertionSupport" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="CombinedBinaryExpression.class" isClass="true" isInterface="false">
    <type elementName="CombinedBinaryExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression">
      <fields elementName="arity" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="arityMax" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ARITY_MAX_MAX" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ARITY_MAX_MIN" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="defaultArityMaxStartingValue" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="referencesTable" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.BinaryExpression;" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="CombinedBinaryExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="CombinedBinaryExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateOptimizedStringConcatenation" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="generateOptimizedStringConcatenationCreation" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="initArity" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="printExpressionNoParenthesis" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="tuneArityMax" returnType="V" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="CompilationUnitDeclaration$1.class" isClass="true" isInterface="false">
    <type elementName="" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration$1" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration.1">
      <methods elementName="" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="compare" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
        <parameters name="arg1" type="Ljava.lang.Object;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="CompilationUnitDeclaration.class" isClass="true" isInterface="false">
    <type elementName="CompilationUnitDeclaration" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration">
      <fields elementName="STRING_LITERAL_COMPARATOR" isEnumConstant="false" typeSignature="Ljava.util.Comparator;" isVolatile="false" isTransient="false"/>
      <fields elementName="STRING_LITERALS_INCREMENT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="currentPackage" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.ImportReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="imports" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.ImportReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="types" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="comments" isEnumConstant="false" typeSignature="[[I" isVolatile="false" isTransient="false"/>
      <fields elementName="ignoreFurtherInvestigation" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="ignoreMethodBodies" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="scope" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;" isVolatile="false" isTransient="false"/>
      <fields elementName="problemReporter" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.problem.ProblemReporter;" isVolatile="false" isTransient="false"/>
      <fields elementName="compilationResult" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.CompilationResult;" isVolatile="false" isTransient="false"/>
      <fields elementName="localTypes" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="localTypeCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="isPropagatingInnerClassEmulation" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="javadoc" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Javadoc;" isVolatile="false" isTransient="false"/>
      <fields elementName="nlsTags" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.NLSTag;" isVolatile="false" isTransient="false"/>
      <fields elementName="stringLiterals" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.StringLiteral;" isVolatile="false" isTransient="false"/>
      <fields elementName="stringLiteralsPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="stringLiteralsStart" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.util.HashSetOfInt;" isVolatile="false" isTransient="false"/>
      <fields elementName="suppressWarningIrritants" isEnumConstant="false" typeSignature="[J" isVolatile="false" isTransient="false"/>
      <fields elementName="suppressWarningAnnotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="suppressWarningScopePositions" isEnumConstant="false" typeSignature="[J" isVolatile="false" isTransient="false"/>
      <fields elementName="suppressWarningsCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="CompilationUnitDeclaration" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.problem.ProblemReporter;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="abort" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
      </methods>
      <methods elementName="analyseCode" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="cleanUp" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="cleanUp" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
      </methods>
      <methods elementName="checkUnusedImports" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="compilationResult" returnType="Lorg.eclipse.jdt.internal.compiler.CompilationResult;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="declarationOfType" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
      </methods>
      <methods elementName="finalizeProblems" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getFileName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getMainTypeName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isEmpty" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isPackageInfo" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="hasErrors" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="print" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="propagateInnerEmulationForAllLocalTypes" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="recordStringLiteral" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteral;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="recordSuppressWarnings" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="J"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Annotation;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="record" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="reportNLSProblems" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="tagAsHavingErrors" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="CompoundAssignment.class" isClass="true" isInterface="false">
    <type elementName="CompoundAssignment" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.CompoundAssignment" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.CompoundAssignment">
      <fields elementName="operator" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="preAssignImplicitConversion" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="CompoundAssignment" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="nullStatus" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="operatorToString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printExpressionNoParenthesis" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="restrainUsageToNumericTypes" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ConditionalExpression.class" isClass="true" isInterface="false">
    <type elementName="ConditionalExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ConditionalExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ConditionalExpression">
      <fields elementName="condition" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="valueIfTrue" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="valueIfFalse" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="optimizedBooleanConstant" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isVolatile="false" isTransient="false"/>
      <fields elementName="optimizedIfTrueConstant" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isVolatile="false" isTransient="false"/>
      <fields elementName="optimizedIfFalseConstant" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isVolatile="false" isTransient="false"/>
      <fields elementName="trueInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="falseInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="mergedInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="ConditionalExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedBoolean" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="nullStatus" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="optimizedBooleanConstant" returnType="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printExpressionNoParenthesis" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ConstructorDeclaration.class" isClass="true" isInterface="false">
    <type elementName="ConstructorDeclaration" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration">
      <fields elementName="constructorCall" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall;" isVolatile="false" isTransient="false"/>
      <fields elementName="typeParameters" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;" isVolatile="false" isTransient="false"/>
      <methods elementName="ConstructorDeclaration" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="analyseCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="analyseCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ClassFile;"/>
      </methods>
      <methods elementName="generateSyntheticFieldInitializationsIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
      </methods>
      <methods elementName="internalGenerateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ClassFile;"/>
      </methods>
      <methods elementName="isConstructor" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isDefaultConstructor" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isInitializationMethod" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isRecursive" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.util.ArrayList;"/>
      </methods>
      <methods elementName="parseStatements" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="printBody" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveJavadoc" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resolveStatements" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="typeParameters" returnType="[Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="ContinueStatement.class" isClass="true" isInterface="false">
    <type elementName="ContinueStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ContinueStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ContinueStatement">
      <methods elementName="ContinueStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="DoStatement.class" isClass="true" isInterface="false">
    <type elementName="DoStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.DoStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.DoStatement">
      <fields elementName="condition" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="action" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isVolatile="false" isTransient="false"/>
      <fields elementName="breakLabel" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;" isVolatile="false" isTransient="false"/>
      <fields elementName="continueLabel" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;" isVolatile="false" isTransient="false"/>
      <fields elementName="mergedInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="DoStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="DoubleLiteral.class" isClass="true" isInterface="false">
    <type elementName="DoubleLiteral" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.DoubleLiteral" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.DoubleLiteral">
      <fields elementName="value" isEnumConstant="false" typeSignature="D" isVolatile="false" isTransient="false"/>
      <methods elementName="DoubleLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="computeConstant" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="literalType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="EmptyStatement.class" isClass="true" isInterface="false">
    <type elementName="EmptyStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.EmptyStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.EmptyStatement">
      <methods elementName="EmptyStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="complainIfUnreachable" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="EqualExpression.class" isClass="true" isInterface="false">
    <type elementName="EqualExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.EqualExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.EqualExpression">
      <methods elementName="EqualExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="checkNullComparison" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="checkVariableComparison" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg5" type="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;"/>
        <parameters name="arg6" type="I"/>
        <parameters name="arg7" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="computeConstant" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedBoolean" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="generateBooleanEqual" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedBooleanEqual" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="generateNonBooleanEqual" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedNonBooleanEqual" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="isCompactableOperation" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ExplicitConstructorCall.class" isClass="true" isInterface="false">
    <type elementName="ExplicitConstructorCall" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall">
      <fields elementName="arguments" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="qualification" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="binding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="codegenBinding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="syntheticAccessor" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="accessMode" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="typeArguments" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="genericTypeArguments" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="ImplicitSuper" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Super" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="This" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="implicitArguments" isEnumConstant="false" typeSignature="[[Lorg.eclipse.jdt.internal.compiler.lookup.VariableBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="typeArgumentsSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="ExplicitConstructorCall" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="genericTypeArguments" returnType="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isImplicitSuper" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isSuperAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isTypeAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="manageEnclosingInstanceAccessIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="manageSyntheticAccessIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="setActualReceiverType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
      </methods>
      <methods elementName="setDepth" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="setFieldIndex" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="Expression.class" isClass="true" isInterface="false">
    <type elementName="Expression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.Expression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.Expression">
      <fields elementName="constant" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isVolatile="false" isTransient="false"/>
      <fields elementName="statementEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="implicitConversion" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="resolvedType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="isConstantValueRepresentable" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.impl.Constant;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="Expression" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="checkCastTypesCompatibility" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
      </methods>
      <methods elementName="checkNPE" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="checkUnsafeCast" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="computeConversion" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedBoolean" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedStringConcatenation" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="generateOptimizedStringConcatenationCreation" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="getAllInheritedMethods" returnType="[Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
      </methods>
      <methods elementName="getAllInheritedMethods0" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
        <parameters name="arg1" type="Ljava.util.ArrayList;"/>
      </methods>
      <methods elementName="isCompactableOperation" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isConstantValueOfTypeAssignableToType" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="isTypeReference" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="localVariableBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="markAsNonNull" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="nullStatus" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="optimizedBooleanConstant" returnType="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="postConversionType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="print" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="resolveTypeExpecting" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="reusableJSRTarget" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="setExpectedType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="tagAsNeedCheckCast" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="tagAsUnnecessaryCast" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="toTypeReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ExtendedStringLiteral.class" isClass="true" isInterface="false">
    <type elementName="ExtendedStringLiteral" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral">
      <methods elementName="ExtendedStringLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.CharLiteral;"/>
      </methods>
      <methods elementName="ExtendedStringLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteral;"/>
      </methods>
      <methods elementName="extendWith" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CharLiteral;"/>
      </methods>
      <methods elementName="extendWith" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteral;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="FalseLiteral.class" isClass="true" isInterface="false">
    <type elementName="FalseLiteral" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.FalseLiteral" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.FalseLiteral">
      <fields elementName="source" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="FalseLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="computeConstant" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedBoolean" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="literalType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="source" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="FieldDeclaration.class" isClass="true" isInterface="false">
    <type elementName="FieldDeclaration" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.FieldDeclaration" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.FieldDeclaration">
      <fields elementName="binding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="javadoc" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Javadoc;" isVolatile="false" isTransient="false"/>
      <fields elementName="endPart1Position" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="endPart2Position" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="FieldDeclaration" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="FieldDeclaration" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="getKind" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isStatic" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="FieldReference.class" isClass="true" isInterface="false">
    <type elementName="FieldReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.FieldReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.FieldReference">
      <fields elementName="READ" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="WRITE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="receiver" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="token" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="binding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="codegenBinding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="syntheticAccessors" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="nameSourcePosition" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="receiverType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="genericCast" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="FieldReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="J"/>
      </methods>
      <methods elementName="analyseAssignment" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.Assignment;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="computeConversion" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="fieldBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateAssignment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.Assignment;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateCompoundAssignment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="Z"/>
      </methods>
      <methods elementName="generatePostIncrement" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.CompoundAssignment;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="genericTypeArguments" returnType="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isSuperAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isTypeAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="manageSyntheticAccessIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="nullStatus" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="optimizedBooleanConstant" returnType="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="postConversionType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="setActualReceiverType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
      </methods>
      <methods elementName="setDepth" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="setFieldIndex" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="FloatLiteral.class" isClass="true" isInterface="false">
    <type elementName="FloatLiteral" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.FloatLiteral" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.FloatLiteral">
      <fields elementName="value" isEnumConstant="false" typeSignature="F" isVolatile="false" isTransient="false"/>
      <fields elementName="Float_MIN_VALUE" isEnumConstant="false" typeSignature="F" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="FloatLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="computeConstant" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="literalType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ForStatement.class" isClass="true" isInterface="false">
    <type elementName="ForStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ForStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ForStatement">
      <fields elementName="initializations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isVolatile="false" isTransient="false"/>
      <fields elementName="condition" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="increments" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isVolatile="false" isTransient="false"/>
      <fields elementName="action" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isVolatile="false" isTransient="false"/>
      <fields elementName="scope" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;" isVolatile="false" isTransient="false"/>
      <fields elementName="breakLabel" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;" isVolatile="false" isTransient="false"/>
      <fields elementName="continueLabel" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;" isVolatile="false" isTransient="false"/>
      <fields elementName="preCondInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="preIncrementsInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="condIfTrueInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="mergedInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="ForStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="[Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg4" type="Z"/>
        <parameters name="arg5" type="I"/>
        <parameters name="arg6" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ForeachStatement.class" isClass="true" isInterface="false">
    <type elementName="ForeachStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ForeachStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ForeachStatement">
      <fields elementName="elementVariable" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.LocalDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="elementVariableImplicitWidening" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="collection" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="action" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isVolatile="false" isTransient="false"/>
      <fields elementName="kind" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ARRAY" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="RAW_ITERABLE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="GENERIC_ITERABLE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="iteratorReceiverType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="collectionElementType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="breakLabel" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;" isVolatile="false" isTransient="false"/>
      <fields elementName="continueLabel" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;" isVolatile="false" isTransient="false"/>
      <fields elementName="scope" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;" isVolatile="false" isTransient="false"/>
      <fields elementName="indexVariable" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="collectionVariable" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="maxVariable" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="SecretIndexVariableName" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="SecretCollectionVariableName" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="SecretMaxVariableName" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="postCollectionInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="mergedInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="ForeachStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.LocalDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="IfStatement.class" isClass="true" isInterface="false">
    <type elementName="IfStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.IfStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.IfStatement">
      <fields elementName="condition" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="thenStatement" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isVolatile="false" isTransient="false"/>
      <fields elementName="elseStatement" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isVolatile="false" isTransient="false"/>
      <fields elementName="thenInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="elseInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="mergedInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="IfStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="IfStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ImportReference.class" isClass="true" isInterface="false">
    <type elementName="ImportReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ImportReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ImportReference">
      <fields elementName="tokens" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="sourcePositions" isEnumConstant="false" typeSignature="[J" isVolatile="false" isTransient="false"/>
      <fields elementName="declarationEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="declarationSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="declarationSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="annotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;" isVolatile="false" isTransient="false"/>
      <methods elementName="ImportReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="[J"/>
        <parameters name="arg2" type="Z"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="isStatic" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getImportName" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="print" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="print" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="Initializer.class" isClass="true" isInterface="false">
    <type elementName="Initializer" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.Initializer" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.Initializer">
      <fields elementName="block" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Block;" isVolatile="false" isTransient="false"/>
      <fields elementName="lastVisibleFieldID" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="bodyStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="bodyEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="Initializer" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Block;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="getKind" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isStatic" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseStatements" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="InstanceOfExpression.class" isClass="true" isInterface="false">
    <type elementName="InstanceOfExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression">
      <fields elementName="expression" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="type" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <methods elementName="InstanceOfExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="printExpressionNoParenthesis" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="tagAsUnnecessaryCast" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="IntLiteral.class" isClass="true" isInterface="false">
    <type elementName="IntLiteral" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.IntLiteral" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.IntLiteral">
      <fields elementName="value" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="One" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.IntLiteral;" isVolatile="false" isTransient="false"/>
      <fields elementName="FORMAT_ERROR" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="IntLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="IntLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="IntLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="computeConstant" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="literalType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="mayRepresentMIN_VALUE" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="IntLiteralMinValue.class" isClass="true" isInterface="false">
    <type elementName="IntLiteralMinValue" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue">
      <fields elementName="CharValue" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="MIN_VALUE" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="IntLiteralMinValue" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="computeConstant" returnType="V" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="Javadoc.class" isClass="true" isInterface="false">
    <type elementName="Javadoc" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.Javadoc" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.Javadoc">
      <fields elementName="paramReferences" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="paramTypeParameters" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="exceptionReferences" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="returnStatement" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement;" isVolatile="false" isTransient="false"/>
      <fields elementName="seeReferences" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="inheritedPositions" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="invalidParameters" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="valuePositions" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <methods elementName="Javadoc" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="canBeSeen" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="getNodeStartingAt" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="print" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
      </methods>
      <methods elementName="resolveReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="resolveParamTags" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
        <parameters name="arg1" type="Z"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="resolveTypeParameterTags" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="resolveThrowsTags" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="verifyTypeReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg3" type="Z"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
        <parameters name="arg5" type="I"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="JavadocAllocationExpression.class" isClass="true" isInterface="false">
    <type elementName="JavadocAllocationExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression">
      <fields elementName="tagSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="tagSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="tagValue" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="memberStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="qualification" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <methods elementName="JavadocAllocationExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="JavadocAllocationExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="J"/>
      </methods>
      <methods elementName="internalResolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="isSuperAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="JavadocArgumentExpression.class" isClass="true" isInterface="false">
    <type elementName="JavadocArgumentExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression">
      <fields elementName="token" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="argument" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Argument;" isVolatile="false" isTransient="false"/>
      <methods elementName="JavadocArgumentExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;"/>
      </methods>
      <methods elementName="internalResolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="JavadocArrayQualifiedTypeReference.class" isClass="true" isInterface="false">
    <type elementName="JavadocArrayQualifiedTypeReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference">
      <fields elementName="tagSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="tagSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="JavadocArrayQualifiedTypeReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="reportInvalidType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="reportDeprecatedType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="JavadocArraySingleTypeReference.class" isClass="true" isInterface="false">
    <type elementName="JavadocArraySingleTypeReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference">
      <methods elementName="JavadocArraySingleTypeReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="J"/>
      </methods>
      <methods elementName="reportInvalidType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="reportDeprecatedType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="JavadocFieldReference.class" isClass="true" isInterface="false">
    <type elementName="JavadocFieldReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference">
      <fields elementName="tagSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="tagSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="tagValue" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="methodBinding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="JavadocFieldReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="J"/>
      </methods>
      <methods elementName="internalResolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="isSuperAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="JavadocImplicitTypeReference.class" isClass="true" isInterface="false">
    <type elementName="JavadocImplicitTypeReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference">
      <fields elementName="token" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <methods elementName="JavadocImplicitTypeReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="copyDims" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getTypeBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="getLastToken" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeName" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isThis" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="internalResolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="reportInvalidType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="reportDeprecatedType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="JavadocMessageSend.class" isClass="true" isInterface="false">
    <type elementName="JavadocMessageSend" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend">
      <fields elementName="tagSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="tagSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="tagValue" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="JavadocMessageSend" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="J"/>
      </methods>
      <methods elementName="JavadocMessageSend" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="J"/>
        <parameters name="arg2" type="[Lorg.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression;"/>
      </methods>
      <methods elementName="internalResolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="isSuperAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="JavadocQualifiedTypeReference.class" isClass="true" isInterface="false">
    <type elementName="JavadocQualifiedTypeReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference">
      <fields elementName="tagSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="tagSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="packageBinding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.PackageBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="JavadocQualifiedTypeReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="[J"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="internalResolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="reportDeprecatedType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="reportInvalidType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="JavadocReturnStatement.class" isClass="true" isInterface="false">
    <type elementName="JavadocReturnStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement">
      <methods elementName="JavadocReturnStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="JavadocSingleNameReference.class" isClass="true" isInterface="false">
    <type elementName="JavadocSingleNameReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference">
      <fields elementName="tagSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="tagSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="JavadocSingleNameReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="J"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Z"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="JavadocSingleTypeReference.class" isClass="true" isInterface="false">
    <type elementName="JavadocSingleTypeReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference">
      <fields elementName="tagSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="tagSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="packageBinding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.PackageBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="JavadocSingleTypeReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="J"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="internalResolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="reportDeprecatedType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="reportInvalidType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="LabeledStatement.class" isClass="true" isInterface="false">
    <type elementName="LabeledStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.LabeledStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.LabeledStatement">
      <fields elementName="statement" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isVolatile="false" isTransient="false"/>
      <fields elementName="label" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="targetLabel" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;" isVolatile="false" isTransient="false"/>
      <fields elementName="labelEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="mergedInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="LabeledStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg2" type="J"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="concreteStatement" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="Literal.class" isClass="true" isInterface="false">
    <type elementName="Literal" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.Literal" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.Literal">
      <methods elementName="Literal" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="computeConstant" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="literalType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="source" returnType="[C" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="LocalDeclaration.class" isClass="true" isInterface="false">
    <type elementName="LocalDeclaration" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.LocalDeclaration" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.LocalDeclaration">
      <fields elementName="binding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="LocalDeclaration" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="checkModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="getKind" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="LongLiteral.class" isClass="true" isInterface="false">
    <type elementName="LongLiteral" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.LongLiteral" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.LongLiteral">
      <fields elementName="FORMAT_ERROR" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="LongLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="computeConstant" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="literalType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="mayRepresentMIN_VALUE" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="LongLiteralMinValue.class" isClass="true" isInterface="false">
    <type elementName="LongLiteralMinValue" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue">
      <fields elementName="CharValue" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="MIN_VALUE" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="LongLiteralMinValue" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="computeConstant" returnType="V" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="MagicLiteral.class" isClass="true" isInterface="false">
    <type elementName="MagicLiteral" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.MagicLiteral" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.MagicLiteral">
      <methods elementName="MagicLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="isValidJavaStatement" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="source" returnType="[C" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="MarkerAnnotation.class" isClass="true" isInterface="false">
    <type elementName="MarkerAnnotation" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation">
      <methods elementName="MarkerAnnotation" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="memberValuePairs" returnType="[Lorg.eclipse.jdt.internal.compiler.ast.MemberValuePair;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="MemberValuePair.class" isClass="true" isInterface="false">
    <type elementName="MemberValuePair" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.MemberValuePair" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.MemberValuePair">
      <fields elementName="name" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="value" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="binding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="compilerElementPair" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.ElementValuePair;" isVolatile="false" isTransient="false"/>
      <methods elementName="MemberValuePair" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
      </methods>
      <methods elementName="print" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveTypeExpecting" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="MessageSend.class" isClass="true" isInterface="false">
    <type elementName="MessageSend" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.MessageSend" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.MessageSend">
      <fields elementName="receiver" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="selector" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="arguments" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="binding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="codegenBinding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="syntheticAccessor" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="expectedType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="nameSourcePosition" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="actualReceiverType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="receiverGenericCast" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="valueCast" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="typeArguments" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="genericTypeArguments" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="MessageSend" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="computeConversion" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="genericTypeArguments" returnType="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isSuperAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isTypeAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="manageSyntheticAccessIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="nullStatus" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="postConversionType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="setActualReceiverType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
      </methods>
      <methods elementName="setDepth" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="setExpectedType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="setFieldIndex" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="MethodDeclaration.class" isClass="true" isInterface="false">
    <type elementName="MethodDeclaration" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.MethodDeclaration" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.MethodDeclaration">
      <fields elementName="returnType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="typeParameters" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;" isVolatile="false" isTransient="false"/>
      <methods elementName="MethodDeclaration" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="analyseCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.InitializationFlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="isMethod" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseStatements" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="printReturnType" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveStatements" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="typeParameters" returnType="[Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="NameReference.class" isClass="true" isInterface="false">
    <type elementName="NameReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.NameReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.NameReference">
      <fields elementName="binding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.Binding;" isVolatile="false" isTransient="false"/>
      <fields elementName="codegenBinding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.Binding;" isVolatile="false" isTransient="false"/>
      <fields elementName="actualReceiverType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="NameReference" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="fieldBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isSuperAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isTypeAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isTypeReference" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="setActualReceiverType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
      </methods>
      <methods elementName="setDepth" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="setFieldIndex" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="unboundReferenceErrorName" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="NormalAnnotation.class" isClass="true" isInterface="false">
    <type elementName="NormalAnnotation" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.NormalAnnotation" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.NormalAnnotation">
      <fields elementName="memberValuePairs" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.MemberValuePair;" isVolatile="false" isTransient="false"/>
      <methods elementName="NormalAnnotation" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="computeElementValuePairs" returnType="[Lorg.eclipse.jdt.internal.compiler.lookup.ElementValuePair;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="memberValuePairs" returnType="[Lorg.eclipse.jdt.internal.compiler.ast.MemberValuePair;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="NullLiteral.class" isClass="true" isInterface="false">
    <type elementName="NullLiteral" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.NullLiteral" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.NullLiteral">
      <fields elementName="source" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="NullLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="computeConstant" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="literalType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="nullStatus" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="reusableJSRTarget" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="source" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="NumberLiteral.class" isClass="true" isInterface="false">
    <type elementName="NumberLiteral" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.NumberLiteral" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.NumberLiteral">
      <fields elementName="source" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <methods elementName="NumberLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="NumberLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="isValidJavaStatement" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="source" returnType="[C" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="OR_OR_Expression.class" isClass="true" isInterface="false">
    <type elementName="OR_OR_Expression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression">
      <fields elementName="rightInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="mergedInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="OR_OR_Expression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedBoolean" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="isCompactableOperation" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="OperatorExpression$1$Decode.class" isClass="true" isInterface="false">
    <type elementName="Decode" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.OperatorExpression.1.Decode">
      <methods elementName="Decode" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="constant" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="type" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="operator" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="OperatorExpression.class" isClass="true" isInterface="false">
    <type elementName="OperatorExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.OperatorExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.OperatorExpression">
      <fields elementName="OperatorSignatures" isEnumConstant="false" typeSignature="[[I" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="OperatorExpression" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="classInitialize" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateTableTestCase" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_AND" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_AND_AND" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_DIVIDE" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_EQUAL_EQUAL" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_GREATER" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_GREATER_EQUAL" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_LEFT_SHIFT" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_LESS" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_LESS_EQUAL" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_MINUS" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_MULTIPLY" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_OR" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_OR_OR" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_PLUS" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_REMAINDER" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_RIGHT_SHIFT" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_UNSIGNED_RIGHT_SHIFT" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="get_XOR" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="operatorToString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="nullStatus" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printExpressionNoParenthesis" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="OperatorIds.class" isClass="false" isInterface="true">
    <type elementName="OperatorIds" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.OperatorIds" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.OperatorIds">
      <fields elementName="AND_AND" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="OR_OR" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AND" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="OR" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LESS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LESS_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="GREATER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="GREATER_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="XOR" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DIVIDE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LEFT_SHIFT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NOT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TWIDDLE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MINUS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="PLUS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MULTIPLY" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="REMAINDER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="RIGHT_SHIFT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="EQUAL_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UNSIGNED_RIGHT_SHIFT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NumberOfTables" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="QUESTIONCOLON" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NOT_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="INSTANCEOF" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="PLUS_PLUS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MINUS_MINUS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
    </type>
  </classFiles>
  <classFiles elementName="ParameterizedQualifiedTypeReference.class" isClass="true" isInterface="false">
    <type elementName="ParameterizedQualifiedTypeReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference">
      <fields elementName="typeArguments" isEnumConstant="false" typeSignature="[[Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <methods elementName="ParameterizedQualifiedTypeReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="[[Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="[J"/>
      </methods>
      <methods elementName="checkBounds" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="checkBounds" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="copyDims" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getParameterizedTypeName" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="internalResolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ParameterizedSingleTypeReference.class" isClass="true" isInterface="false">
    <type elementName="ParameterizedSingleTypeReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference">
      <fields elementName="typeArguments" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <methods elementName="ParameterizedSingleTypeReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="J"/>
      </methods>
      <methods elementName="checkBounds" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="copyDims" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getParameterizedTypeName" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="internalResolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="resolveTypeEnclosing" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="PostfixExpression.class" isClass="true" isInterface="false">
    <type elementName="PostfixExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.PostfixExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.PostfixExpression">
      <methods elementName="PostfixExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="operatorToString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printExpressionNoParenthesis" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="restrainUsageToNumericTypes" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="PrefixExpression.class" isClass="true" isInterface="false">
    <type elementName="PrefixExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.PrefixExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.PrefixExpression">
      <methods elementName="PrefixExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="operatorToString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printExpressionNoParenthesis" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="restrainUsageToNumericTypes" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="QualifiedAllocationExpression.class" isClass="true" isInterface="false">
    <type elementName="QualifiedAllocationExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression">
      <fields elementName="enclosingInstance" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="anonymousType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isVolatile="false" isTransient="false"/>
      <methods elementName="QualifiedAllocationExpression" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="QualifiedAllocationExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="enclosingInstance" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="isSuperAccess" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="manageEnclosingInstanceAccessIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="QualifiedNameReference.class" isClass="true" isInterface="false">
    <type elementName="QualifiedNameReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference">
      <fields elementName="tokens" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="sourcePositions" isEnumConstant="false" typeSignature="[J" isVolatile="false" isTransient="false"/>
      <fields elementName="otherBindings" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="otherCodegenBindings" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="otherDepths" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="indexOfFirstFieldBinding" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="syntheticWriteAccessor" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="syntheticReadAccessors" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="genericCast" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="otherGenericCasts" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="QualifiedNameReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="[J"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="analyseAssignment" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.Assignment;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="checkFieldAccess" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="checkNPE" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="computeConversion" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="generateAssignment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.Assignment;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateCompoundAssignment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="Z"/>
      </methods>
      <methods elementName="generatePostIncrement" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.CompoundAssignment;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="generateReadSequence" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="generateReceiver" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="genericTypeArguments" returnType="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCodegenBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getGenericCast" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getOtherFieldBindings" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="manageEnclosingInstanceAccessIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="manageSyntheticAccessIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="nullStatus" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="optimizedBooleanConstant" returnType="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="postConversionType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="reportError" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="setCodegenBinding" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;"/>
      </methods>
      <methods elementName="setFieldIndex" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="setGenericCast" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="setSyntheticAccessor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="unboundReferenceErrorName" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="QualifiedSuperReference.class" isClass="true" isInterface="false">
    <type elementName="QualifiedSuperReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference">
      <methods elementName="QualifiedSuperReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="isSuper" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isThis" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="QualifiedThisReference.class" isClass="true" isInterface="false">
    <type elementName="QualifiedThisReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference">
      <fields elementName="qualification" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="currentCompatibleType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="QualifiedThisReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="QualifiedTypeReference.class" isClass="true" isInterface="false">
    <type elementName="QualifiedTypeReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference">
      <fields elementName="tokens" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="sourcePositions" isEnumConstant="false" typeSignature="[J" isVolatile="false" isTransient="false"/>
      <methods elementName="QualifiedTypeReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="[J"/>
      </methods>
      <methods elementName="copyDims" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="findNextTypeBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.PackageBinding;"/>
      </methods>
      <methods elementName="getLastToken" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="getTypeName" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="Reference.class" isClass="true" isInterface="false">
    <type elementName="Reference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.Reference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.Reference">
      <methods elementName="Reference" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="analyseAssignment" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.Assignment;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="fieldBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="fieldStore" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="generateAssignment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.Assignment;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="generateCompoundAssignment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="Z"/>
      </methods>
      <methods elementName="generatePostIncrement" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.CompoundAssignment;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ReturnStatement.class" isClass="true" isInterface="false">
    <type elementName="ReturnStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ReturnStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ReturnStatement">
      <fields elementName="expression" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="subroutines" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.SubRoutineStatement;" isVolatile="false" isTransient="false"/>
      <fields elementName="saveValueVariable" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="initStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="ReturnStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="generateReturnBytecode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="generateStoreSaveValueIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="needValueStore" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="needValue" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="prepareSaveValueLocation" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TryStatement;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="SingleMemberAnnotation.class" isClass="true" isInterface="false">
    <type elementName="SingleMemberAnnotation" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation">
      <fields elementName="memberValue" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="singlePairs" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.MemberValuePair;" isVolatile="false" isTransient="false"/>
      <methods elementName="SingleMemberAnnotation" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="computeElementValuePairs" returnType="[Lorg.eclipse.jdt.internal.compiler.lookup.ElementValuePair;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="memberValuePairs" returnType="[Lorg.eclipse.jdt.internal.compiler.ast.MemberValuePair;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="SingleNameReference.class" isClass="true" isInterface="false">
    <type elementName="SingleNameReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.SingleNameReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.SingleNameReference">
      <fields elementName="READ" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="WRITE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="token" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="syntheticAccessors" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="genericCast" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="SingleNameReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="J"/>
      </methods>
      <methods elementName="analyseAssignment" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.Assignment;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="checkFieldAccess" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="computeConversion" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="generateAssignment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.Assignment;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateCompoundAssignment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="Z"/>
      </methods>
      <methods elementName="generateCompoundAssignment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="I"/>
        <parameters name="arg6" type="Z"/>
      </methods>
      <methods elementName="generatePostIncrement" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.CompoundAssignment;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="generateReceiver" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="genericTypeArguments" returnType="[Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="localVariableBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="manageEnclosingInstanceAccessIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="manageSyntheticAccessIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="nullStatus" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="postConversionType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="reportError" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="unboundReferenceErrorName" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="SingleTypeReference.class" isClass="true" isInterface="false">
    <type elementName="SingleTypeReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.SingleTypeReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.SingleTypeReference">
      <fields elementName="token" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <methods elementName="SingleTypeReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="J"/>
      </methods>
      <methods elementName="copyDims" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getLastToken" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="getTypeName" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveTypeEnclosing" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="Statement.class" isClass="true" isInterface="false">
    <type elementName="Statement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.Statement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.Statement">
      <methods elementName="Statement" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="branchChainTo" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
      </methods>
      <methods elementName="complainIfUnreachable" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateArguments" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg1" type="[Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="isEmptyBlock" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isValidJavaStatement" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="print" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolveCase" returnType="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.SwitchStatement;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="StringLiteral.class" isClass="true" isInterface="false">
    <type elementName="StringLiteral" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.StringLiteral" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.StringLiteral">
      <fields elementName="source" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="lineNumber" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="StringLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="StringLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="computeConstant" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="extendWith" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CharLiteral;"/>
      </methods>
      <methods elementName="extendWith" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteral;"/>
      </methods>
      <methods elementName="extendsWith" returnType="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteral;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="literalType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="source" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="StringLiteralConcatenation.class" isClass="true" isInterface="false">
    <type elementName="StringLiteralConcatenation" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation">
      <fields elementName="INITIAL_SIZE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="literals" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="counter" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="StringLiteralConcatenation" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteral;"/>
      </methods>
      <methods elementName="extendsWith" returnType="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteral;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="source" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="SubRoutineStatement.class" isClass="true" isInterface="false">
    <type elementName="SubRoutineStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement">
      <fields elementName="anyExceptionLabel" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.ExceptionLabel;" isVolatile="false" isTransient="false"/>
      <methods elementName="SubRoutineStatement" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="reenterAllExceptionHandlers" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.ast.SubRoutineStatement;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="enterAnyExceptionHandler" returnType="Lorg.eclipse.jdt.internal.compiler.codegen.ExceptionLabel;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="enterDeclaredExceptionHandlers" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="exitAnyExceptionHandler" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="exitDeclaredExceptionHandlers" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="generateSubRoutineInvocation" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Ljava.lang.Object;"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;"/>
      </methods>
      <methods elementName="isSubRoutineEscaping" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="placeAllAnyExceptionHandler" returnType="V" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="SuperReference.class" isClass="true" isInterface="false">
    <type elementName="SuperReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.SuperReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.SuperReference">
      <methods elementName="SuperReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="implicitSuperConstructorCall" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isImplicitThis" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isSuper" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isThis" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="SwitchStatement.class" isClass="true" isInterface="false">
    <type elementName="SwitchStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.SwitchStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.SwitchStatement">
      <fields elementName="expression" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="statements" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isVolatile="false" isTransient="false"/>
      <fields elementName="scope" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;" isVolatile="false" isTransient="false"/>
      <fields elementName="explicitDeclarations" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="breakLabel" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;" isVolatile="false" isTransient="false"/>
      <fields elementName="cases" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.CaseStatement;" isVolatile="false" isTransient="false"/>
      <fields elementName="defaultCase" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.CaseStatement;" isVolatile="false" isTransient="false"/>
      <fields elementName="blockStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="caseCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="constants" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="CASE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FALLTHROUGH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ESCAPING" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="synthetic" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="preSwitchInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="mergedInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="SwitchStatement" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="branchChainTo" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="SynchronizedStatement.class" isClass="true" isInterface="false">
    <type elementName="SynchronizedStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement">
      <fields elementName="expression" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="block" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Block;" isVolatile="false" isTransient="false"/>
      <fields elementName="scope" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;" isVolatile="false" isTransient="false"/>
      <fields elementName="synchroVariable" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="SecretLocalDeclarationName" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="preSynchronizedInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="mergedSynchronizedInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="SynchronizedStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Block;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="isSubRoutineEscaping" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="generateSubRoutineInvocation" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Ljava.lang.Object;"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ThisReference.class" isClass="true" isInterface="false">
    <type elementName="ThisReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ThisReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ThisReference">
      <methods elementName="implicitThis" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ThisReference;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="ThisReference" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="analyseAssignment" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.Assignment;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="checkAccess" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
      </methods>
      <methods elementName="generateAssignment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.Assignment;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateCompoundAssignment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="Z"/>
      </methods>
      <methods elementName="generatePostIncrement" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.CompoundAssignment;"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="isImplicitThis" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isThis" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="nullStatus" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ThrowStatement.class" isClass="true" isInterface="false">
    <type elementName="ThrowStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.ThrowStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.ThrowStatement">
      <fields elementName="exception" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="exceptionType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isVolatile="false" isTransient="false"/>
      <methods elementName="ThrowStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="TrueLiteral.class" isClass="true" isInterface="false">
    <type elementName="TrueLiteral" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.TrueLiteral" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.TrueLiteral">
      <fields elementName="source" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="TrueLiteral" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="computeConstant" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedBoolean" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="literalType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="source" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="TryStatement.class" isClass="true" isInterface="false">
    <type elementName="TryStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.TryStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.TryStatement">
      <fields elementName="SECRET_RETURN_ADDRESS_NAME" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="SECRET_ANY_HANDLER_NAME" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="SECRET_RETURN_VALUE_NAME" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="tryBlock" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Block;" isVolatile="false" isTransient="false"/>
      <fields elementName="catchBlocks" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Block;" isVolatile="false" isTransient="false"/>
      <fields elementName="catchArguments" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Argument;" isVolatile="false" isTransient="false"/>
      <fields elementName="finallyBlock" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Block;" isVolatile="false" isTransient="false"/>
      <fields elementName="scope" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;" isVolatile="false" isTransient="false"/>
      <fields elementName="subRoutineInits" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo;" isVolatile="false" isTransient="false"/>
      <fields elementName="caughtExceptionTypes" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="catchExits" isEnumConstant="false" typeSignature="[Z" isVolatile="false" isTransient="false"/>
      <fields elementName="subRoutineStartLabel" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;" isVolatile="false" isTransient="false"/>
      <fields elementName="anyExceptionVariable" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="returnAddressVariable" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="secretReturnValue" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="declaredExceptionLabels" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.codegen.ExceptionLabel;" isVolatile="false" isTransient="false"/>
      <fields elementName="reusableJSRTargets" isEnumConstant="false" typeSignature="[Ljava.lang.Object;" isVolatile="false" isTransient="false"/>
      <fields elementName="reusableJSRSequenceStartLabels" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;" isVolatile="false" isTransient="false"/>
      <fields elementName="reusableJSRStateIndexes" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="reusableJSRTargetsCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NO_FINALLY" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FINALLY_SUBROUTINE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FINALLY_DOES_NOT_COMPLETE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FINALLY_INLINE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="mergedInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="preTryInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="naturalExitMergeInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="catchExitInitStateIndexes" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="TryStatement" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="enterAnyExceptionHandler" returnType="Lorg.eclipse.jdt.internal.compiler.codegen.ExceptionLabel;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="enterDeclaredExceptionHandlers" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="exitAnyExceptionHandler" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="exitDeclaredExceptionHandlers" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="finallyMode" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="generateSubRoutineInvocation" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Ljava.lang.Object;"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;"/>
      </methods>
      <methods elementName="isSubRoutineEscaping" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="TypeDeclaration.class" isClass="true" isInterface="false">
    <type elementName="TypeDeclaration" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.TypeDeclaration" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.TypeDeclaration">
      <fields elementName="CLASS_DECL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="INTERFACE_DECL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ENUM_DECL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ANNOTATION_TYPE_DECL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiersSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="annotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="name" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="superclass" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="superInterfaces" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="fields" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="methods" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="memberTypes" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="binding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="scope" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;" isVolatile="false" isTransient="false"/>
      <fields elementName="initializerScope" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;" isVolatile="false" isTransient="false"/>
      <fields elementName="staticInitializerScope" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;" isVolatile="false" isTransient="false"/>
      <fields elementName="ignoreFurtherInvestigation" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="maxFieldCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="declarationSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="declarationSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="bodyStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="bodyEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="compilationResult" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.CompilationResult;" isVolatile="false" isTransient="false"/>
      <fields elementName="missingAbstractMethods" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.MethodDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="javadoc" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Javadoc;" isVolatile="false" isTransient="false"/>
      <fields elementName="allocation" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;" isVolatile="false" isTransient="false"/>
      <fields elementName="enclosingType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="enumValuesSyntheticfield" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="typeParameters" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;" isVolatile="false" isTransient="false"/>
      <methods elementName="TypeDeclaration" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="abort" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
      </methods>
      <methods elementName="addClinit" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="addMissingAbstractMethodFor" returnType="Lorg.eclipse.jdt.internal.compiler.ast.MethodDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="analyseCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="analyseCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="analyseCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;"/>
      </methods>
      <methods elementName="checkConstructors" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
      </methods>
      <methods elementName="compilationResult" returnType="Lorg.eclipse.jdt.internal.compiler.CompilationResult;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="createDefaultConstructor" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="createDefaultConstructorWithBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
      </methods>
      <methods elementName="declarationOf" returnType="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;"/>
      </methods>
      <methods elementName="declarationOf" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding;"/>
      </methods>
      <methods elementName="declarationOf" returnType="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
      </methods>
      <methods elementName="declarationOfType" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ClassFile;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ClassFile;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;"/>
      </methods>
      <methods elementName="hasErrors" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="internalAnalyseCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="kind" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="manageEnclosingInstanceAccessIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="manageEnclosingInstanceAccessIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="needClassInitMethod" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseMethods" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="print" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printBody" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printHeader" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;"/>
      </methods>
      <methods elementName="tagAsHavingErrors" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="updateMaxFieldCount" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isSecondary" returnType="Z" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="TypeParameter.class" isClass="true" isInterface="false">
    <type elementName="TypeParameter" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.TypeParameter" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.TypeParameter">
      <fields elementName="binding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="bounds" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <methods elementName="TypeParameter" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="getKind" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="checkBounds" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="internalResolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="TypeReference.class" isClass="true" isInterface="false">
    <type elementName="TypeReference" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.TypeReference" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.TypeReference">
      <methods elementName="TypeReference" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="baseTypeReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="aboutToResolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="checkBounds" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="copyDims" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="dimensions" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getLastToken" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getParameterizedTypeName" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeBinding" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="getTypeName" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="internalResolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="isTypeReference" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="reportDeprecatedType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="reportInvalidType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
      </methods>
      <methods elementName="resolveSuperType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="resolveTypeArgument" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="resolveTypeArgument" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="UnaryExpression.class" isClass="true" isInterface="false">
    <type elementName="UnaryExpression" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.UnaryExpression" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.UnaryExpression">
      <fields elementName="expression" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="optimizedBooleanConstant" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isVolatile="false" isTransient="false"/>
      <methods elementName="UnaryExpression" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="optimizedBooleanConstant" returnType="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="generateOptimizedBoolean" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="printExpressionNoParenthesis" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="WhileStatement.class" isClass="true" isInterface="false">
    <type elementName="WhileStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.WhileStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.WhileStatement">
      <fields elementName="condition" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="action" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isVolatile="false" isTransient="false"/>
      <fields elementName="breakLabel" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;" isVolatile="false" isTransient="false"/>
      <fields elementName="continueLabel" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.BranchLabel;" isVolatile="false" isTransient="false"/>
      <fields elementName="preCondInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="condIfTrueInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="mergedInitStateIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="WhileStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="analyseCode" returnType="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowContext;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.flow.FlowInfo;"/>
      </methods>
      <methods elementName="generateCode" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;"/>
      </methods>
      <methods elementName="resolve" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="printStatement" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="Wildcard.class" isClass="true" isInterface="false">
    <type elementName="Wildcard" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.Wildcard" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ast.Wildcard">
      <fields elementName="UNBOUND" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="EXTENDS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SUPER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="bound" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isVolatile="false" isTransient="false"/>
      <fields elementName="kind" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="Wildcard" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getParameterizedTypeName" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeName" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="internalResolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.Scope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="printExpression" returnType="Ljava.lang.StringBuffer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Ljava.lang.StringBuffer;"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="resolveType" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="resolveTypeArgument" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="resolveTypeArgument" returnType="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
</core:IPackageFragment>
