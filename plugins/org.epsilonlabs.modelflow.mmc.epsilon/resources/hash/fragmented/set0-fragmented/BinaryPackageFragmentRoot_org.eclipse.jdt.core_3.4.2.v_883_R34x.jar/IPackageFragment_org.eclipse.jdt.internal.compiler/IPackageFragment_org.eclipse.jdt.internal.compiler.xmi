<?xml version="1.0" encoding="ASCII"?>
<core:IPackageFragment xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:core="org.amma.dsl.jdt.core" elementName="org.eclipse.jdt.internal.compiler" isDefaultPackage="false">
  <packageFragmentRoot xsi:type="core:BinaryPackageFragmentRoot" href="../BinaryPackageFragmentRoot_org.eclipse.jdt.core_3.4.2.v_883_R34x.jar.xmi#/"/>
  <classFiles elementName="ASTVisitor.class" isClass="true" isInterface="false">
    <type elementName="ASTVisitor" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ASTVisitor" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ASTVisitor">
      <methods elementName="ASTVisitor" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="acceptProblem" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.compiler.IProblem;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AllocationExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AND_AND_Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Argument;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Argument;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ArrayInitializer;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ArrayReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AssertStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Assignment;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.BinaryExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Block;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.BreakStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CaseStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CastExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CharLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Clinit;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CompoundAssignment;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ConditionalExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ContinueStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.DoStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.DoubleLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.EmptyStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.EqualExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FalseLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FloatLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ForeachStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ForStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.IfStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ImportReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Initializer;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.InstanceOfExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.IntLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Javadoc;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Javadoc;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocFieldReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocFieldReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocMessageSend;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocMessageSend;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.LabeledStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.LocalDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.LongLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.MarkerAnnotation;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.MemberValuePair;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.MessageSend;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.MethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.NormalAnnotation;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.NullLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.OR_OR_Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.PostfixExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.PrefixExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedThisReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedThisReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ReturnStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SingleNameReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SingleNameReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SuperReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SwitchStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SynchronizedStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ThisReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ThisReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ThrowStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TrueLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TryStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.UnaryExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.WhileStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Wildcard;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Wildcard;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AllocationExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AND_AND_Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Argument;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Argument;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ArrayInitializer;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ArrayReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ArrayTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AssertStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Assignment;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.BinaryExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Block;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.BreakStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CaseStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CastExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CharLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Clinit;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CompoundAssignment;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ConditionalExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ContinueStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.DoStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.DoubleLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.EmptyStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.EqualExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FalseLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FloatLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ForeachStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ForStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.IfStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ImportReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Initializer;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.InstanceOfExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.IntLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Javadoc;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Javadoc;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocFieldReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocFieldReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocMessageSend;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocMessageSend;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.LabeledStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.LocalDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.LongLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.MarkerAnnotation;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.MemberValuePair;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.MessageSend;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.MethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.NormalAnnotation;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.NullLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.OR_OR_Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.PostfixExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.PrefixExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedThisReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedThisReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ReturnStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SingleNameReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SingleNameReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SingleTypeReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SuperReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SwitchStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.SynchronizedStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ThisReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ThisReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ThrowStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TrueLiteral;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TryStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.UnaryExpression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.WhileStatement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Wildcard;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Wildcard;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="AbstractAnnotationProcessorManager.class" isClass="true" isInterface="false">
    <type elementName="AbstractAnnotationProcessorManager" fullyQualifiedName="org.eclipse.jdt.internal.compiler.AbstractAnnotationProcessorManager" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.AbstractAnnotationProcessorManager">
      <methods elementName="AbstractAnnotationProcessorManager" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="configure" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
        <parameters name="arg1" type="[Ljava.lang.String;"/>
      </methods>
      <methods elementName="configureFromPlatform" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.Compiler;"/>
        <parameters name="arg1" type="Ljava.lang.Object;"/>
        <parameters name="arg2" type="Ljava.lang.Object;"/>
      </methods>
      <methods elementName="setOut" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.io.PrintWriter;"/>
      </methods>
      <methods elementName="setErr" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.io.PrintWriter;"/>
      </methods>
      <methods elementName="getNewUnits" returnType="[Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getNewClassFiles" returnType="[Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getDeletedUnits" returnType="[Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="reset" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="processAnnotations" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
        <parameters name="arg1" type="[Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="setProcessors" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Ljava.lang.Object;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ClassFile$1.class" isClass="true" isInterface="false">
    <type elementName="" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ClassFile$1" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ClassFile.1">
      <fields elementName="this$0" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ClassFile;" isVolatile="false" isTransient="false"/>
      <methods elementName="" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ClassFile;"/>
      </methods>
      <methods elementName="compare" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
        <parameters name="arg1" type="Ljava.lang.Object;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ClassFile$2.class" isClass="true" isInterface="false">
    <type elementName="" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ClassFile$2" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ClassFile.2">
      <fields elementName="this$0" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ClassFile;" isVolatile="false" isTransient="false"/>
      <methods elementName="" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ClassFile;"/>
      </methods>
      <methods elementName="compare" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
        <parameters name="arg1" type="Ljava.lang.Object;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ClassFile.class" isClass="true" isInterface="false">
    <type elementName="ClassFile" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ClassFile" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ClassFile">
      <fields elementName="bytes" isEnumConstant="false" typeSignature="[B" isVolatile="false" isTransient="false"/>
      <fields elementName="codeStream" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.CodeStream;" isVolatile="false" isTransient="false"/>
      <fields elementName="constantPool" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.codegen.ConstantPool;" isVolatile="false" isTransient="false"/>
      <fields elementName="constantPoolOffset" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="contents" isEnumConstant="false" typeSignature="[B" isVolatile="false" isTransient="false"/>
      <fields elementName="contentsOffset" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="creatingProblemType" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="enclosingClassFile" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ClassFile;" isVolatile="false" isTransient="false"/>
      <fields elementName="header" isEnumConstant="false" typeSignature="[B" isVolatile="false" isTransient="false"/>
      <fields elementName="headerOffset" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="innerClassesBindings" isEnumConstant="false" typeSignature="Ljava.util.Set;" isVolatile="false" isTransient="false"/>
      <fields elementName="methodCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="methodCountOffset" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="isShared" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="produceAttributes" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="referenceBinding" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="isNestedType" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="targetJDK" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="missingTypes" isEnumConstant="false" typeSignature="Ljava.util.List;" isVolatile="false" isTransient="false"/>
      <fields elementName="INITIAL_CONTENTS_SIZE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="INITIAL_HEADER_SIZE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="INNER_CLASSES_SIZE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="createProblemType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="getNewInstance" returnType="Lorg.eclipse.jdt.internal.compiler.ClassFile;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;"/>
      </methods>
      <methods elementName="ClassFile" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="ClassFile" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;"/>
      </methods>
      <methods elementName="addAbstractMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
      </methods>
      <methods elementName="addAttributes" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="addDefaultAbstractMethods" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="addFieldAttributes" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="addFieldInfo" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.FieldBinding;"/>
      </methods>
      <methods elementName="addFieldInfos" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="addMissingAbstractProblemMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.MethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="addProblemClinit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
      </methods>
      <methods elementName="addProblemConstructor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg2" type="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
      </methods>
      <methods elementName="addProblemConstructor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg2" type="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="addProblemMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg2" type="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
      </methods>
      <methods elementName="addProblemMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg2" type="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="addSpecialMethods" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="addSyntheticConstructorAccessMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;"/>
      </methods>
      <methods elementName="addSyntheticEnumValueOfMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;"/>
      </methods>
      <methods elementName="addSyntheticEnumValuesMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;"/>
      </methods>
      <methods elementName="addSyntheticFieldReadAccessMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;"/>
      </methods>
      <methods elementName="addSyntheticFieldWriteAccessMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;"/>
      </methods>
      <methods elementName="addSyntheticMethodAccessMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;"/>
      </methods>
      <methods elementName="addSyntheticSwitchTable" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;"/>
      </methods>
      <methods elementName="completeCodeAttribute" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="completeCodeAttributeForClinit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="completeCodeAttributeForClinit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="completeCodeAttributeForMissingAbstractProblemMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="completeCodeAttributeForProblemMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="[I"/>
        <parameters name="arg4" type="I"/>
      </methods>
      <methods elementName="completeCodeAttributeForSyntheticMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="[I"/>
      </methods>
      <methods elementName="completeCodeAttributeForSyntheticMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[I"/>
      </methods>
      <methods elementName="completeMethodInfo" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="fileName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateAnnotation" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Annotation;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="generateCodeAttributeHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateElementValue" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="generateElementValue" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.impl.Constant;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="generateElementValueForNonConstantExpression" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="generateMethodInfoAttribute" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
      </methods>
      <methods elementName="generateMethodInfoAttribute" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration;"/>
      </methods>
      <methods elementName="generateMethodInfoHeader" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
      </methods>
      <methods elementName="generateMethodInfoHeader" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="generateMethodInfoHeaderForClinit" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateMissingAbstractMethods" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.ast.MethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="generateMissingTypesAttribute" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="generateRuntimeAnnotations" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;"/>
      </methods>
      <methods elementName="generateRuntimeAnnotationsForParameters" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.ast.Argument;"/>
      </methods>
      <methods elementName="getBytes" returnType="[B" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCompoundName" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getParametersCount" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="getReturnType" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="i4At" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[B"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="initByteArrays" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="initialize" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ClassFile;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="initializeDefaultLocals" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.codegen.StackMapFrame;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="initializeLocals" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.codegen.StackMapFrame;"/>
      </methods>
      <methods elementName="isRuntimeInvisible" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Annotation;"/>
      </methods>
      <methods elementName="isRuntimeVisible" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Annotation;"/>
      </methods>
      <methods elementName="outerMostEnclosingClassFile" returnType="Lorg.eclipse.jdt.internal.compiler.ClassFile;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="recordInnerClasses" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.TypeBinding;"/>
      </methods>
      <methods elementName="reset" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;"/>
      </methods>
      <methods elementName="resizeContents" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="retrieveLocal" returnType="Lorg.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="scanType" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="setForMethodInfos" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="traverse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodBinding;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[B"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="Ljava.util.ArrayList;"/>
        <parameters name="arg6" type="Z"/>
      </methods>
      <methods elementName="u1At" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[B"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="u2At" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[B"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="u4At" returnType="J" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[B"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="utf8At" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[B"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ClassFilePool.class" isClass="true" isInterface="false">
    <type elementName="ClassFilePool" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ClassFilePool" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ClassFilePool">
      <fields elementName="POOL_SIZE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="classFiles" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ClassFile;" isVolatile="false" isTransient="false"/>
      <methods elementName="ClassFilePool" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="newInstance" returnType="Lorg.eclipse.jdt.internal.compiler.ClassFilePool;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="acquire" returnType="Lorg.eclipse.jdt.internal.compiler.ClassFile;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding;"/>
      </methods>
      <methods elementName="release" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ClassFile;"/>
      </methods>
      <methods elementName="reset" returnType="V" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="CompilationResult$1.class" isClass="true" isInterface="false">
    <type elementName="" fullyQualifiedName="org.eclipse.jdt.internal.compiler.CompilationResult$1" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.CompilationResult.1">
      <methods elementName="" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="compare" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
        <parameters name="arg1" type="Ljava.lang.Object;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="CompilationResult.class" isClass="true" isInterface="false">
    <type elementName="CompilationResult" fullyQualifiedName="org.eclipse.jdt.internal.compiler.CompilationResult" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.CompilationResult">
      <fields elementName="problems" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;" isVolatile="false" isTransient="false"/>
      <fields elementName="tasks" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;" isVolatile="false" isTransient="false"/>
      <fields elementName="problemCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="taskCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="compilationUnit" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;" isVolatile="false" isTransient="false"/>
      <fields elementName="problemsMap" isEnumConstant="false" typeSignature="Ljava.util.Map;" isVolatile="false" isTransient="false"/>
      <fields elementName="firstErrors" isEnumConstant="false" typeSignature="Ljava.util.Set;" isVolatile="false" isTransient="false"/>
      <fields elementName="maxProblemPerUnit" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="qualifiedReferences" isEnumConstant="false" typeSignature="[[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="simpleNameReferences" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="hasAnnotations" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="lineSeparatorPositions" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="recoveryScannerData" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.RecoveryScannerData;" isVolatile="false" isTransient="false"/>
      <fields elementName="compiledTypes" isEnumConstant="false" typeSignature="Ljava.util.Map;" isVolatile="false" isTransient="false"/>
      <fields elementName="unitIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="totalUnitsKnown" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="hasBeenAccepted" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="fileName" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="hasInconsistentToplevelHierarchies" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="hasSyntaxError" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="packageName" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="checkSecondaryTypes" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="EMPTY_LINE_ENDS" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="PROBLEM_COMPARATOR" isEnumConstant="false" typeSignature="Ljava.util.Comparator;" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="CompilationResult" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="CompilationResult" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="computePriority" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
      </methods>
      <methods elementName="getAllProblems" returnType="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getClassFiles" returnType="[Lorg.eclipse.jdt.internal.compiler.ClassFile;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCompilationUnit" returnType="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getErrors" returnType="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getFileName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getLineSeparatorPositions" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getProblems" returnType="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTasks" returnType="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="hasErrors" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="hasProblems" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="hasTasks" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="hasWarnings" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="quickPrioritize" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="recordPackageName" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
      </methods>
      <methods elementName="record" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.impl.ReferenceContext;"/>
      </methods>
      <methods elementName="record" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ClassFile;"/>
      </methods>
      <methods elementName="recordTask" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
      </methods>
      <methods elementName="tagAsAccepted" returnType="Lorg.eclipse.jdt.internal.compiler.CompilationResult;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="Compiler$1.class" isClass="true" isInterface="false">
    <type elementName="" fullyQualifiedName="org.eclipse.jdt.internal.compiler.Compiler$1" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.Compiler.1">
      <fields elementName="this$0" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.Compiler;" isVolatile="false" isTransient="false"/>
      <fields elementName="val$requestor" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ICompilerRequestor;" isVolatile="false" isTransient="false"/>
      <methods elementName="" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.Compiler;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ICompilerRequestor;"/>
      </methods>
      <methods elementName="acceptResult" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="Compiler.class" isClass="true" isInterface="false">
    <type elementName="Compiler" fullyQualifiedName="org.eclipse.jdt.internal.compiler.Compiler" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.Compiler">
      <fields elementName="parser" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.Parser;" isVolatile="false" isTransient="false"/>
      <fields elementName="requestor" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ICompilerRequestor;" isVolatile="false" isTransient="false"/>
      <fields elementName="options" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.impl.CompilerOptions;" isVolatile="false" isTransient="false"/>
      <fields elementName="problemReporter" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.problem.ProblemReporter;" isVolatile="false" isTransient="false"/>
      <fields elementName="out" isEnumConstant="false" typeSignature="Ljava.io.PrintWriter;" isVolatile="false" isTransient="false"/>
      <fields elementName="stats" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.impl.CompilerStats;" isVolatile="false" isTransient="false"/>
      <fields elementName="progress" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.core.compiler.CompilationProgress;" isVolatile="false" isTransient="false"/>
      <fields elementName="remainingIterations" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="unitsToProcess" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="totalUnits" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="lookupEnvironment" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.lookup.LookupEnvironment;" isVolatile="false" isTransient="false"/>
      <fields elementName="DEBUG" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="parseThreshold" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="annotationProcessorManager" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.AbstractAnnotationProcessorManager;" isVolatile="false" isTransient="false"/>
      <fields elementName="referenceBindings" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;" isVolatile="false" isTransient="false"/>
      <fields elementName="useSingleThread" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="DebugRequestor" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.IDebugRequestor;" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="Compiler" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.INameEnvironment;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.IErrorHandlingPolicy;"/>
        <parameters name="arg2" type="Ljava.util.Map;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ICompilerRequestor;"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.IProblemFactory;"/>
      </methods>
      <methods elementName="Compiler" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.INameEnvironment;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.IErrorHandlingPolicy;"/>
        <parameters name="arg2" type="Ljava.util.Map;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ICompilerRequestor;"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.IProblemFactory;"/>
        <parameters name="arg5" type="Z"/>
      </methods>
      <methods elementName="Compiler" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.INameEnvironment;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.IErrorHandlingPolicy;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.impl.CompilerOptions;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ICompilerRequestor;"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.IProblemFactory;"/>
      </methods>
      <methods elementName="Compiler" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.INameEnvironment;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.IErrorHandlingPolicy;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.impl.CompilerOptions;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ICompilerRequestor;"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.IProblemFactory;"/>
        <parameters name="arg5" type="Ljava.io.PrintWriter;"/>
      </methods>
      <methods elementName="Compiler" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.INameEnvironment;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.IErrorHandlingPolicy;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.impl.CompilerOptions;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ICompilerRequestor;"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.IProblemFactory;"/>
        <parameters name="arg5" type="Ljava.io.PrintWriter;"/>
        <parameters name="arg6" type="Lorg.eclipse.jdt.core.compiler.CompilationProgress;"/>
      </methods>
      <methods elementName="accept" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.IBinaryType;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.PackageBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.env.AccessRestriction;"/>
      </methods>
      <methods elementName="accept" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.env.AccessRestriction;"/>
      </methods>
      <methods elementName="accept" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.env.ISourceType;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.PackageBinding;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.env.AccessRestriction;"/>
      </methods>
      <methods elementName="addCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="beginToCompile" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
      </methods>
      <methods elementName="reportProgress" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
      </methods>
      <methods elementName="reportWorked" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="compile" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
      </methods>
      <methods elementName="getUnitToProcess" returnType="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="setBinaryTypes" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;"/>
      </methods>
      <methods elementName="handleInternalException" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Throwable;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="handleInternalException" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.problem.AbortCompilation;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="initializeParser" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="internalBeginToCompile" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="process" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="processAnnotations" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="reset" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resolve" returnType="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
        <parameters name="arg2" type="Z"/>
        <parameters name="arg3" type="Z"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="resolve" returnType="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
        <parameters name="arg1" type="Z"/>
        <parameters name="arg2" type="Z"/>
        <parameters name="arg3" type="Z"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ConfigurableOption.class" isClass="true" isInterface="false">
    <type elementName="ConfigurableOption" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ConfigurableOption" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ConfigurableOption">
      <fields elementName="componentName" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="optionName" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="id" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="category" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="name" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="description" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="currentValueIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="possibleValues" isEnumConstant="false" typeSignature="[Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="NoDiscreteValue" isEnumConstant="false" typeSignature="[Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="ConfigurableOption" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="Ljava.lang.String;"/>
        <parameters name="arg2" type="Ljava.util.Locale;"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="getCategory" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getComponentName" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCurrentValueIndex" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getDescription" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getID" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getName" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getPossibleValues" returnType="[Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="setValueIndex" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getOptionName" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="DefaultErrorHandlingPolicies$1.class" isClass="true" isInterface="false">
    <type elementName="" fullyQualifiedName="org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$1" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.1">
      <methods elementName="" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="stopOnFirstError" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="proceedOnErrors" returnType="Z" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="DefaultErrorHandlingPolicies$2.class" isClass="true" isInterface="false">
    <type elementName="" fullyQualifiedName="org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$2" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.2">
      <methods elementName="" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="stopOnFirstError" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="proceedOnErrors" returnType="Z" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="DefaultErrorHandlingPolicies$3.class" isClass="true" isInterface="false">
    <type elementName="" fullyQualifiedName="org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$3" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.3">
      <methods elementName="" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="stopOnFirstError" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="proceedOnErrors" returnType="Z" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="DefaultErrorHandlingPolicies$4.class" isClass="true" isInterface="false">
    <type elementName="" fullyQualifiedName="org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$4" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies.4">
      <methods elementName="" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="stopOnFirstError" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="proceedOnErrors" returnType="Z" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="DefaultErrorHandlingPolicies.class" isClass="true" isInterface="false">
    <type elementName="DefaultErrorHandlingPolicies" fullyQualifiedName="org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies">
      <methods elementName="DefaultErrorHandlingPolicies" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="exitAfterAllProblems" returnType="Lorg.eclipse.jdt.internal.compiler.IErrorHandlingPolicy;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="exitOnFirstError" returnType="Lorg.eclipse.jdt.internal.compiler.IErrorHandlingPolicy;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="proceedOnFirstError" returnType="Lorg.eclipse.jdt.internal.compiler.IErrorHandlingPolicy;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="proceedWithAllProblems" returnType="Lorg.eclipse.jdt.internal.compiler.IErrorHandlingPolicy;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="DocumentElementParser.class" isClass="true" isInterface="false">
    <type elementName="DocumentElementParser" fullyQualifiedName="org.eclipse.jdt.internal.compiler.DocumentElementParser" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.DocumentElementParser">
      <fields elementName="requestor" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.IDocumentElementRequestor;" isVolatile="false" isTransient="false"/>
      <fields elementName="localIntPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="lastFieldEndPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="lastFieldBodyEndPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="typeStartPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="selectorSourcePositions" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="typeDims" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="extendsDim" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="declarationSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="intArrayStack" isEnumConstant="false" typeSignature="[[I" isVolatile="false" isTransient="false"/>
      <fields elementName="intArrayPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="DocumentElementParser" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.IDocumentElementRequestor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.IProblemFactory;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.impl.CompilerOptions;"/>
      </methods>
      <methods elementName="checkComment" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassBodyDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassHeaderName1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeConstructorDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeConstructorHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeConstructorHeaderName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeDefaultModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeDiet" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnterCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnterVariable" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeExitVariableWithInitialization" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeExitVariableWithoutInitialization" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeFieldDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeFormalParameter" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeInterfaceDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInterfaceHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInterfaceHeaderName1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInternalCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInternalCompilationUnitWithTypes" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeLocalVariableDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodDeclaration" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeMethodHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodHeaderExtendedDims" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodHeaderName" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePackageDeclarationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePackageDeclarationNameWithModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePushModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePushRealModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeSingleStaticImportDeclarationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeSingleTypeImportDeclarationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStaticImportOnDemandDeclarationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStaticInitializer" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStaticOnly" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeImportOnDemandDeclarationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="flushCommentsDefinedPriorTo" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="endParse" returnType="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="initialize" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="initialize" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isLocalDeclaration" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parse" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
      </methods>
      <methods elementName="parseConstructor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="parseField" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="parseImport" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="parseInitializer" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="parseMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="parsePackage" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="parseType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="problemReporter" returnType="Lorg.eclipse.jdt.internal.compiler.problem.ProblemReporter;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="pushOnIntArrayStack" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[I"/>
      </methods>
      <methods elementName="resetModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resumeOnSyntaxError" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="returnTypeName" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;"/>
      </methods>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="typeReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ICompilerRequestor.class" isClass="false" isInterface="true">
    <type elementName="ICompilerRequestor" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ICompilerRequestor" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ICompilerRequestor">
      <methods elementName="acceptResult" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="IDebugRequestor.class" isClass="false" isInterface="true">
    <type elementName="IDebugRequestor" fullyQualifiedName="org.eclipse.jdt.internal.compiler.IDebugRequestor" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.IDebugRequestor">
      <methods elementName="acceptDebugResult" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="isActive" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="activate" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="deactivate" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="reset" returnType="V" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="IDocumentElementRequestor.class" isClass="false" isInterface="true">
    <type elementName="IDocumentElementRequestor" fullyQualifiedName="org.eclipse.jdt.internal.compiler.IDocumentElementRequestor" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.IDocumentElementRequestor">
      <methods elementName="acceptImport" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[I"/>
        <parameters name="arg3" type="[C"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="Z"/>
        <parameters name="arg6" type="I"/>
      </methods>
      <methods elementName="acceptInitializer" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[I"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="I"/>
        <parameters name="arg6" type="I"/>
      </methods>
      <methods elementName="acceptLineSeparatorPositions" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[I"/>
      </methods>
      <methods elementName="acceptPackage" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[I"/>
        <parameters name="arg3" type="[C"/>
        <parameters name="arg4" type="I"/>
      </methods>
      <methods elementName="acceptProblem" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
      </methods>
      <methods elementName="enterClass" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="[I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="[C"/>
        <parameters name="arg6" type="I"/>
        <parameters name="arg7" type="I"/>
        <parameters name="arg8" type="[C"/>
        <parameters name="arg9" type="I"/>
        <parameters name="arg10" type="I"/>
        <parameters name="arg11" type="[[C"/>
        <parameters name="arg12" type="[I"/>
        <parameters name="arg13" type="[I"/>
        <parameters name="arg14" type="I"/>
      </methods>
      <methods elementName="enterCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="enterConstructor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="[I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="[C"/>
        <parameters name="arg5" type="I"/>
        <parameters name="arg6" type="I"/>
        <parameters name="arg7" type="[[C"/>
        <parameters name="arg8" type="[I"/>
        <parameters name="arg9" type="[I"/>
        <parameters name="arg10" type="[[C"/>
        <parameters name="arg11" type="[I"/>
        <parameters name="arg12" type="[I"/>
        <parameters name="arg13" type="I"/>
        <parameters name="arg14" type="[[C"/>
        <parameters name="arg15" type="[I"/>
        <parameters name="arg16" type="[I"/>
        <parameters name="arg17" type="I"/>
      </methods>
      <methods elementName="enterField" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="[I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="[C"/>
        <parameters name="arg5" type="I"/>
        <parameters name="arg6" type="I"/>
        <parameters name="arg7" type="I"/>
        <parameters name="arg8" type="[C"/>
        <parameters name="arg9" type="I"/>
        <parameters name="arg10" type="I"/>
        <parameters name="arg11" type="I"/>
        <parameters name="arg12" type="I"/>
      </methods>
      <methods elementName="enterInterface" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="[I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="[C"/>
        <parameters name="arg6" type="I"/>
        <parameters name="arg7" type="I"/>
        <parameters name="arg8" type="[[C"/>
        <parameters name="arg9" type="[I"/>
        <parameters name="arg10" type="[I"/>
        <parameters name="arg11" type="I"/>
      </methods>
      <methods elementName="enterMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="[I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="[C"/>
        <parameters name="arg5" type="I"/>
        <parameters name="arg6" type="I"/>
        <parameters name="arg7" type="I"/>
        <parameters name="arg8" type="[C"/>
        <parameters name="arg9" type="I"/>
        <parameters name="arg10" type="I"/>
        <parameters name="arg11" type="[[C"/>
        <parameters name="arg12" type="[I"/>
        <parameters name="arg13" type="[I"/>
        <parameters name="arg14" type="[[C"/>
        <parameters name="arg15" type="[I"/>
        <parameters name="arg16" type="[I"/>
        <parameters name="arg17" type="I"/>
        <parameters name="arg18" type="I"/>
        <parameters name="arg19" type="I"/>
        <parameters name="arg20" type="[[C"/>
        <parameters name="arg21" type="[I"/>
        <parameters name="arg22" type="[I"/>
        <parameters name="arg23" type="I"/>
      </methods>
      <methods elementName="exitClass" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="exitCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="exitConstructor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="exitField" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="exitInterface" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="exitMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="IErrorHandlingPolicy.class" isClass="false" isInterface="true">
    <type elementName="IErrorHandlingPolicy" fullyQualifiedName="org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy">
      <methods elementName="proceedOnErrors" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="stopOnFirstError" returnType="Z" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="IProblemFactory.class" isClass="false" isInterface="true">
    <type elementName="IProblemFactory" fullyQualifiedName="org.eclipse.jdt.internal.compiler.IProblemFactory" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.IProblemFactory">
      <methods elementName="createProblem" returnType="Lorg.eclipse.jdt.core.compiler.CategorizedProblem;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[Ljava.lang.String;"/>
        <parameters name="arg3" type="[Ljava.lang.String;"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="I"/>
        <parameters name="arg6" type="I"/>
        <parameters name="arg7" type="I"/>
        <parameters name="arg8" type="I"/>
      </methods>
      <methods elementName="createProblem" returnType="Lorg.eclipse.jdt.core.compiler.CategorizedProblem;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[Ljava.lang.String;"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="[Ljava.lang.String;"/>
        <parameters name="arg5" type="I"/>
        <parameters name="arg6" type="I"/>
        <parameters name="arg7" type="I"/>
        <parameters name="arg8" type="I"/>
        <parameters name="arg9" type="I"/>
      </methods>
      <methods elementName="getLocale" returnType="Ljava.util.Locale;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getLocalizedMessage" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="[Ljava.lang.String;"/>
      </methods>
      <methods elementName="getLocalizedMessage" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[Ljava.lang.String;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ISourceElementRequestor$FieldInfo.class" isClass="true" isInterface="false">
    <type elementName="FieldInfo" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor.FieldInfo">
      <fields elementName="declarationStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="type" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="name" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="nameSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="nameSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="categories" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="annotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="node" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;" isVolatile="false" isTransient="false"/>
      <methods elementName="FieldInfo" returnType="V" isConstructor="true" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="ISourceElementRequestor$MethodInfo.class" isClass="true" isInterface="false">
    <type elementName="MethodInfo" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor.MethodInfo">
      <fields elementName="isConstructor" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="isAnnotation" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="declarationStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="returnType" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="name" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="nameSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="nameSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="parameterTypes" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="parameterNames" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="exceptionTypes" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="typeParameters" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo;" isVolatile="false" isTransient="false"/>
      <fields elementName="categories" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="annotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="node" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;" isVolatile="false" isTransient="false"/>
      <methods elementName="MethodInfo" returnType="V" isConstructor="true" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="ISourceElementRequestor$TypeInfo.class" isClass="true" isInterface="false">
    <type elementName="TypeInfo" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor.TypeInfo">
      <fields elementName="declarationStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="name" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="nameSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="nameSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="superclass" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="superinterfaces" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="typeParameters" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo;" isVolatile="false" isTransient="false"/>
      <fields elementName="categories" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="secondary" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="anonymousMember" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="annotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="node" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isVolatile="false" isTransient="false"/>
      <methods elementName="TypeInfo" returnType="V" isConstructor="true" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="ISourceElementRequestor$TypeParameterInfo.class" isClass="true" isInterface="false">
    <type elementName="TypeParameterInfo" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor.TypeParameterInfo">
      <fields elementName="declarationStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="declarationEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="name" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="nameSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="nameSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="bounds" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <methods elementName="TypeParameterInfo" returnType="V" isConstructor="true" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="ISourceElementRequestor.class" isClass="false" isInterface="true">
    <type elementName="ISourceElementRequestor" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor">
      <methods elementName="acceptAnnotationTypeReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="acceptAnnotationTypeReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="acceptConstructorReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="acceptFieldReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="acceptImport" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[[C"/>
        <parameters name="arg3" type="Z"/>
        <parameters name="arg4" type="I"/>
      </methods>
      <methods elementName="acceptLineSeparatorPositions" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[I"/>
      </methods>
      <methods elementName="acceptMethodReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="acceptPackage" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ImportReference;"/>
      </methods>
      <methods elementName="acceptProblem" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
      </methods>
      <methods elementName="acceptTypeReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="acceptTypeReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="acceptUnknownReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="acceptUnknownReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="enterCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="enterConstructor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo;"/>
      </methods>
      <methods elementName="enterField" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo;"/>
      </methods>
      <methods elementName="enterInitializer" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="enterMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo;"/>
      </methods>
      <methods elementName="enterType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo;"/>
      </methods>
      <methods elementName="exitCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="exitConstructor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="exitField" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="exitInitializer" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="exitMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
      </methods>
      <methods elementName="exitType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <types elementName="FieldInfo" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor.FieldInfo">
        <fields elementName="declarationStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="type" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
        <fields elementName="name" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
        <fields elementName="nameSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="nameSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="categories" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
        <fields elementName="annotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;" isVolatile="false" isTransient="false"/>
        <fields elementName="node" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;" isVolatile="false" isTransient="false"/>
        <methods elementName="FieldInfo" returnType="V" isConstructor="true" isMainMethod="false"/>
      </types>
      <types elementName="MethodInfo" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor.MethodInfo">
        <fields elementName="isConstructor" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
        <fields elementName="isAnnotation" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
        <fields elementName="declarationStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="returnType" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
        <fields elementName="name" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
        <fields elementName="nameSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="nameSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="parameterTypes" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
        <fields elementName="parameterNames" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
        <fields elementName="exceptionTypes" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
        <fields elementName="typeParameters" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo;" isVolatile="false" isTransient="false"/>
        <fields elementName="categories" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
        <fields elementName="annotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;" isVolatile="false" isTransient="false"/>
        <fields elementName="node" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;" isVolatile="false" isTransient="false"/>
        <methods elementName="MethodInfo" returnType="V" isConstructor="true" isMainMethod="false"/>
      </types>
      <types elementName="TypeInfo" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor.TypeInfo">
        <fields elementName="declarationStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="name" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
        <fields elementName="nameSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="nameSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="superclass" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
        <fields elementName="superinterfaces" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
        <fields elementName="typeParameters" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo;" isVolatile="false" isTransient="false"/>
        <fields elementName="categories" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
        <fields elementName="secondary" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
        <fields elementName="anonymousMember" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
        <fields elementName="annotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;" isVolatile="false" isTransient="false"/>
        <fields elementName="node" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isVolatile="false" isTransient="false"/>
        <methods elementName="TypeInfo" returnType="V" isConstructor="true" isMainMethod="false"/>
      </types>
      <types elementName="TypeParameterInfo" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ISourceElementRequestor.TypeParameterInfo">
        <fields elementName="declarationStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="declarationEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="name" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
        <fields elementName="nameSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="nameSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
        <fields elementName="bounds" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
        <methods elementName="TypeParameterInfo" returnType="V" isConstructor="true" isMainMethod="false"/>
      </types>
    </type>
  </classFiles>
  <classFiles elementName="ProcessTaskManager.class" isClass="true" isInterface="false">
    <type elementName="ProcessTaskManager" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ProcessTaskManager" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ProcessTaskManager">
      <fields elementName="compiler" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.Compiler;" isVolatile="false" isTransient="false"/>
      <fields elementName="unitIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="processingThread" isEnumConstant="false" typeSignature="Ljava.lang.Thread;" isVolatile="false" isTransient="false"/>
      <fields elementName="unitToProcess" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="caughtException" isEnumConstant="false" typeSignature="Ljava.lang.Throwable;" isVolatile="false" isTransient="false"/>
      <fields elementName="currentIndex" isEnumConstant="false" typeSignature="I" isVolatile="true" isTransient="false"/>
      <fields elementName="availableIndex" isEnumConstant="false" typeSignature="I" isVolatile="true" isTransient="false"/>
      <fields elementName="size" isEnumConstant="false" typeSignature="I" isVolatile="true" isTransient="false"/>
      <fields elementName="sleepCount" isEnumConstant="false" typeSignature="I" isVolatile="true" isTransient="false"/>
      <fields elementName="units" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="PROCESSED_QUEUE_SIZE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="ProcessTaskManager" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.Compiler;"/>
      </methods>
      <methods elementName="addNextUnit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="removeNextUnit" returnType="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Ljava.lang.Error;</exceptionTypes>
      </methods>
      <methods elementName="run" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="shutdown" returnType="V" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="ReadManager.class" isClass="true" isInterface="false">
    <type elementName="ReadManager" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ReadManager" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.ReadManager">
      <fields elementName="units" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;" isVolatile="false" isTransient="false"/>
      <fields elementName="nextFileToRead" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="filesRead" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;" isVolatile="false" isTransient="false"/>
      <fields elementName="contentsRead" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="readyToReadPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="nextAvailablePosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="readingThreads" isEnumConstant="false" typeSignature="[Ljava.lang.Thread;" isVolatile="false" isTransient="false"/>
      <fields elementName="readInProcessMarker" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="sleepingThreadCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="caughtException" isEnumConstant="false" typeSignature="Ljava.lang.Throwable;" isVolatile="false" isTransient="false"/>
      <fields elementName="START_CUSHION" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="THRESHOLD" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CACHE_SIZE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="ReadManager" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="getContents" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
        <exceptionTypes>Ljava.lang.Error;</exceptionTypes>
      </methods>
      <methods elementName="run" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="shutdown" returnType="V" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="SourceElementNotifier$LocalDeclarationVisitor.class" isClass="true" isInterface="false">
    <type elementName="LocalDeclarationVisitor" fullyQualifiedName="org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.SourceElementNotifier.LocalDeclarationVisitor">
      <fields elementName="declaringTypes" isEnumConstant="false" typeSignature="Ljava.util.ArrayList;" isVolatile="false" isTransient="false"/>
      <fields elementName="this$0" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.SourceElementNotifier;" isVolatile="false" isTransient="false"/>
      <methods elementName="LocalDeclarationVisitor" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.SourceElementNotifier;"/>
      </methods>
      <methods elementName="pushDeclaringType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
      </methods>
      <methods elementName="popDeclaringType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="peekDeclaringType" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="SourceElementNotifier.class" isClass="true" isInterface="false">
    <type elementName="SourceElementNotifier" fullyQualifiedName="org.eclipse.jdt.internal.compiler.SourceElementNotifier" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.SourceElementNotifier">
      <fields elementName="requestor" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor;" isVolatile="false" isTransient="false"/>
      <fields elementName="reportReferenceInfo" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="typeNames" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="superTypeNames" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="nestedTypeIndex" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="localDeclarationVisitor" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor;" isVolatile="false" isTransient="false"/>
      <fields elementName="sourceEnds" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;" isVolatile="false" isTransient="false"/>
      <fields elementName="nodesToCategories" isEnumConstant="false" typeSignature="Ljava.util.Map;" isVolatile="false" isTransient="false"/>
      <fields elementName="initialPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="eofPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="SourceElementNotifier" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="getArguments" returnType="[[[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.ast.Argument;"/>
      </methods>
      <methods elementName="getInterfaceNames" returnType="[[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
      </methods>
      <methods elementName="getSuperclassName" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
      </methods>
      <methods elementName="getThrownExceptions" returnType="[[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
      </methods>
      <methods elementName="getTypeParameterBounds" returnType="[[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;"/>
      </methods>
      <methods elementName="getTypeParameterInfos" returnType="[Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;"/>
      </methods>
      <methods elementName="hasDeprecatedAnnotation" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;"/>
      </methods>
      <methods elementName="notifySourceElementRequestor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
      </methods>
      <methods elementName="notifySourceElementRequestor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Z"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;"/>
        <parameters name="arg5" type="Ljava.util.Map;"/>
      </methods>
      <methods elementName="notifySourceElementRequestor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
      </methods>
      <methods elementName="notifySourceElementRequestor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ImportReference;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="notifySourceElementRequestor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Z"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
      </methods>
      <methods elementName="quickSort" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="reset" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="sourceEnd" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
      </methods>
      <methods elementName="visitIfNeeded" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
      </methods>
      <methods elementName="visitIfNeeded" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
      </methods>
      <methods elementName="visitIfNeeded" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Initializer;"/>
      </methods>
      <types elementName="LocalDeclarationVisitor" fullyQualifiedName="org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.SourceElementNotifier.LocalDeclarationVisitor">
        <fields elementName="declaringTypes" isEnumConstant="false" typeSignature="Ljava.util.ArrayList;" isVolatile="false" isTransient="false"/>
        <fields elementName="this$0" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.SourceElementNotifier;" isVolatile="false" isTransient="false"/>
        <methods elementName="LocalDeclarationVisitor" returnType="V" isConstructor="true" isMainMethod="false">
          <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.SourceElementNotifier;"/>
        </methods>
        <methods elementName="pushDeclaringType" returnType="V" isConstructor="false" isMainMethod="false">
          <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        </methods>
        <methods elementName="popDeclaringType" returnType="V" isConstructor="false" isMainMethod="false"/>
        <methods elementName="peekDeclaringType" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isConstructor="false" isMainMethod="false"/>
        <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
          <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
          <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
        </methods>
        <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
          <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
          <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
        </methods>
      </types>
    </type>
  </classFiles>
  <classFiles elementName="SourceElementParser$1.class" isClass="true" isInterface="false">
    <type elementName="" fullyQualifiedName="org.eclipse.jdt.internal.compiler.SourceElementParser$1" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.SourceElementParser.1">
      <fields elementName="this$0" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.SourceElementParser;" isVolatile="false" isTransient="false"/>
      <methods elementName="" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.SourceElementParser;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.IErrorHandlingPolicy;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.impl.CompilerOptions;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.IProblemFactory;"/>
      </methods>
      <methods elementName="record" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.impl.ReferenceContext;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="SourceElementParser.class" isClass="true" isInterface="false">
    <type elementName="SourceElementParser" fullyQualifiedName="org.eclipse.jdt.internal.compiler.SourceElementParser" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.SourceElementParser">
      <fields elementName="requestor" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor;" isVolatile="false" isTransient="false"/>
      <fields elementName="reportReferenceInfo" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="reportLocalDeclarations" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="sourceEnds" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt;" isVolatile="false" isTransient="false"/>
      <fields elementName="nodesToCategories" isEnumConstant="false" typeSignature="Ljava.util.HashMap;" isVolatile="false" isTransient="false"/>
      <fields elementName="useSourceJavadocParser" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="notifier" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.SourceElementNotifier;" isVolatile="false" isTransient="false"/>
      <methods elementName="SourceElementParser" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.IProblemFactory;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.impl.CompilerOptions;"/>
        <parameters name="arg3" type="Z"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="SourceElementParser" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.IProblemFactory;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.impl.CompilerOptions;"/>
        <parameters name="arg3" type="Z"/>
        <parameters name="arg4" type="Z"/>
        <parameters name="arg5" type="Z"/>
      </methods>
      <methods elementName="acceptJavadocTypeReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
      </methods>
      <methods elementName="addUnknownRef" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.NameReference;"/>
      </methods>
      <methods elementName="checkComment" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="classInstanceCreation" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeAnnotationAsModifier" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassInstanceCreationExpressionQualifiedWithTypeArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAnnotationTypeDeclarationHeaderName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAnnotationTypeDeclarationHeaderNameWithTypeParameters" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassHeaderName1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassInstanceCreationExpressionWithTypeArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeConstructorHeaderName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeConstructorHeaderNameWithTypeParameters" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumConstantWithClassBody" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumConstantNoClassBody" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumHeaderName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumHeaderNameWithTypeParameters" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeExitVariableWithInitialization" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeExitVariableWithoutInitialization" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeFieldAccess" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeFormalParameter" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeInterfaceHeaderName1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMemberValuePair" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMarkerAnnotation" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodHeaderName" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeMethodHeaderNameWithTypeParameters" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeMethodInvocationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodInvocationNameWithTypeArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodInvocationPrimary" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodInvocationPrimaryWithTypeArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodInvocationSuper" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodInvocationSuperWithTypeArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeNormalAnnotation" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeSingleMemberAnnotation" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeSingleStaticImportDeclarationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeSingleTypeImportDeclarationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStaticImportOnDemandDeclarationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeImportOnDemandDeclarationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="convertToMethodDeclaration" returnType="Lorg.eclipse.jdt.internal.compiler.ast.MethodDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="endParse" returnType="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getTypeReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getUnspecifiedReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.NameReference;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getUnspecifiedReferenceOptimized" returnType="Lorg.eclipse.jdt.internal.compiler.ast.NameReference;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="newImportReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ImportReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="[J"/>
        <parameters name="arg2" type="Z"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="newQualifiedNameReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedNameReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="[J"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="newSingleNameReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.SingleNameReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="J"/>
      </methods>
      <methods elementName="parseCompilationUnit" returnType="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
        <parameters name="arg1" type="Z"/>
        <parameters name="arg2" type="Lorg.eclipse.core.runtime.IProgressMonitor;"/>
      </methods>
      <methods elementName="rememberCategories" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="reset" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="setRequestor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="SourceElementRequestorAdapter.class" isClass="true" isInterface="false">
    <type elementName="SourceElementRequestorAdapter" fullyQualifiedName="org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.SourceElementRequestorAdapter">
      <methods elementName="SourceElementRequestorAdapter" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="acceptAnnotationTypeReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="acceptAnnotationTypeReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="acceptConstructorReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="acceptFieldReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="acceptImport" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[[C"/>
        <parameters name="arg3" type="Z"/>
        <parameters name="arg4" type="I"/>
      </methods>
      <methods elementName="acceptLineSeparatorPositions" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[I"/>
      </methods>
      <methods elementName="acceptMethodReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="acceptPackage" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ImportReference;"/>
      </methods>
      <methods elementName="acceptProblem" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
      </methods>
      <methods elementName="acceptTypeReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="acceptTypeReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="acceptUnknownReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="acceptUnknownReference" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="enterCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="enterConstructor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo;"/>
      </methods>
      <methods elementName="enterField" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo;"/>
      </methods>
      <methods elementName="enterInitializer" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="enterMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo;"/>
      </methods>
      <methods elementName="enterType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo;"/>
      </methods>
      <methods elementName="exitCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="exitConstructor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="exitField" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="exitInitializer" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="exitMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
      </methods>
      <methods elementName="exitType" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="SourceJavadocParser.class" isClass="true" isInterface="false">
    <type elementName="SourceJavadocParser" fullyQualifiedName="org.eclipse.jdt.internal.compiler.SourceJavadocParser" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.SourceJavadocParser">
      <fields elementName="categoriesPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="categories" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <methods elementName="SourceJavadocParser" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
      </methods>
      <methods elementName="checkDeprecation" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="parseIdentifierTag" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="parseSimpleTag" returnType="V" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
</core:IPackageFragment>
