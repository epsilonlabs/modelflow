<?xml version="1.0" encoding="ASCII"?>
<core:IPackageFragment xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:core="org.amma.dsl.jdt.core" elementName="org.eclipse.jdt.internal.compiler.env" isDefaultPackage="false">
  <packageFragmentRoot xsi:type="core:BinaryPackageFragmentRoot" href="../BinaryPackageFragmentRoot_org.eclipse.jdt.core_3.4.2.v_883_R34x.jar.xmi#/"/>
  <classFiles elementName="AccessRestriction.class" isClass="true" isInterface="false">
    <type elementName="AccessRestriction" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.AccessRestriction" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.AccessRestriction">
      <fields elementName="accessRule" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.env.AccessRule;" isVolatile="false" isTransient="false"/>
      <fields elementName="classpathEntryType" isEnumConstant="false" typeSignature="B" isVolatile="false" isTransient="false"/>
      <fields elementName="COMMAND_LINE" isEnumConstant="false" typeSignature="B" isVolatile="false" isTransient="false"/>
      <fields elementName="PROJECT" isEnumConstant="false" typeSignature="B" isVolatile="false" isTransient="false"/>
      <fields elementName="LIBRARY" isEnumConstant="false" typeSignature="B" isVolatile="false" isTransient="false"/>
      <fields elementName="classpathEntryName" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <methods elementName="AccessRestriction" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.AccessRule;"/>
        <parameters name="arg1" type="B"/>
        <parameters name="arg2" type="Ljava.lang.String;"/>
      </methods>
      <methods elementName="getProblemId" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="ignoreIfBetter" returnType="Z" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="AccessRule.class" isClass="true" isInterface="false">
    <type elementName="AccessRule" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.AccessRule" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.AccessRule">
      <fields elementName="IgnoreIfBetter" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="pattern" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="problemId" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="AccessRule" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="AccessRule" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="hashCode" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="equals" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
      </methods>
      <methods elementName="getProblemId" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="ignoreIfBetter" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="AccessRuleSet.class" isClass="true" isInterface="false">
    <type elementName="AccessRuleSet" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.AccessRuleSet" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.AccessRuleSet">
      <fields elementName="accessRules" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.env.AccessRule;" isVolatile="false" isTransient="false"/>
      <fields elementName="classpathEntryType" isEnumConstant="false" typeSignature="B" isVolatile="false" isTransient="false"/>
      <fields elementName="classpathEntryName" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <methods elementName="AccessRuleSet" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.env.AccessRule;"/>
        <parameters name="arg1" type="B"/>
        <parameters name="arg2" type="Ljava.lang.String;"/>
      </methods>
      <methods elementName="equals" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
      </methods>
      <methods elementName="getAccessRules" returnType="[Lorg.eclipse.jdt.internal.compiler.env.AccessRule;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getViolatedRestriction" returnType="Lorg.eclipse.jdt.internal.compiler.env.AccessRestriction;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ClassSignature.class" isClass="true" isInterface="false">
    <type elementName="ClassSignature" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.ClassSignature" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.ClassSignature">
      <fields elementName="className" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <methods elementName="ClassSignature" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="getTypeName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="EnumConstantSignature.class" isClass="true" isInterface="false">
    <type elementName="EnumConstantSignature" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.EnumConstantSignature" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.EnumConstantSignature">
      <fields elementName="typeName" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="constName" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <methods elementName="EnumConstantSignature" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="getTypeName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getEnumConstantName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="IBinaryAnnotation.class" isClass="false" isInterface="true">
    <type elementName="IBinaryAnnotation" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation">
      <methods elementName="getTypeName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getElementValuePairs" returnType="[Lorg.eclipse.jdt.internal.compiler.env.IBinaryElementValuePair;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="IBinaryElementValuePair.class" isClass="false" isInterface="true">
    <type elementName="IBinaryElementValuePair" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.IBinaryElementValuePair" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.IBinaryElementValuePair">
      <methods elementName="getName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getValue" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="IBinaryField.class" isClass="false" isInterface="true">
    <type elementName="IBinaryField" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.IBinaryField" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.IBinaryField">
      <methods elementName="getAnnotations" returnType="[Lorg.eclipse.jdt.internal.compiler.env.IBinaryAnnotation;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getConstant" returnType="Lorg.eclipse.jdt.internal.compiler.impl.Constant;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getGenericSignature" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTagBits" returnType="J" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeName" returnType="[C" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="IBinaryMethod.class" isClass="false" isInterface="true">
    <type elementName="IBinaryMethod" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.IBinaryMethod" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.IBinaryMethod">
      <methods elementName="getAnnotations" returnType="[Lorg.eclipse.jdt.internal.compiler.env.IBinaryAnnotation;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getDefaultValue" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getExceptionTypeNames" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getGenericSignature" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getMethodDescriptor" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getParameterAnnotations" returnType="[Lorg.eclipse.jdt.internal.compiler.env.IBinaryAnnotation;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getSelector" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTagBits" returnType="J" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isClinit" returnType="Z" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="IBinaryNestedType.class" isClass="false" isInterface="true">
    <type elementName="IBinaryNestedType" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.IBinaryNestedType" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.IBinaryNestedType">
      <methods elementName="getEnclosingTypeName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getModifiers" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getName" returnType="[C" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="IBinaryType.class" isClass="false" isInterface="true">
    <type elementName="IBinaryType" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.IBinaryType" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.IBinaryType">
      <fields elementName="NoInterface" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="NoNestedType" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.env.IBinaryNestedType;" isVolatile="false" isTransient="false"/>
      <fields elementName="NoField" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.env.IBinaryField;" isVolatile="false" isTransient="false"/>
      <fields elementName="NoMethod" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.env.IBinaryMethod;" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getAnnotations" returnType="[Lorg.eclipse.jdt.internal.compiler.env.IBinaryAnnotation;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getEnclosingTypeName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getFields" returnType="[Lorg.eclipse.jdt.internal.compiler.env.IBinaryField;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getGenericSignature" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getInterfaceNames" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getMemberTypes" returnType="[Lorg.eclipse.jdt.internal.compiler.env.IBinaryNestedType;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getMethods" returnType="[Lorg.eclipse.jdt.internal.compiler.env.IBinaryMethod;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getMissingTypeNames" returnType="[[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getSourceName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getSuperclassName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTagBits" returnType="J" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isAnonymous" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isLocal" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isMember" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="sourceFileName" returnType="[C" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="ICompilationUnit.class" isClass="false" isInterface="true">
    <type elementName="ICompilationUnit" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.ICompilationUnit" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.ICompilationUnit">
      <methods elementName="getContents" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getMainTypeName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getPackageName" returnType="[[C" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="IDependent.class" isClass="false" isInterface="true">
    <type elementName="IDependent" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.IDependent" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.IDependent">
      <fields elementName="JAR_FILE_ENTRY_SEPARATOR" isEnumConstant="false" typeSignature="C" isVolatile="false" isTransient="false"/>
      <methods elementName="getFileName" returnType="[C" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="IGenericField.class" isClass="false" isInterface="true">
    <type elementName="IGenericField" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.IGenericField" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.IGenericField">
      <methods elementName="getModifiers" returnType="I" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="IGenericMethod.class" isClass="false" isInterface="true">
    <type elementName="IGenericMethod" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.IGenericMethod" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.IGenericMethod">
      <methods elementName="getModifiers" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isConstructor" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getArgumentNames" returnType="[[C" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="IGenericType.class" isClass="false" isInterface="true">
    <type elementName="IGenericType" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.IGenericType" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.IGenericType">
      <methods elementName="getModifiers" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isBinaryType" returnType="Z" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="INameEnvironment.class" isClass="false" isInterface="true">
    <type elementName="INameEnvironment" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.INameEnvironment" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.INameEnvironment">
      <methods elementName="findType" returnType="Lorg.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
      </methods>
      <methods elementName="findType" returnType="Lorg.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[[C"/>
      </methods>
      <methods elementName="isPackage" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="cleanup" returnType="V" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="ISourceField.class" isClass="false" isInterface="true">
    <type elementName="ISourceField" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.ISourceField" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.ISourceField">
      <methods elementName="getDeclarationSourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getDeclarationSourceStart" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getInitializationSource" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getNameSourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getNameSourceStart" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeName" returnType="[C" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="ISourceImport.class" isClass="false" isInterface="true">
    <type elementName="ISourceImport" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.ISourceImport" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.ISourceImport">
      <methods elementName="getDeclarationSourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getDeclarationSourceStart" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getModifiers" returnType="I" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="ISourceMethod.class" isClass="false" isInterface="true">
    <type elementName="ISourceMethod" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.ISourceMethod" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.ISourceMethod">
      <methods elementName="getDeclarationSourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getDeclarationSourceStart" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getExceptionTypeNames" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getNameSourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getNameSourceStart" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getReturnTypeName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeParameterNames" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeParameterBounds" returnType="[[[C" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="ISourceType.class" isClass="false" isInterface="true">
    <type elementName="ISourceType" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.ISourceType" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.ISourceType">
      <methods elementName="getDeclarationSourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getDeclarationSourceStart" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getEnclosingType" returnType="Lorg.eclipse.jdt.internal.compiler.env.ISourceType;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getFields" returnType="[Lorg.eclipse.jdt.internal.compiler.env.ISourceField;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getInterfaceNames" returnType="[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getMemberTypes" returnType="[Lorg.eclipse.jdt.internal.compiler.env.ISourceType;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getMethods" returnType="[Lorg.eclipse.jdt.internal.compiler.env.ISourceMethod;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getNameSourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getNameSourceStart" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getSuperclassName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeParameterBounds" returnType="[[[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getTypeParameterNames" returnType="[[C" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="NameEnvironmentAnswer.class" isClass="true" isInterface="false">
    <type elementName="NameEnvironmentAnswer" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer">
      <fields elementName="binaryType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.env.IBinaryType;" isVolatile="false" isTransient="false"/>
      <fields elementName="compilationUnit" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;" isVolatile="false" isTransient="false"/>
      <fields elementName="sourceTypes" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.env.ISourceType;" isVolatile="false" isTransient="false"/>
      <fields elementName="accessRestriction" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.env.AccessRestriction;" isVolatile="false" isTransient="false"/>
      <methods elementName="NameEnvironmentAnswer" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.IBinaryType;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.env.AccessRestriction;"/>
      </methods>
      <methods elementName="NameEnvironmentAnswer" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.env.AccessRestriction;"/>
      </methods>
      <methods elementName="NameEnvironmentAnswer" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.env.ISourceType;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.env.AccessRestriction;"/>
      </methods>
      <methods elementName="getAccessRestriction" returnType="Lorg.eclipse.jdt.internal.compiler.env.AccessRestriction;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getBinaryType" returnType="Lorg.eclipse.jdt.internal.compiler.env.IBinaryType;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCompilationUnit" returnType="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getSourceTypes" returnType="[Lorg.eclipse.jdt.internal.compiler.env.ISourceType;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isBinaryType" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isCompilationUnit" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isSourceType" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="ignoreIfBetter" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isBetter" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer;"/>
      </methods>
    </type>
  </classFiles>
</core:IPackageFragment>
