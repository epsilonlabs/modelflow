<?xml version="1.0" encoding="ASCII"?>
<core:IPackageFragment xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:core="org.amma.dsl.jdt.core" elementName="org.eclipse.jdt.internal.compiler.parser" isDefaultPackage="false">
  <packageFragmentRoot xsi:type="core:BinaryPackageFragmentRoot" href="../BinaryPackageFragmentRoot_org.eclipse.jdt.core_3.4.2.v_883_R34x.jar.xmi#/"/>
  <classFiles elementName="AbstractCommentParser.class" isClass="true" isInterface="false">
    <type elementName="AbstractCommentParser" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser">
      <fields elementName="COMPIL_PARSER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DOM_PARSER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SELECTION_PARSER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="COMPLETION_PARSER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SOURCE_PARSER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FORMATTER_COMMENT_PARSER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="PARSER_KIND" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TEXT_PARSE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TEXT_VERIF" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="QUALIFIED_NAME_RECOVERY" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ARGUMENT_RECOVERY" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ARGUMENT_TYPE_RECOVERY" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="EMPTY_ARGUMENT_RECOVERY" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="scanner" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.Scanner;" isVolatile="false" isTransient="false"/>
      <fields elementName="source" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="sourceParser" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.Parser;" isVolatile="false" isTransient="false"/>
      <fields elementName="currentTokenType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="checkDocComment" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="reportProblems" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="complianceLevel" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="sourceLevel" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="inheritedPositions" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="deprecated" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="returnStatement" isEnumConstant="false" typeSignature="Ljava.lang.Object;" isVolatile="false" isTransient="false"/>
      <fields elementName="javadocStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="javadocEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="javadocTextStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="javadocTextEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="firstTagPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="index" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="lineEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="tokenPreviousPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="lastIdentifierEndPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="starPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="textStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="memberStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="tagSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="tagSourceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="inlineTagStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="lineEnds" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="lineStarted" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="inlineTagStarted" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="abort" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="kind" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="tagValue" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="linePtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="lastLinePtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="identifierPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="identifierStack" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="identifierLengthPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="identifierLengthStack" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="identifierPositionStack" isEnumConstant="false" typeSignature="[J" isVolatile="false" isTransient="false"/>
      <fields elementName="AST_STACK_INCREMENT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="astPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="astStack" isEnumConstant="false" typeSignature="[Ljava.lang.Object;" isVolatile="false" isTransient="false"/>
      <fields elementName="astLengthPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="astLengthStack" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <methods elementName="AbstractCommentParser" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
      </methods>
      <methods elementName="commentParse" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeToken" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="createArgumentReference" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="Z"/>
        <parameters name="arg3" type="Ljava.lang.Object;"/>
        <parameters name="arg4" type="[J"/>
        <parameters name="arg5" type="J"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="createFakeReference" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="createFieldReference" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="createMethodReference" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
        <parameters name="arg1" type="Ljava.util.List;"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="createReturnStatement" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="createTag" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="createTypeReference" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getIndexPosition" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getLineNumber" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getTokenEndPosition" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCurrentTokenType" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseArguments" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="parseHtmlTag" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="parseHref" returnType="Z" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="parseIdentifierTag" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="parseMember" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="parseParam" returnType="Z" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="parseQualifiedName" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="parseReference" returnType="Z" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="parseTag" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="parseThrows" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="peekChar" returnType="C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="pushIdentifier" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="pushOnAstStack" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="pushParamName" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="pushSeeRef" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
      </methods>
      <methods elementName="pushText" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="pushThrowName" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
      </methods>
      <methods elementName="readChar" returnType="C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="readToken" returnType="I" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="readTokenAndConsume" returnType="I" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="readTokenSafely" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="refreshInlineTagPosition" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="refreshReturnStatement" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="syntaxRecoverQualifiedName" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateDocComment" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateLineEnd" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="verifyEndLine" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="verifySpaceOrEndComment" returnType="Z" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="JavadocParser.class" isClass="true" isInterface="false">
    <type elementName="JavadocParser" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.JavadocParser" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.JavadocParser">
      <fields elementName="docComment" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Javadoc;" isVolatile="false" isTransient="false"/>
      <fields elementName="invalidParamReferencesPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="invalidParamReferencesStack" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isVolatile="false" isTransient="false"/>
      <fields elementName="validValuePositions" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="invalidValuePositions" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="shouldReportProblems" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <methods elementName="JavadocParser" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
      </methods>
      <methods elementName="checkDeprecation" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="createArgumentReference" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="Z"/>
        <parameters name="arg3" type="Ljava.lang.Object;"/>
        <parameters name="arg4" type="[J"/>
        <parameters name="arg5" type="J"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="createFieldReference" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="createMethodReference" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
        <parameters name="arg1" type="Ljava.util.List;"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="createReturnStatement" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="createTag" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="createTypeReference" returnType="Ljava.lang.Object;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getParsedTypeDeclaration" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseThrows" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseReturn" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseSimpleTag" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseTag" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="parseParam" returnType="Z" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="pushParamName" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="pushSeeRef" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
      </methods>
      <methods elementName="pushThrowName" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.Object;"/>
      </methods>
      <methods elementName="refreshReturnStatement" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateDocComment" returnType="V" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="JavadocTagConstants.class" isClass="false" isInterface="true">
    <type elementName="JavadocTagConstants" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants">
      <fields elementName="TAG_DEPRECATED" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_PARAM" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_RETURN" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_THROWS" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_EXCEPTION" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SEE" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_LINK" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_LINKPLAIN" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_INHERITDOC" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_VALUE" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_AUTHOR" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_CODE" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_DOC_ROOT" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_LITERAL" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SERIAL" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SERIAL_DATA" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SERIAL_FIELD" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SINCE" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_VERSION" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_CATEGORY" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_DEPRECATED_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_PARAM_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_RETURN_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_THROWS_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_EXCEPTION_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SEE_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_LINK_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_LINKPLAIN_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_INHERITDOC_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_VALUE_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_CATEGORY_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_AUTHOR_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SERIAL_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SERIAL_DATA_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SERIAL_FIELD_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SINCE_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_VERSION_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_CODE_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_LITERAL_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_DOC_ROOT_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NO_TAG_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_DEPRECATED_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_PARAM_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_RETURN_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_THROWS_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_EXCEPTION_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SEE_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_LINK_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_LINKPLAIN_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_INHERITDOC_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_VALUE_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_CATEGORY_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_AUTHOR_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SERIAL_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SERIAL_DATA_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SERIAL_FIELD_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_SINCE_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_VERSION_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_CODE_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_LITERAL_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_DOC_ROOT_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_OTHERS_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ORDERED_TAGS_NUMBER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="PARAM_TAG_EXPECTED_ORDER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="THROWS_TAG_EXPECTED_ORDER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SEE_TAG_EXPECTED_ORDER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="BLOCK_IDX" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="INLINE_IDX" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="HREF_TAG" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="BLOCK_TAGS" isEnumConstant="false" typeSignature="[[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="INLINE_TAGS" isEnumConstant="false" typeSignature="[[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="INLINE_TAGS_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="BLOCK_TAGS_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ALL_TAGS_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="PACKAGE_TAGS" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="CLASS_TAGS" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="FIELD_TAGS" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="METHOD_TAGS" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="NLSTag.class" isClass="true" isInterface="false">
    <type elementName="NLSTag" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.NLSTag" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.NLSTag">
      <fields elementName="start" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="end" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="lineNumber" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="index" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="NLSTag" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="Parser$1$MethodVisitor.class" isClass="true" isInterface="false">
    <type elementName="MethodVisitor" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.Parser.1.MethodVisitor">
      <fields elementName="typeVisitor" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ASTVisitor;" isVolatile="false" isTransient="false"/>
      <fields elementName="enclosingType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="types" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="typePtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="this$0" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.Parser;" isVolatile="false" isTransient="false"/>
      <methods elementName="MethodVisitor" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Initializer;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.MethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.MethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisitMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Initializer;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="Parser$1$TypeVisitor.class" isClass="true" isInterface="false">
    <type elementName="TypeVisitor" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.Parser.1.TypeVisitor">
      <fields elementName="methodVisitor" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor;" isVolatile="false" isTransient="false"/>
      <fields elementName="types" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="typePtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="this$0" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.Parser;" isVolatile="false" isTransient="false"/>
      <methods elementName="TypeVisitor" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="endVisit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="endVisitType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.BlockScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Initializer;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.MethodScope;"/>
      </methods>
      <methods elementName="visit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.MethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.lookup.ClassScope;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="Parser.class" isClass="true" isInterface="false">
    <type elementName="Parser" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.Parser" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.Parser">
      <fields elementName="THIS_CALL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SUPER_CALL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="asb" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="asr" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="AstStackIncrement" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="base_action" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="BracketKinds" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="check_table" isEnumConstant="false" typeSignature="[S" isVolatile="false" isTransient="false"/>
      <fields elementName="CurlyBracket" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DEBUG" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="DEBUG_AUTOMATON" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="EOF_TOKEN" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="ERROR_TOKEN" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="ExpressionStackIncrement" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="GenericsStackIncrement" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FILEPREFIX" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="in_symb" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="INVALID_CHARACTER" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="lhs" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="name" isEnumConstant="false" typeSignature="[Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="nasb" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="nasr" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="non_terminal_index" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="READABLE_NAMES_FILE" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="READABLE_NAMES_FILE_NAME" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="readableName" isEnumConstant="false" typeSignature="[Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="rhs" isEnumConstant="false" typeSignature="[B" isVolatile="false" isTransient="false"/>
      <fields elementName="reverse_index" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="recovery_templates_index" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="recovery_templates" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="statements_recovery_filter" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="rules_compliance" isEnumConstant="false" typeSignature="[J" isVolatile="false" isTransient="false"/>
      <fields elementName="RoundBracket" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="scope_la" isEnumConstant="false" typeSignature="[B" isVolatile="false" isTransient="false"/>
      <fields elementName="scope_lhs" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="scope_prefix" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="scope_rhs" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="scope_state" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="scope_state_set" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="scope_suffix" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="SquareBracket" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="StackIncrement" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="term_action" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="term_check" isEnumConstant="false" typeSignature="[B" isVolatile="false" isTransient="false"/>
      <fields elementName="terminal_index" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="UNEXPECTED_EOF" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="VERBOSE_RECOVERY" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="astLengthPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="astLengthStack" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="astPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="astStack" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isVolatile="false" isTransient="false"/>
      <fields elementName="compilationUnit" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="currentElement" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isVolatile="false" isTransient="false"/>
      <fields elementName="currentToken" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="diet" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="dietInt" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="endPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="endStatementPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="expressionLengthPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="expressionLengthStack" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="expressionPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="expressionStack" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="firstToken" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="genericsIdentifiersLengthPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="genericsIdentifiersLengthStack" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="genericsLengthPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="genericsLengthStack" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="genericsPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="genericsStack" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isVolatile="false" isTransient="false"/>
      <fields elementName="hasError" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="hasReportedError" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="identifierLengthPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="identifierLengthStack" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="identifierPositionStack" isEnumConstant="false" typeSignature="[J" isVolatile="false" isTransient="false"/>
      <fields elementName="identifierPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="identifierStack" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="ignoreNextOpeningBrace" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="intPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="intStack" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="lastAct" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="lastCheckPoint" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="lastErrorEndPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="lastErrorEndPositionBeforeRecovery" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="lastIgnoredToken" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="nextIgnoredToken" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="listLength" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="listTypeParameterLength" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="lParenPos" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="rParenPos" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiersSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="nestedMethod" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="nestedType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="dimensions" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="noAstNodes" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isVolatile="false" isTransient="false"/>
      <fields elementName="noExpressions" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isVolatile="false" isTransient="false"/>
      <fields elementName="optimizeStringLiterals" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="options" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.impl.CompilerOptions;" isVolatile="false" isTransient="false"/>
      <fields elementName="problemReporter" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.problem.ProblemReporter;" isVolatile="false" isTransient="false"/>
      <fields elementName="rBraceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="rBraceEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="rBraceSuccessorStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="realBlockPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="realBlockStack" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="recoveredStaticInitializerStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="referenceContext" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.impl.ReferenceContext;" isVolatile="false" isTransient="false"/>
      <fields elementName="reportOnlyOneSyntaxError" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="reportSyntaxErrorIsRequired" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="restartRecovery" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="annotationRecoveryActivated" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="lastPosistion" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="methodRecoveryActivated" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="statementRecoveryActivated" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="recoveredTypes" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="recoveredTypePtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="nextTypeStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingRecoveredType" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="recoveryScanner" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.RecoveryScanner;" isVolatile="false" isTransient="false"/>
      <fields elementName="scanner" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.Scanner;" isVolatile="false" isTransient="false"/>
      <fields elementName="stack" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="stateStackTop" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="synchronizedBlockSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="variablesCounter" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="checkExternalizeStrings" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="recordStringLiterals" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="javadoc" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Javadoc;" isVolatile="false" isTransient="false"/>
      <fields elementName="javadocParser" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.JavadocParser;" isVolatile="false" isTransient="false"/>
      <fields elementName="lastJavadocEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="readManager" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ReadManager;" isVolatile="false" isTransient="false"/>
      <fields elementName="class$0" isEnumConstant="false" typeSignature="Ljava.lang.Class;" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="asi" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="base_check" returnType="S" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="buildFile" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="Ljava.util.List;"/>
      </methods>
      <methods elementName="buildFileForName" returnType="[Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="Ljava.lang.String;"/>
      </methods>
      <methods elementName="buildFileForReadableName" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="[C"/>
        <parameters name="arg3" type="[Ljava.lang.String;"/>
        <parameters name="arg4" type="[Ljava.lang.String;"/>
      </methods>
      <methods elementName="buildFilesForRecoveryTemplates" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="Ljava.lang.String;"/>
        <parameters name="arg2" type="[C"/>
        <parameters name="arg3" type="[C"/>
        <parameters name="arg4" type="[Ljava.lang.String;"/>
        <parameters name="arg5" type="[C"/>
        <parameters name="arg6" type="[Ljava.lang.String;"/>
      </methods>
      <methods elementName="buildFilesForStatementsRecoveryFilter" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="[C"/>
        <parameters name="arg3" type="[Ljava.lang.String;"/>
      </methods>
      <methods elementName="buildFileForCompliance" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[Ljava.lang.String;"/>
      </methods>
      <methods elementName="buildFileForTable" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="[B"/>
      </methods>
      <methods elementName="buildFileForTable" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="buildFileOfByteFor" returnType="[B" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="Ljava.lang.String;"/>
        <parameters name="arg2" type="[Ljava.lang.String;"/>
      </methods>
      <methods elementName="buildFileOfIntFor" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="Ljava.lang.String;"/>
        <parameters name="arg2" type="[Ljava.lang.String;"/>
      </methods>
      <methods elementName="buildFileOfShortFor" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="Ljava.lang.String;"/>
        <parameters name="arg2" type="[Ljava.lang.String;"/>
      </methods>
      <methods elementName="buildFilesFromLPG" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="Ljava.lang.String;"/>
      </methods>
      <methods elementName="in_symbol" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="initTables" returnType="V" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Ljava.io.IOException;</exceptionTypes>
      </methods>
      <methods elementName="nasi" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="ntAction" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="original_state" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="computeReverseTable" returnType="[I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="[Ljava.lang.String;"/>
      </methods>
      <methods elementName="getSymbol" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="[Ljava.lang.String;"/>
        <parameters name="arg2" type="[I"/>
      </methods>
      <methods elementName="readByteTable" returnType="[B" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <exceptionTypes>Ljava.io.IOException;</exceptionTypes>
      </methods>
      <methods elementName="readNameTable" returnType="[Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <exceptionTypes>Ljava.io.IOException;</exceptionTypes>
      </methods>
      <methods elementName="readReadableNameTable" returnType="[Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
      </methods>
      <methods elementName="readTable" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <exceptionTypes>Ljava.io.IOException;</exceptionTypes>
      </methods>
      <methods elementName="readLongTable" returnType="[J" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <exceptionTypes>Ljava.io.IOException;</exceptionTypes>
      </methods>
      <methods elementName="tAction" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="Parser" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.problem.ProblemReporter;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="annotationRecoveryCheckPoint" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="arrayInitializer" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="blockReal" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="buildInitialRecoveryState" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="checkAndSetModifiers" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="checkComment" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="checkNonNLSAfterBodyEnd" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="classInstanceCreation" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="concatExpressionLists" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="concatGenericsLists" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="concatNodeLists" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAdditionalBound" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAdditionalBound1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAdditionalBoundList" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAdditionalBoundList1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAllocationHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAnnotationAsModifier" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAnnotationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAnnotationTypeDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAnnotationTypeDeclarationHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAnnotationTypeDeclarationHeaderName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAnnotationTypeDeclarationHeaderNameWithTypeParameters" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAnnotationTypeMemberDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAnnotationTypeMemberDeclarations" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeArgumentList" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeArrayAccess" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeArrayCreationExpressionWithInitializer" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeArrayCreationExpressionWithoutInitializer" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeArrayCreationHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeArrayInitializer" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeArrayTypeWithTypeArgumentsName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAssertStatement" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAssignment" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAssignmentOperator" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="consumeBinaryExpression" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="consumeBinaryExpressionWithName" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="consumeBlock" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeBlockStatements" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeCaseLabel" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeCastExpressionLL1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeCastExpressionWithGenericsArray" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeCastExpressionWithNameArray" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeCastExpressionWithPrimitiveType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="computeQualifiedGenericsFromRightSide" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="consumeCastExpressionWithQualifiedGenericsArray" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeCatches" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeCatchHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassBodyDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassBodyDeclarations" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassBodyDeclarationsopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeAnnotationTypeMemberDeclarationsopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassBodyopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassHeaderExtends" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassHeaderImplements" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassHeaderName1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeHeaderNameWithTypeParameters" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassInstanceCreationExpression" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassInstanceCreationExpressionName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassInstanceCreationExpressionQualified" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassInstanceCreationExpressionQualifiedWithTypeArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassInstanceCreationExpressionWithTypeArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassOrInterface" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassOrInterfaceName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassTypeElt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeClassTypeList" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeConditionalExpression" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="consumeConditionalExpressionWithName" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="consumeConstructorBlockStatements" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeConstructorBody" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeConstructorDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeConstructorHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeConstructorHeaderName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeConstructorHeaderNameWithTypeParameters" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeDefaultLabel" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeCreateInitializer" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeDefaultModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeDiet" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeDims" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeDimWithOrWithOutExpr" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeDimWithOrWithOutExprs" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyAnnotationTypeMemberDeclarationsopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyArgumentListopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyArrayInitializer" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyArrayInitializeropt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyBlockStatementsopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyCatchesopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyClassBodyDeclarationsopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyMethodHeaderDefaultValue" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyDimsopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyEnumDeclarations" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyExpression" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyForInitopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyForUpdateopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyInterfaceMemberDeclarationsopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyInternalCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyMemberValuePairsopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyMemberValueArrayInitializer" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyStatement" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptySwitchBlock" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEmptyTypeDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnhancedForStatementHeaderInit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeEnhancedForStatementHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnhancedForStatement" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnterAnonymousClassBody" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnterCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnterMemberValue" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnterMemberValueArrayInitializer" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnterVariable" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumBodyNoConstants" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumBodyWithConstants" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumConstantHeaderName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumConstantHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumConstantNoClassBody" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumConstants" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumConstantWithClassBody" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumDeclarations" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumHeaderName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEnumHeaderNameWithTypeParameters" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeEqualityExpression" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="consumeEqualityExpressionWithName" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="consumeExitMemberValue" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeExitTryBlock" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeExitVariableWithInitialization" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeExitVariableWithoutInitialization" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeExplicitConstructorInvocation" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="consumeExplicitConstructorInvocationWithTypeArguments" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="consumeExpressionStatement" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeFieldAccess" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeFieldDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeForceNoDiet" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeForInit" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeFormalParameter" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeFormalParameterList" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeFormalParameterListopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeGenericType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeGenericTypeArrayType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeGenericTypeNameArrayType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeImportDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeImportDeclarations" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInsideCastExpression" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInsideCastExpressionLL1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInsideCastExpressionWithQualifiedGenerics" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInstanceOfExpression" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInstanceOfExpressionWithName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInterfaceDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInterfaceHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInterfaceHeaderExtends" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInterfaceHeaderName1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInterfaceMemberDeclarations" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInterfaceMemberDeclarationsopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInterfaceType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInterfaceTypeList" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInternalCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInternalCompilationUnitWithTypes" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInvalidAnnotationTypeDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInvalidConstructorDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInvalidConstructorDeclaration" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeInvalidInterfaceDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInvalidEnumDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeInvalidMethodDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeLabel" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeLeftParen" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeLocalVariableDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeLocalVariableDeclarationStatement" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMarkerAnnotation" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMemberValueArrayInitializer" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMemberValueAsName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMemberValuePair" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMemberValuePairs" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMemberValues" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodBody" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodDeclaration" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeMethodHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodHeaderDefaultValue" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodHeaderExtendedDims" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodHeaderName" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeMethodHeaderNameWithTypeParameters" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeMethodHeaderRightParen" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodHeaderThrowsClause" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodInvocationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodInvocationNameWithTypeArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodInvocationPrimary" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodInvocationPrimaryWithTypeArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodInvocationSuper" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeMethodInvocationSuperWithTypeArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeModifiers2" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeNameArrayType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeNestedMethod" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeNestedType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeNormalAnnotation" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeOneDimLoop" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeOnlySynchronized" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeOnlyTypeArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeOnlyTypeArgumentsForCastExpression" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeOpenBlock" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePackageComment" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePackageDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePackageDeclarationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePackageDeclarationNameWithModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePostfixExpression" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePrimaryNoNewArray" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePrimaryNoNewArrayArrayType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePrimaryNoNewArrayName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePrimaryNoNewArrayNameSuper" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePrimaryNoNewArrayNameThis" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePrimaryNoNewArrayPrimitiveArrayType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePrimaryNoNewArrayPrimitiveType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePrimaryNoNewArrayThis" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePrimaryNoNewArrayWithName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePrimitiveArrayType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePrimitiveType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePushLeftBrace" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePushRealModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePushModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePushModifiersForHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumePushPosition" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeQualifiedName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeRecoveryMethodHeaderName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeRecoveryMethodHeaderNameWithTypeParameters" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeReduceImports" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeReferenceType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeReferenceType1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeReferenceType2" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeReferenceType3" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeRestoreDiet" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeRightParen" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeRule" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="consumeSimpleAssertStatement" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeSingleMemberAnnotation" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeSingleMemberAnnotationMemberValue" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeSingleStaticImportDeclarationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeSingleTypeImportDeclarationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementBreak" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementBreakWithLabel" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementCatch" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementContinue" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementContinueWithLabel" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementDo" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementExpressionList" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementFor" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementIfNoElse" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementIfWithElse" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementLabel" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementReturn" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementSwitch" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementSynchronized" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementThrow" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStatementTry" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="consumeStatementWhile" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStaticImportOnDemandDeclarationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStaticInitializer" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeStaticOnly" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeSwitchBlock" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeSwitchBlockStatement" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeSwitchBlockStatements" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeSwitchLabels" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeToken" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="consumeTypeArgument" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeArgumentList" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeArgumentList1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeArgumentList2" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeArgumentList3" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeArgumentReferenceType1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeArgumentReferenceType2" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeArguments" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeDeclarations" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeImportOnDemandDeclarationName" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeParameterHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeParameter1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeParameter1WithExtends" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeParameter1WithExtendsAndBounds" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeParameterList" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeParameterList1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeParameters" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeParameterWithExtends" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeTypeParameterWithExtendsAndBounds" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeUnaryExpression" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="consumeUnaryExpression" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="consumeVariableDeclarators" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeVariableInitializers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcard" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcard1" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcard1WithBounds" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcard2" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcard2WithBounds" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcard3" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcard3WithBounds" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcardBounds1Extends" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcardBounds1Super" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcardBounds2Extends" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcardBounds2Super" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcardBounds3Extends" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcardBounds3Super" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcardBoundsExtends" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcardBoundsSuper" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="consumeWildcardWithBounds" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="containsComment" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="convertToMethodDeclaration" returnType="Lorg.eclipse.jdt.internal.compiler.ast.MethodDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="copyDims" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="createFieldDeclaration" returnType="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="createJavadocParser" returnType="Lorg.eclipse.jdt.internal.compiler.parser.JavadocParser;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="createLocalDeclaration" returnType="Lorg.eclipse.jdt.internal.compiler.ast.LocalDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="createStringLiteral" returnType="Lorg.eclipse.jdt.internal.compiler.ast.StringLiteral;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="currentRecoveryType" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredType;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="dietParse" returnType="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="dispatchDeclarationInto" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="dispatchDeclarationIntoEnumDeclaration" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="endParse" returnType="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="flushCommentsDefinedPriorTo" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getAnnotationType" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getFirstToken" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getJavaDocPositions" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getMethodBodies" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="getNextCharacter" returnType="C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[I"/>
      </methods>
      <methods elementName="getTypeReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
      </methods>
      <methods elementName="getTypeReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getTypeReferenceForGenericType" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="getUnspecifiedReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.NameReference;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getUnspecifiedReferenceOptimized" returnType="Lorg.eclipse.jdt.internal.compiler.ast.NameReference;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="goForBlockStatementsopt" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="goForBlockStatementsOrCatchHeader" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="goForClassBodyDeclarations" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="goForCompilationUnit" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="goForExpression" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="goForFieldDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="goForGenericMethodDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="goForHeaders" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="goForImportDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="goForInitializer" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="goForMemberValue" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="goForMethodBody" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="goForPackageDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="goForTypeDeclaration" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="ignoreExpressionAssignment" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="initialize" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="initialize" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="initializeScanner" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="jumpOverMethodBody" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="jumpOverType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="markEnclosingMemberWithLocalType" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="moveRecoveryCheckpoint" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="newMessageSend" returnType="Lorg.eclipse.jdt.internal.compiler.ast.MessageSend;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="newMessageSendWithTypeArguments" returnType="Lorg.eclipse.jdt.internal.compiler.ast.MessageSend;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="optimizedConcatNodeLists" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parse" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="parse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
        <parameters name="arg3" type="[C"/>
      </methods>
      <methods elementName="parse" returnType="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="parse" returnType="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="parse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Initializer;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="parse" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.MethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="parseClassBodyDeclarations" returnType="[Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="parseExpression" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="parseMemberValue" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="parseStatements" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.impl.ReferenceContext;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="[Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg4" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
      </methods>
      <methods elementName="persistLineSeparatorPositions" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="prepareForBlockStatements" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="problemReporter" returnType="Lorg.eclipse.jdt.internal.compiler.problem.ProblemReporter;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="pushIdentifier" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="pushIdentifier" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="pushOnAstLengthStack" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="pushOnAstStack" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;"/>
      </methods>
      <methods elementName="pushOnExpressionStack" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
      </methods>
      <methods elementName="pushOnExpressionStackLengthStack" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="pushOnGenericsStack" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;"/>
      </methods>
      <methods elementName="pushOnGenericsIdentifiersLengthStack" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="pushOnGenericsLengthStack" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="pushOnIntStack" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="pushOnRealBlockStack" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="recoverStatements" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="recoveryExitFromVariable" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="recoveryTokenCheck" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="reportSyntaxErrors" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="reportSyntaxErrorsForSkippedMethod" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
      </methods>
      <methods elementName="resetModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resetStacks" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resumeAfterRecovery" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resumeOnSyntaxError" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="setMethodsFullRecovery" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="setStatementsRecovery" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
      </methods>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateRecoveryState" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateSourceDeclarationParts" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="updateSourcePosition" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Expression;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ParserBasicInformation.class" isClass="false" isInterface="true">
    <type elementName="ParserBasicInformation" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.ParserBasicInformation" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.ParserBasicInformation">
      <fields elementName="ERROR_SYMBOL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MAX_NAME_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NUM_STATES" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NT_OFFSET" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SCOPE_UBOUND" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SCOPE_SIZE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LA_STATE_OFFSET" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MAX_LA" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NUM_RULES" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NUM_TERMINALS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NUM_NON_TERMINALS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NUM_SYMBOLS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="START_STATE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="EOFT_SYMBOL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="EOLT_SYMBOL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ACCEPT_ACTION" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ERROR_ACTION" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
    </type>
  </classFiles>
  <classFiles elementName="RecoveredAnnotation.class" isClass="true" isInterface="false">
    <type elementName="RecoveredAnnotation" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation">
      <fields elementName="MARKER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NORMAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SINGLE_MEMBER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="kind" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="identifierPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="identifierLengthPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="sourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="hasPendingMemberValueName" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="memberValuPairEqualEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="annotation" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Annotation;" isVolatile="false" isTransient="false"/>
      <methods elementName="RecoveredAnnotation" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;"/>
        <parameters name="arg4" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="addAnnotationName" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="addAnnotation" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Annotation;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateFromParserState" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseTree" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resetPendingModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="setKind" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="sourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="updatedAnnotationReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Annotation;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateOnClosingBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateParseTree" returnType="V" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="RecoveredBlock.class" isClass="true" isInterface="false">
    <type elementName="RecoveredBlock" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.RecoveredBlock" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.RecoveredBlock">
      <fields elementName="blockDeclaration" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Block;" isVolatile="false" isTransient="false"/>
      <fields elementName="statements" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredStatement;" isVolatile="false" isTransient="false"/>
      <fields elementName="statementCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="preserveContent" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingArgument" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable;" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingModifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingModifersSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingAnnotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingAnnotationCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="RecoveredBlock" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Block;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Block;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.LocalDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.LocalDeclaration;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="addAnnotationName" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="addModifier" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="attach" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredStatement;"/>
      </methods>
      <methods elementName="attachPendingModifiers" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="parseTree" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resetPendingModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="updatedBlock" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Block;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updatedStatement" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateOnClosingBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateOnOpeningBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateParseTree" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateStatement" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="RecoveredElement.class" isClass="true" isInterface="false">
    <type elementName="RecoveredElement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.RecoveredElement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.RecoveredElement">
      <fields elementName="parent" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isVolatile="false" isTransient="false"/>
      <fields elementName="bracketBalance" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="foundOpeningBrace" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="recoveringParser" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.Parser;" isVolatile="false" isTransient="false"/>
      <methods elementName="RecoveredElement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="RecoveredElement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
      </methods>
      <methods elementName="addAnnotationName" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Block;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ImportReference;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.LocalDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="addBlockStatement" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredBlock;"/>
      </methods>
      <methods elementName="addModifier" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="depth" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="enclosingInitializer" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredInitializer;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="enclosingMethod" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredMethod;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="enclosingType" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredType;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parser" returnType="Lorg.eclipse.jdt.internal.compiler.parser.Parser;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseTree" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resetPendingModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="preserveEnclosingBlocks" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="previousAvailableLineEnd" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="sourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="tabString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="topElement" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="type" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredType;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateBodyStart" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="updateFromParserState" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateOnClosingBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateOnOpeningBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateParseTree" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateSourceEndIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateSourceEndIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="RecoveredField.class" isClass="true" isInterface="false">
    <type elementName="RecoveredField" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.RecoveredField" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.RecoveredField">
      <fields elementName="fieldDeclaration" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="alreadyCompletedFieldInitialization" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="annotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="annotationCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiersStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="anonymousTypes" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredType;" isVolatile="false" isTransient="false"/>
      <fields elementName="anonymousTypeCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="RecoveredField" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="RecoveredField" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="attach" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="parseTree" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="sourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="updatedFieldDeclaration" returnType="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateOnClosingBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateOnOpeningBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateParseTree" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateSourceEndIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="RecoveredImport.class" isClass="true" isInterface="false">
    <type elementName="RecoveredImport" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.RecoveredImport" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.RecoveredImport">
      <fields elementName="importReference" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.ImportReference;" isVolatile="false" isTransient="false"/>
      <methods elementName="RecoveredImport" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ImportReference;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="parseTree" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="sourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="updatedImportReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ImportReference;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateParseTree" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateSourceEndIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="RecoveredInitializer.class" isClass="true" isInterface="false">
    <type elementName="RecoveredInitializer" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer">
      <fields elementName="localTypes" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredType;" isVolatile="false" isTransient="false"/>
      <fields elementName="localTypeCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="initializerBody" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredBlock;" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingModifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingModifersSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingAnnotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingAnnotationCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="RecoveredInitializer" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="RecoveredInitializer" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Block;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.LocalDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="addAnnotationName" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="addModifier" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="resetPendingModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="updatedFieldDeclaration" returnType="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateOnClosingBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateOnOpeningBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateSourceEndIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="RecoveredLocalVariable.class" isClass="true" isInterface="false">
    <type elementName="RecoveredLocalVariable" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable">
      <fields elementName="annotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="annotationCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiersStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="localDeclaration" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.LocalDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="alreadyCompletedLocalInitialization" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <methods elementName="RecoveredLocalVariable" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.LocalDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="attach" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="parseTree" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="sourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="updatedStatement" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateOnClosingBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateOnOpeningBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateParseTree" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateSourceEndIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="RecoveredMethod.class" isClass="true" isInterface="false">
    <type elementName="RecoveredMethod" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.RecoveredMethod" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.RecoveredMethod">
      <fields elementName="methodDeclaration" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="annotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="annotationCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiersStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="localTypes" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredType;" isVolatile="false" isTransient="false"/>
      <fields elementName="localTypeCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="methodBody" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredBlock;" isVolatile="false" isTransient="false"/>
      <fields elementName="discardBody" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingModifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingModifersSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingAnnotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingAnnotationCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="RecoveredMethod" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Block;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.LocalDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="bodyStartsAtHeaderEnd" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseTree" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resetPendingModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="sourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="updateBodyStart" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="updatedMethodDeclaration" returnType="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateFromParserState" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateOnClosingBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateOnOpeningBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateParseTree" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateSourceEndIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="addAnnotationName" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="addModifier" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="attach" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="attach" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="RecoveredStatement.class" isClass="true" isInterface="false">
    <type elementName="RecoveredStatement" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.RecoveredStatement" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.RecoveredStatement">
      <fields elementName="statement" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isVolatile="false" isTransient="false"/>
      <methods elementName="RecoveredStatement" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Statement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="parseTree" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="sourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="updatedStatement" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateParseTree" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateSourceEndIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="RecoveredType.class" isClass="true" isInterface="false">
    <type elementName="RecoveredType" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.RecoveredType" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.RecoveredType">
      <fields elementName="typeDeclaration" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="annotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="annotationCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="modifiersStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="memberTypes" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredType;" isVolatile="false" isTransient="false"/>
      <fields elementName="memberTypeCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="fields" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredField;" isVolatile="false" isTransient="false"/>
      <fields elementName="fieldCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="methods" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredMethod;" isVolatile="false" isTransient="false"/>
      <fields elementName="methodCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="preserveContent" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="bodyEnd" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="insideEnumConstantPart" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingTypeParameters" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingTypeParametersStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingModifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingModifersSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingAnnotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingAnnotationCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="RecoveredType" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.Block;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="addAnnotationName" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="addModifier" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="attach" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="bodyEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="bodyStartsAtHeaderEnd" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="enclosingType" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredType;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="lastMemberEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="name" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseTree" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resetPendingModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="sourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="updateBodyStart" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="updatedStatement" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Statement;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updatedTypeDeclaration" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateFromParserState" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateOnClosingBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateOnOpeningBrace" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="updateParseTree" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateSourceEndIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="RecoveredUnit.class" isClass="true" isInterface="false">
    <type elementName="RecoveredUnit" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.RecoveredUnit" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.RecoveredUnit">
      <fields elementName="unitDeclaration" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="imports" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredImport;" isVolatile="false" isTransient="false"/>
      <fields elementName="importCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="types" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredType;" isVolatile="false" isTransient="false"/>
      <fields elementName="typeCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingModifiers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingModifersSourceStart" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingAnnotations" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation;" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingAnnotationCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="RecoveredUnit" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.parser.Parser;"/>
      </methods>
      <methods elementName="addAnnotationName" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="addModifier" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.ImportReference;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="add" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveredElement;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="parseTree" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ASTNode;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resetPendingModifiers" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="sourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="updatedCompilationUnitDeclaration" returnType="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateParseTree" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="updateSourceEndIfNecessary" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="RecoveryScanner.class" isClass="true" isInterface="false">
    <type elementName="RecoveryScanner" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.RecoveryScanner" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.RecoveryScanner">
      <fields elementName="FAKE_IDENTIFIER" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="data" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.RecoveryScannerData;" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingTokens" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="pendingTokensPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="fakeTokenSource" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="isInserted" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="precededByRemoved" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="skipNextInsertedTokens" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="record" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="RecoveryScanner" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.Scanner;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveryScannerData;"/>
      </methods>
      <methods elementName="insertToken" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="reverse" returnType="[I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[I"/>
      </methods>
      <methods elementName="insertTokens" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="replaceTokens" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="replaceTokens" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="removeTokens" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="getNextToken" returnType="I" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="getCurrentIdentifierSource" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCurrentTokenSourceString" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCurrentTokenSource" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getData" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveryScannerData;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isFakeToken" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isInsertedToken" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isReplacedToken" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isPrecededByRemovedToken" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="setData" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.parser.RecoveryScannerData;"/>
      </methods>
      <methods elementName="setPendingTokens" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="RecoveryScannerData.class" isClass="true" isInterface="false">
    <type elementName="RecoveryScannerData" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.RecoveryScannerData" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.RecoveryScannerData">
      <fields elementName="insertedTokensPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="insertedTokens" isEnumConstant="false" typeSignature="[[I" isVolatile="false" isTransient="false"/>
      <fields elementName="insertedTokensPosition" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="insertedTokenUsed" isEnumConstant="false" typeSignature="[Z" isVolatile="false" isTransient="false"/>
      <fields elementName="replacedTokensPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="replacedTokens" isEnumConstant="false" typeSignature="[[I" isVolatile="false" isTransient="false"/>
      <fields elementName="replacedTokensStart" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="replacedTokensEnd" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="replacedTokenUsed" isEnumConstant="false" typeSignature="[Z" isVolatile="false" isTransient="false"/>
      <fields elementName="removedTokensPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="removedTokensStart" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="removedTokensEnd" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="removedTokenUsed" isEnumConstant="false" typeSignature="[Z" isVolatile="false" isTransient="false"/>
      <methods elementName="RecoveryScannerData" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="removeUnused" returnType="Lorg.eclipse.jdt.internal.compiler.parser.RecoveryScannerData;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="Scanner.class" isClass="true" isInterface="false">
    <type elementName="Scanner" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.Scanner" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.Scanner">
      <fields elementName="sourceLevel" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="complianceLevel" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <fields elementName="useAssertAsAnIndentifier" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="containsAssertKeyword" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="useEnumAsAnIndentifier" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="recordLineSeparator" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="currentCharacter" isEnumConstant="false" typeSignature="C" isVolatile="false" isTransient="false"/>
      <fields elementName="startPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="currentPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="initialPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="eofPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="skipComments" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="tokenizeComments" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="tokenizeWhiteSpace" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="source" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="withoutUnicodeBuffer" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="withoutUnicodePtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="unicodeAsBackSlash" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="scanningFloatLiteral" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="COMMENT_ARRAYS_SIZE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="commentStops" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="commentStarts" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="commentTagStarts" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="commentPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="lastCommentLinePosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="foundTaskTags" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="foundTaskMessages" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="foundTaskPriorities" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="foundTaskPositions" isEnumConstant="false" typeSignature="[[I" isVolatile="false" isTransient="false"/>
      <fields elementName="foundTaskCount" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="taskTags" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="taskPriorities" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="isTaskCaseSensitive" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="diet" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="lineEnds" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="linePtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="wasAcr" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="END_OF_SOURCE" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="INVALID_HEXA" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="INVALID_OCTAL" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="INVALID_CHARACTER_CONSTANT" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="INVALID_ESCAPE" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="INVALID_INPUT" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="INVALID_UNICODE_ESCAPE" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="INVALID_FLOAT" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="INVALID_LOW_SURROGATE" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="INVALID_HIGH_SURROGATE" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="NULL_SOURCE_STRING" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="UNTERMINATED_STRING" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="UNTERMINATED_COMMENT" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="INVALID_CHAR_IN_STRING" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="INVALID_DIGIT" isEnumConstant="false" typeSignature="Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <fields elementName="EMPTY_LINE_ENDS" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_a" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_b" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_c" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_d" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_e" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_f" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_g" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_h" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_i" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_j" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_k" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_l" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_m" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_n" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_o" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_p" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_q" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_r" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_s" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_t" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_u" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_v" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_w" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_x" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_y" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_z" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="initCharArray" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TableSize" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InternalTableSize" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="OptimizedLength" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="charArray_length" isEnumConstant="false" typeSignature="[[[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_PREFIX" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_PREFIX_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_POSTFIX" isEnumConstant="false" typeSignature="C" isVolatile="false" isTransient="false"/>
      <fields elementName="TAG_POSTFIX_LENGTH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="nlsTags" isEnumConstant="false" typeSignature="[Lorg.eclipse.jdt.internal.compiler.parser.NLSTag;" isVolatile="false" isTransient="false"/>
      <fields elementName="nlsTagsPtr" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="checkNonExternalizedStringLiterals" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="lastPosition" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="returnOnlyGreater" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="newEntry2" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="newEntry3" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="newEntry4" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="newEntry5" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="newEntry6" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="insideRecovery" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="RoundBracket" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SquareBracket" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CurlyBracket" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="BracketKinds" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LOW_SURROGATE_MIN_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="HIGH_SURROGATE_MIN_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="HIGH_SURROGATE_MAX_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LOW_SURROGATE_MAX_VALUE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="Scanner" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="Scanner" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
        <parameters name="arg1" type="Z"/>
        <parameters name="arg2" type="Z"/>
        <parameters name="arg3" type="J"/>
        <parameters name="arg4" type="J"/>
        <parameters name="arg5" type="[[C"/>
        <parameters name="arg6" type="[[C"/>
        <parameters name="arg7" type="Z"/>
      </methods>
      <methods elementName="Scanner" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
        <parameters name="arg1" type="Z"/>
        <parameters name="arg2" type="Z"/>
        <parameters name="arg3" type="J"/>
        <parameters name="arg4" type="[[C"/>
        <parameters name="arg5" type="[[C"/>
        <parameters name="arg6" type="Z"/>
      </methods>
      <methods elementName="atEnd" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="checkTaskTag" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="getCurrentIdentifierSource" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCurrentTokenEndPosition" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCurrentTokenSource" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCurrentTokenString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCurrentTokenSourceString" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCurrentStringLiteral" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getRawTokenSource" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getRawTokenSourceEnd" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCurrentTokenStartPosition" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getLineEnd" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getLineEnds" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getLineStart" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getNextChar" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getNextCharWithBoundChecks" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getNextChar" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
      </methods>
      <methods elementName="getNextChar" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="C"/>
      </methods>
      <methods elementName="getNextCharAsDigit" returnType="Z" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="getNextCharAsDigit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getNextCharAsJavaIdentifierPartWithBoundCheck" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getNextCharAsJavaIdentifierPart" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="scanIdentifier" returnType="I" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="getNextToken" returnType="I" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="getNextUnicodeChar" returnType="V" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="getNLSTags" returnType="[Lorg.eclipse.jdt.internal.compiler.parser.NLSTag;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getSource" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="jumpOverMethodBody" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="jumpOverUnicodeWhiteSpace" returnType="Z" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="optimizedCurrentTokenSource1" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="optimizedCurrentTokenSource2" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="optimizedCurrentTokenSource3" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="optimizedCurrentTokenSource4" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="optimizedCurrentTokenSource5" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="optimizedCurrentTokenSource6" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseTags" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="extractInt" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="pushLineSeparator" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="pushUnicodeLineSeparator" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="recordComment" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="resetTo" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="scanEscapeCharacter" returnType="V" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="scanIdentifierOrKeywordWithBoundCheck" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="scanIdentifierOrKeyword" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="internalScanIdentifierOrKeyword" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[C"/>
      </methods>
      <methods elementName="scanNumber" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Z"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="getLineNumber" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="setSource" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="setSource" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="setSource" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="toStringAction" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="unicodeInitializeBuffer" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="unicodeStore" returnType="V" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="ScannerHelper.class" isClass="true" isInterface="false">
    <type elementName="ScannerHelper" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.ScannerHelper" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.ScannerHelper">
      <fields elementName="Bits" isEnumConstant="false" typeSignature="[J" isVolatile="false" isTransient="false"/>
      <fields elementName="START_INDEX" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="PART_INDEX" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Tables" isEnumConstant="false" typeSignature="[[[J" isVolatile="false" isTransient="false"/>
      <fields elementName="MAX_OBVIOUS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="OBVIOUS_IDENT_CHAR_NATURES" isEnumConstant="false" typeSignature="[I" isVolatile="false" isTransient="false"/>
      <fields elementName="C_JLS_SPACE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="C_SPECIAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="C_IDENT_START" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="C_UPPER_LETTER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="C_LOWER_LETTER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="C_IDENT_PART" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="C_DIGIT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="C_SEPARATOR" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="C_SPACE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="class$0" isEnumConstant="false" typeSignature="Ljava.lang.Class;" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="ScannerHelper" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="isBitSet" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[J"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="isJavaIdentifierPart" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
      </methods>
      <methods elementName="isJavaIdentifierPart" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="C"/>
      </methods>
      <methods elementName="isJavaIdentifierStart" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
      </methods>
      <methods elementName="isJavaIdentifierStart" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="C"/>
      </methods>
      <methods elementName="toCodePoint" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="C"/>
      </methods>
      <methods elementName="isDigit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="digit" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="getNumericValue" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
      </methods>
      <methods elementName="toUpperCase" returnType="C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
      </methods>
      <methods elementName="toLowerCase" returnType="C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
      </methods>
      <methods elementName="isLowerCase" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
      </methods>
      <methods elementName="isUpperCase" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
      </methods>
      <methods elementName="isWhitespace" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
      </methods>
      <methods elementName="isLetter" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
      </methods>
      <methods elementName="isLetterOrDigit" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="SourceTypeConverter$AnonymousMemberFound.class" isClass="true" isInterface="false">
    <type elementName="AnonymousMemberFound" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter$AnonymousMemberFound" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.AnonymousMemberFound">
      <fields elementName="serialVersionUID" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <methods elementName="AnonymousMemberFound" returnType="V" isConstructor="true" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="SourceTypeConverter.class" isClass="true" isInterface="false">
    <type elementName="SourceTypeConverter" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter">
      <fields elementName="FIELD" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CONSTRUCTOR" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="METHOD" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MEMBER_TYPE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FIELD_INITIALIZATION" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FIELD_AND_METHOD" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LOCAL_TYPE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NONE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="flags" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="unit" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isVolatile="false" isTransient="false"/>
      <fields elementName="parser" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.parser.Parser;" isVolatile="false" isTransient="false"/>
      <fields elementName="cu" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.env.ICompilationUnit;" isVolatile="false" isTransient="false"/>
      <fields elementName="source" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <methods elementName="SourceTypeConverter" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.problem.ProblemReporter;"/>
      </methods>
      <methods elementName="buildCompilationUnit" returnType="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.env.ISourceType;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.problem.ProblemReporter;"/>
        <parameters name="arg3" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
      </methods>
      <methods elementName="convert" returnType="Lorg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.internal.compiler.env.ISourceType;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.JavaModelException;</exceptionTypes>
      </methods>
      <methods elementName="convert" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Initializer;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.core.InitializerElementInfo;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.JavaModelException;</exceptionTypes>
      </methods>
      <methods elementName="convert" returnType="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.core.SourceField;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.JavaModelException;</exceptionTypes>
      </methods>
      <methods elementName="convert" returnType="Lorg.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.IJavaElement;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.ast.FieldDeclaration;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.JavaModelException;</exceptionTypes>
      </methods>
      <methods elementName="convert" returnType="Lorg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.core.SourceMethod;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.core.SourceMethodElementInfo;"/>
        <parameters name="arg2" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.JavaModelException;</exceptionTypes>
      </methods>
      <methods elementName="convert" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeDeclaration;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.core.SourceType;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.compiler.CompilationResult;"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.JavaModelException;</exceptionTypes>
      </methods>
      <methods elementName="convertAnnotations" returnType="[Lorg.eclipse.jdt.internal.compiler.ast.Annotation;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.IAnnotatable;"/>
        <exceptionTypes>Lorg.eclipse.jdt.core.JavaModelException;</exceptionTypes>
      </methods>
      <methods elementName="getSource" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="parseMemberValue" returnType="Lorg.eclipse.jdt.internal.compiler.ast.Expression;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <types elementName="AnonymousMemberFound" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter$AnonymousMemberFound" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.SourceTypeConverter.AnonymousMemberFound">
        <fields elementName="serialVersionUID" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
        <methods elementName="AnonymousMemberFound" returnType="V" isConstructor="true" isMainMethod="false"/>
      </types>
    </type>
  </classFiles>
  <classFiles elementName="TerminalTokens.class" isClass="false" isInterface="true">
    <type elementName="TerminalTokens" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.TerminalTokens" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.TerminalTokens">
      <fields elementName="TokenNameWHITESPACE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameCOMMENT_LINE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameCOMMENT_BLOCK" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameCOMMENT_JAVADOC" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameIdentifier" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameabstract" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameassert" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameboolean" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamebreak" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamebyte" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamecase" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamecatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamechar" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameclass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamecontinue" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameconst" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamedefault" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamedo" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamedouble" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameelse" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameenum" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameextends" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamefalse" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamefinal" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamefinally" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamefloat" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamefor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamegoto" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameif" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameimplements" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameimport" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameinstanceof" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameint" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameinterface" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamelong" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamenative" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamenew" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamenull" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamepackage" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameprivate" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameprotected" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamepublic" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamereturn" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameshort" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamestatic" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamestrictfp" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamesuper" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameswitch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamesynchronized" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamethis" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamethrow" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamethrows" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNametransient" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNametrue" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNametry" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamevoid" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamevolatile" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamewhile" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameIntegerLiteral" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLongLiteral" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameFloatingPointLiteral" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameDoubleLiteral" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameCharacterLiteral" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameStringLiteral" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamePLUS_PLUS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameMINUS_MINUS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameEQUAL_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLESS_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameGREATER_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameNOT_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLEFT_SHIFT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameRIGHT_SHIFT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameUNSIGNED_RIGHT_SHIFT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamePLUS_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameMINUS_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameMULTIPLY_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameDIVIDE_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameAND_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameOR_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameXOR_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameREMAINDER_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLEFT_SHIFT_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameRIGHT_SHIFT_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameUNSIGNED_RIGHT_SHIFT_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameOR_OR" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameAND_AND" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamePLUS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameMINUS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameNOT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameREMAINDER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameXOR" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameAND" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameMULTIPLY" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameOR" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameTWIDDLE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameDIVIDE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameGREATER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLESS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLPAREN" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameRPAREN" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLBRACE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameRBRACE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLBRACKET" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameRBRACKET" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameSEMICOLON" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameQUESTION" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameCOLON" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameCOMMA" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameDOT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameEQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameAT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameELLIPSIS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameEOF" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameERROR" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
    </type>
  </classFiles>
  <classFiles elementName="TypeConverter.class" isClass="true" isInterface="false">
    <type elementName="TypeConverter" fullyQualifiedName="org.eclipse.jdt.internal.compiler.parser.TypeConverter" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.compiler.parser.TypeConverter">
      <fields elementName="namePos" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="problemReporter" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.compiler.problem.ProblemReporter;" isVolatile="false" isTransient="false"/>
      <fields elementName="has1_5Compliance" isEnumConstant="false" typeSignature="Z" isVolatile="false" isTransient="false"/>
      <fields elementName="memberTypeSeparator" isEnumConstant="false" typeSignature="C" isVolatile="false" isTransient="false"/>
      <methods elementName="TypeConverter" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.compiler.problem.ProblemReporter;"/>
        <parameters name="arg1" type="C"/>
      </methods>
      <methods elementName="addIdentifiers" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="Ljava.util.ArrayList;"/>
      </methods>
      <methods elementName="createImportReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.ImportReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Ljava.lang.String;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Z"/>
        <parameters name="arg4" type="I"/>
      </methods>
      <methods elementName="createTypeParameter" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeParameter;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[[C"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="createTypeReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="createTypeReference" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="decodeType" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="decodeType" returnType="Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="decodeTypeArguments" returnType="[Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="decodeTypeArguments" returnType="[Lorg.eclipse.jdt.internal.compiler.ast.TypeReference;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="extractIdentifiers" returnType="[[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
    </type>
  </classFiles>
</core:IPackageFragment>
