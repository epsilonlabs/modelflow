<?xml version="1.0" encoding="ASCII"?>
<core:IPackageFragment xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:core="org.amma.dsl.jdt.core" elementName="org.eclipse.jdt.core.compiler" isDefaultPackage="false">
  <packageFragmentRoot xsi:type="core:BinaryPackageFragmentRoot" href="../BinaryPackageFragmentRoot_org.eclipse.jdt.core_3.4.2.v_883_R34x.jar.xmi#/"/>
  <classFiles elementName="BuildContext.class" isClass="true" isInterface="false">
    <type elementName="BuildContext" fullyQualifiedName="org.eclipse.jdt.core.compiler.BuildContext" fullyQualifiedParametrizedName="org.eclipse.jdt.core.compiler.BuildContext">
      <methods elementName="BuildContext" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.core.builder.SourceFile;"/>
      </methods>
      <methods elementName="getContents" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getFile" returnType="Lorg.eclipse.core.resources.IFile;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="hasAnnotations" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="recordAddedGeneratedFiles" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.core.resources.IFile;"/>
      </methods>
      <methods elementName="recordDeletedGeneratedFiles" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.core.resources.IFile;"/>
      </methods>
      <methods elementName="recordDependencies" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Ljava.lang.String;"/>
      </methods>
      <methods elementName="recordNewProblems" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="CategorizedProblem.class" isClass="true" isInterface="false">
    <type elementName="CategorizedProblem" fullyQualifiedName="org.eclipse.jdt.core.compiler.CategorizedProblem" fullyQualifiedParametrizedName="org.eclipse.jdt.core.compiler.CategorizedProblem">
      <fields elementName="CAT_UNSPECIFIED" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_BUILDPATH" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_SYNTAX" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_IMPORT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_TYPE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_MEMBER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_INTERNAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_JAVADOC" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_CODE_STYLE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_POTENTIAL_PROGRAMMING_PROBLEM" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_NAME_SHADOWING_CONFLICT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_DEPRECATION" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_UNNECESSARY_CODE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_UNCHECKED_RAW" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_NLS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CAT_RESTRICTION" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="CategorizedProblem" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="getCategoryID" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getMarkerType" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getExtraMarkerAttributeNames" returnType="[Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getExtraMarkerAttributeValues" returnType="[Ljava.lang.Object;" isConstructor="false" isMainMethod="false"/>
    </type>
  </classFiles>
  <classFiles elementName="CharOperation.class" isClass="true" isInterface="false">
    <type elementName="CharOperation" fullyQualifiedName="org.eclipse.jdt.core.compiler.CharOperation" fullyQualifiedParametrizedName="org.eclipse.jdt.core.compiler.CharOperation">
      <fields elementName="NO_CHAR" isEnumConstant="false" typeSignature="[C" isVolatile="false" isTransient="false"/>
      <fields elementName="NO_CHAR_CHAR" isEnumConstant="false" typeSignature="[[C" isVolatile="false" isTransient="false"/>
      <fields elementName="NO_STRINGS" isEnumConstant="false" typeSignature="[Ljava.lang.String;" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="CharOperation" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="append" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="C"/>
      </methods>
      <methods elementName="append" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="[C"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="I"/>
      </methods>
      <methods elementName="arrayConcat" returnType="[[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="[[C"/>
      </methods>
      <methods elementName="camelCaseMatch" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="camelCaseMatch" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="camelCaseMatch" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="[C"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="I"/>
      </methods>
      <methods elementName="camelCaseMatch" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="[C"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="I"/>
        <parameters name="arg6" type="Z"/>
      </methods>
      <methods elementName="charArrayToStringArray" returnType="[Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
      </methods>
      <methods elementName="charToString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="arrayConcat" returnType="[[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="compareTo" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="compareWith" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="concat" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="concat" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="[C"/>
      </methods>
      <methods elementName="concat" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="C"/>
      </methods>
      <methods elementName="concat" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="C"/>
        <parameters name="arg2" type="[C"/>
        <parameters name="arg3" type="C"/>
        <parameters name="arg4" type="[C"/>
      </methods>
      <methods elementName="concat" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="C"/>
      </methods>
      <methods elementName="concatWith" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[[C"/>
        <parameters name="arg2" type="C"/>
      </methods>
      <methods elementName="concatWith" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="C"/>
      </methods>
      <methods elementName="concatWith" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="C"/>
      </methods>
      <methods elementName="contains" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="[[C"/>
      </methods>
      <methods elementName="contains" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="contains" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="deepCopy" returnType="[[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
      </methods>
      <methods elementName="endsWith" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="equals" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="[[C"/>
      </methods>
      <methods elementName="equals" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="[[C"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="equals" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="equals" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="equals" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="Z"/>
      </methods>
      <methods elementName="equals" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="fragmentEquals" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="Z"/>
      </methods>
      <methods elementName="hashCode" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="isWhitespace" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
      </methods>
      <methods elementName="indexOf" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="indexOf" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="indexOf" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="Z"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="indexOf" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="Z"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="I"/>
      </methods>
      <methods elementName="indexOf" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="indexOf" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="lastIndexOf" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="lastIndexOf" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="lastIndexOf" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="lastSegment" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="C"/>
      </methods>
      <methods elementName="match" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="match" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="[C"/>
        <parameters name="arg4" type="I"/>
        <parameters name="arg5" type="I"/>
        <parameters name="arg6" type="Z"/>
      </methods>
      <methods elementName="pathMatch" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="Z"/>
        <parameters name="arg3" type="C"/>
      </methods>
      <methods elementName="occurencesOf" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="occurencesOf" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="parseInt" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
        <exceptionTypes>Ljava.lang.NumberFormatException;</exceptionTypes>
      </methods>
      <methods elementName="prefixEquals" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="prefixEquals" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="Z"/>
      </methods>
      <methods elementName="remove" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="C"/>
      </methods>
      <methods elementName="replace" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="C"/>
        <parameters name="arg2" type="C"/>
      </methods>
      <methods elementName="replace" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="C"/>
      </methods>
      <methods elementName="replace" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="C"/>
        <parameters name="arg3" type="I"/>
        <parameters name="arg4" type="I"/>
      </methods>
      <methods elementName="replace" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="[C"/>
      </methods>
      <methods elementName="replaceOnCopy" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="C"/>
        <parameters name="arg2" type="C"/>
      </methods>
      <methods elementName="splitAndTrimOn" returnType="[[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="splitOn" returnType="[[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="[C"/>
      </methods>
      <methods elementName="splitOn" returnType="[[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="C"/>
        <parameters name="arg1" type="[C"/>
        <parameters name="arg2" type="I"/>
        <parameters name="arg3" type="I"/>
      </methods>
      <methods elementName="subarray" returnType="[[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="subarray" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
        <parameters name="arg1" type="I"/>
        <parameters name="arg2" type="I"/>
      </methods>
      <methods elementName="toLowerCase" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="trim" returnType="[C" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
      <methods elementName="toString" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
      </methods>
      <methods elementName="toStrings" returnType="[Ljava.lang.String;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[[C"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="CompilationParticipant.class" isClass="true" isInterface="false">
    <type elementName="CompilationParticipant" fullyQualifiedName="org.eclipse.jdt.core.compiler.CompilationParticipant" fullyQualifiedParametrizedName="org.eclipse.jdt.core.compiler.CompilationParticipant">
      <fields elementName="READY_FOR_BUILD" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NEEDS_FULL_BUILD" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="&lt;clinit>" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="CompilationParticipant" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="aboutToBuild" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.IJavaProject;"/>
      </methods>
      <methods elementName="buildFinished" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.IJavaProject;"/>
      </methods>
      <methods elementName="buildStarting" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.core.compiler.BuildContext;"/>
        <parameters name="arg1" type="Z"/>
      </methods>
      <methods elementName="cleanStarting" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.IJavaProject;"/>
      </methods>
      <methods elementName="isActive" returnType="Z" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.IJavaProject;"/>
      </methods>
      <methods elementName="isAnnotationProcessor" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="processAnnotations" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[Lorg.eclipse.jdt.core.compiler.BuildContext;"/>
      </methods>
      <methods elementName="reconcile" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.core.compiler.ReconcileContext;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="CompilationProgress.class" isClass="true" isInterface="false">
    <type elementName="CompilationProgress" fullyQualifiedName="org.eclipse.jdt.core.compiler.CompilationProgress" fullyQualifiedParametrizedName="org.eclipse.jdt.core.compiler.CompilationProgress">
      <methods elementName="CompilationProgress" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="begin" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="done" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isCanceled" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="setTaskName" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
      </methods>
      <methods elementName="worked" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="IProblem.class" isClass="false" isInterface="true">
    <type elementName="IProblem" fullyQualifiedName="org.eclipse.jdt.core.compiler.IProblem" fullyQualifiedParametrizedName="org.eclipse.jdt.core.compiler.IProblem">
      <fields elementName="TypeRelated" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FieldRelated" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MethodRelated" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ConstructorRelated" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ImportRelated" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Internal" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Syntax" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Javadoc" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IgnoreCategoriesMask" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Unclassified" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ObjectHasNoSuperclass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UndefinedType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NotVisibleType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AmbiguousType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UsingDeprecatedType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InternalTypeNameProvided" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnusedPrivateType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IncompatibleTypesInEqualityOperator" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IncompatibleTypesInConditionalOperator" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TypeMismatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IndirectAccessToStaticType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MissingEnclosingInstanceForConstructorCall" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MissingEnclosingInstance" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IncorrectEnclosingInstanceReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalEnclosingInstanceSpecification" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotDefineStaticInitializerInLocalType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="OuterLocalMustBeFinal" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotDefineInterfaceInLocalType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalPrimitiveOrArrayTypeForEnclosingInstance" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="EnclosingInstanceInConstructorCall" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnonymousClassCannotExtendFinalClass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotDefineAnnotationInLocalType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotDefineEnumInLocalType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NonStaticContextForEnumMemberType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TypeHidingType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UndefinedName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UninitializedLocalVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="VariableTypeCannotBeVoid" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="VariableTypeCannotBeVoidArray" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotAllocateVoidArray" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="RedefinedLocal" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="RedefinedArgument" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateFinalLocalInitialization" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NonBlankFinalLocalAssignment" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParameterAssignment" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FinalOuterLocalAssignment" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LocalVariableIsNeverUsed" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ArgumentIsNeverUsed" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="BytecodeExceeds64KLimit" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="BytecodeExceeds64KLimitForClinit" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TooManyArgumentSlots" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TooManyLocalVariableSlots" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TooManySyntheticArgumentSlots" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TooManyArrayDimensions" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="BytecodeExceeds64KLimitForConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UndefinedField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NotVisibleField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AmbiguousField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UsingDeprecatedField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NonStaticFieldFromStaticInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ReferenceToForwardField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NonStaticAccessToStaticField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnusedPrivateField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IndirectAccessToStaticField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnqualifiedFieldAccess" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FinalFieldAssignment" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UninitializedBlankFinalField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateBlankFinalFieldInitialization" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LocalVariableHidingLocalVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LocalVariableHidingField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FieldHidingLocalVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FieldHidingField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ArgumentHidingLocalVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ArgumentHidingField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MissingSerialVersion" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UndefinedMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NotVisibleMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AmbiguousMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UsingDeprecatedMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DirectInvocationOfAbstractMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="VoidMethodReturnsValue" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MethodReturnsVoid" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MethodRequiresBody" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ShouldReturnValue" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MethodButWithConstructorName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MissingReturnType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="BodyForNativeMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="BodyForAbstractMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NoMessageSendOnBaseType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParameterMismatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NoMessageSendOnArrayType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NonStaticAccessToStaticMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnusedPrivateMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IndirectAccessToStaticMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MissingTypeInMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MissingTypeInConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UndefinedConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NotVisibleConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AmbiguousConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UsingDeprecatedConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnusedPrivateConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InstanceFieldDuringConstructorInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InstanceMethodDuringConstructorInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="RecursiveConstructorInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ThisSuperDuringConstructorInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidExplicitConstructorCall" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UndefinedConstructorInDefaultConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NotVisibleConstructorInDefaultConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AmbiguousConstructorInDefaultConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UndefinedConstructorInImplicitConstructorCall" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NotVisibleConstructorInImplicitConstructorCall" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AmbiguousConstructorInImplicitConstructorCall" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnhandledExceptionInDefaultConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnhandledExceptionInImplicitConstructorCall" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ArrayReferenceRequired" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NoImplicitStringConversionForCharArrayExpression" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="StringConstantIsExceedingUtf8Limit" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NonConstantExpression" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NumericValueOutOfRange" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalCast" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidClassInstantiation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotDefineDimensionExpressionsWithInit" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MustDefineEitherDimensionExpressionsOrInitializer" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidOperator" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CodeCannotBeReached" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotReturnInInitializer" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InitializerMustCompleteNormally" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidVoidExpression" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MaskedCatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateDefaultCase" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnreachableCatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnhandledException" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IncorrectSwitchType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateCase" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateLabel" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidBreak" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidContinue" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UndefinedLabel" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidTypeToSynchronized" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidNullToSynchronized" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotThrowNull" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AssignmentHasNoEffect" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="PossibleAccidentalBooleanAssignment" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SuperfluousSemicolon" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnnecessaryCast" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnnecessaryArgumentCast" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnnecessaryInstanceof" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FinallyMustCompleteNormally" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnusedMethodDeclaredThrownException" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnusedConstructorDeclaredThrownException" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidCatchBlockSequence" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="EmptyControlFlowStatement" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnnecessaryElse" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NeedToEmulateFieldReadAccess" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NeedToEmulateFieldWriteAccess" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NeedToEmulateMethodAccess" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NeedToEmulateConstructorAccess" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FallthroughCase" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InheritedMethodHidesEnclosingName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InheritedFieldHidesEnclosingName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InheritedTypeHidesEnclosingName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalUsageOfQualifiedTypeReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnusedLabel" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ThisInStaticContext" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="StaticMethodRequested" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalDimension" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidTypeExpression" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingError" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorNoSuggestion" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidUnaryExpression" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InterfaceCannotHaveConstructors" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ArrayConstantsOnlyInArrayInitializers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorOnKeyword" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorOnKeywordNoSuggestion" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnmatchedBracket" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NoFieldOnBaseType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidExpressionAsStatement" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ExpressionShouldBeAVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MissingSemiColon" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidParenthesizedExpression" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorInsertTokenBefore" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorInsertTokenAfter" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorDeleteToken" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorDeleteTokens" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorMergeTokens" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorInvalidToken" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorMisplacedConstruct" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorReplaceTokens" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorNoSuggestionForTokens" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorUnexpectedEOF" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorInsertToComplete" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorInsertToCompleteScope" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParsingErrorInsertToCompletePhrase" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="EndOfSource" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidHexa" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidOctal" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidCharacterConstant" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidEscape" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidInput" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidUnicodeEscape" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidFloat" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NullSourceString" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnterminatedString" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnterminatedComment" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NonExternalizedStringLiteral" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidDigit" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidLowSurrogate" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidHighSurrogate" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnnecessaryNLSTag" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DiscouragedReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InterfaceCannotHaveInitializers" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateModifierForType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForClass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForInterface" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForMemberClass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForMemberInterface" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForLocalClass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ForbiddenReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierCombinationFinalAbstractForClass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalVisibilityModifierForInterfaceMemberType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalVisibilityModifierCombinationForMemberType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalStaticModifierForMemberType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SuperclassMustBeAClass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ClassExtendFinalClass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateSuperInterface" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SuperInterfaceMustBeAnInterface" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="HierarchyCircularitySelfReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="HierarchyCircularity" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="HidingEnclosingType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateNestedType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotThrowType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="PackageCollidesWithType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TypeCollidesWithPackage" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateTypes" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IsClassPathCorrect" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="PublicClassMustMatchFileName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MustSpecifyPackage" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="HierarchyHasProblems" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="PackageIsNotExpectedPackage" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ObjectCannotHaveSuperTypes" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ObjectMustBeClass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="RedundantSuperinterface" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SuperclassNotFound" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SuperclassNotVisible" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SuperclassAmbiguous" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SuperclassInternalNameProvided" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SuperclassInheritedNameHidesEnclosingName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InterfaceNotFound" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InterfaceNotVisible" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InterfaceAmbiguous" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InterfaceInternalNameProvided" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InterfaceInheritedNameHidesEnclosingName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateModifierForField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForInterfaceField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalVisibilityModifierCombinationForField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierCombinationFinalVolatileForField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnexpectedStaticModifierForField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FieldTypeNotFound" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FieldTypeNotVisible" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FieldTypeAmbiguous" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FieldTypeInternalNameProvided" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FieldTypeInheritedNameHidesEnclosingName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForArgument" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateModifierForMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForInterfaceMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalVisibilityModifierCombinationForMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnexpectedStaticModifierForMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalAbstractModifierCombinationForMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AbstractMethodInAbstractClass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ArgumentTypeCannotBeVoid" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ArgumentTypeCannotBeVoidArray" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ReturnTypeCannotBeVoidArray" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NativeMethodsCannotBeStrictfp" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateModifierForArgument" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ArgumentTypeNotFound" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ArgumentTypeNotVisible" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ArgumentTypeAmbiguous" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ArgumentTypeInternalNameProvided" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ArgumentTypeInheritedNameHidesEnclosingName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ExceptionTypeNotFound" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ExceptionTypeNotVisible" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ExceptionTypeAmbiguous" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ExceptionTypeInternalNameProvided" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ExceptionTypeInheritedNameHidesEnclosingName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ReturnTypeNotFound" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ReturnTypeNotVisible" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ReturnTypeAmbiguous" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ReturnTypeInternalNameProvided" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ReturnTypeInheritedNameHidesEnclosingName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ConflictingImport" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateImport" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotImportPackage" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnusedImport" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ImportNotFound" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ImportNotVisible" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ImportAmbiguous" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ImportInternalNameProvided" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ImportInheritedNameHidesEnclosingName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidTypeForStaticImport" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateModifierForVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LocalVariableCannotBeNull" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LocalVariableCanOnlyBeNull" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="LocalVariableMayBeNull" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AbstractMethodMustBeImplemented" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FinalMethodCannotBeOverridden" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IncompatibleExceptionInThrowsClause" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IncompatibleExceptionInInheritedMethodThrowsClause" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IncompatibleReturnType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InheritedMethodReducesVisibility" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotOverrideAStaticMethodWithAnInstanceMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotHideAnInstanceMethodWithAStaticMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="StaticInheritedMethodConflicts" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MethodReducesVisibility" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="OverridingNonVisibleMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AbstractMethodCannotBeOverridden" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="OverridingDeprecatedMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IncompatibleReturnTypeForNonInheritedInterfaceMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IncompatibleExceptionInThrowsClauseForNonInheritedInterfaceMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalVararg" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="OverridingMethodWithoutSuperInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CodeSnippetMissingClass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CodeSnippetMissingMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotUseSuperInCodeSnippet" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TooManyConstantsInConstantPool" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TooManyBytesForStringConstant" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TooManyFields" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TooManyMethods" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UseAssertAsAnIdentifier" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UseEnumAsAnIdentifier" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="EnumConstantsCannotBeSurroundedByParenthesis" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="Task" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NullLocalVariableReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="PotentialNullLocalVariableReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="RedundantNullCheckOnNullLocalVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NullLocalVariableComparisonYieldsFalse" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="RedundantLocalVariableNullAssignment" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NullLocalVariableInstanceofYieldsFalse" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="RedundantNullCheckOnNonNullLocalVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NonNullLocalVariableComparisonYieldsFalse" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UndocumentedEmptyBlock" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInvalidSeeUrlReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocMissingTagDescription" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocDuplicateTag" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocHiddenReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInvalidMemberTypeQualification" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocMissingIdentifier" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocNonStaticTypeFromStaticInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInvalidParamTagTypeParameter" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocUnexpectedTag" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocMissingParamTag" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocMissingParamName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocDuplicateParamName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInvalidParamName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocMissingReturnTag" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocDuplicateReturnTag" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocMissingThrowsTag" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocMissingThrowsClassName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInvalidThrowsClass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocDuplicateThrowsClassName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInvalidThrowsClassName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocMissingSeeReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInvalidSeeReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInvalidSeeHref" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInvalidSeeArgs" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocMissing" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInvalidTag" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocUndefinedField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocNotVisibleField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocAmbiguousField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocUsingDeprecatedField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocUndefinedConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocNotVisibleConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocAmbiguousConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocUsingDeprecatedConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocUndefinedMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocNotVisibleMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocAmbiguousMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocUsingDeprecatedMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocNoMessageSendOnBaseType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocParameterMismatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocNoMessageSendOnArrayType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocUndefinedType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocNotVisibleType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocAmbiguousType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocUsingDeprecatedType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInternalTypeNameProvided" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInheritedMethodHidesEnclosingName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInheritedFieldHidesEnclosingName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInheritedNameHidesEnclosingTypeName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocAmbiguousMethodReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocUnterminatedInlineTag" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocMalformedSeeReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocMessagePrefix" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocMissingHashCharacter" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocEmptyReturnTag" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInvalidValueReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocUnexpectedText" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocInvalidParamTagName" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateTypeVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalTypeVariableSuperReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NonStaticTypeFromStaticInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ObjectCannotBeGeneric" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NonGenericType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IncorrectArityForParameterizedType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TypeArgumentMismatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateMethodErasure" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ReferenceToForwardTypeVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="BoundMustBeAnInterface" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnsafeRawConstructorInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnsafeRawMethodInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnsafeTypeConversion" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidTypeVariableExceptionType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidParameterizedExceptionType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalGenericArray" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnsafeRawFieldAssignment" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FinalBoundForTypeVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UndefinedTypeVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SuperInterfacesCollide" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="WildcardConstructorInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="WildcardMethodInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="WildcardFieldAssignment" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="GenericMethodTypeArgumentMismatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="GenericConstructorTypeArgumentMismatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnsafeGenericCast" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalInstanceofParameterizedType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalInstanceofTypeParameter" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NonGenericMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IncorrectArityForParameterizedMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParameterizedMethodArgumentTypeMismatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NonGenericConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IncorrectArityForParameterizedConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ParameterizedConstructorArgumentTypeMismatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TypeArgumentsForRawGenericMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TypeArgumentsForRawGenericConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="SuperTypeUsingWildcard" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="GenericTypeCannotExtendThrowable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalClassLiteralForTypeVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnsafeReturnTypeOverride" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MethodNameClash" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="RawMemberTypeCannotBeParameterized" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MissingArgumentsForParameterizedMemberType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="StaticMemberOfParameterizedType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="BoundHasConflictingArguments" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateParameterizedMethods" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalQualifiedParameterizedTypeAllocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateBounds" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="BoundCannotBeArray" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnsafeRawGenericConstructorInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnsafeRawGenericMethodInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TypeParameterHidingType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="RawTypeReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="NoAdditionalBoundAfterTypeVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnsafeGenericArrayForVarargs" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalAccessFromTypeVariable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TypeHidingTypeParameterFromType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TypeHidingTypeParameterFromMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidUsageOfWildcard" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnusedTypeArgumentsForMethodInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IncompatibleTypesInForeach" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidTypeForCollection" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidUsageOfTypeParameters" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidUsageOfStaticImports" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidUsageOfForeachStatements" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidUsageOfTypeArguments" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidUsageOfEnumDeclarations" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidUsageOfVarargs" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidUsageOfAnnotations" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidUsageOfAnnotationDeclarations" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidUsageOfTypeParametersForAnnotationDeclaration" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidUsageOfTypeParametersForEnumDeclaration" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForAnnotationMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalExtendedDimensions" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidFileNameForPackageAnnotations" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForAnnotationType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForAnnotationMemberType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidAnnotationMemberType" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationCircularitySelfReference" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationCircularity" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateAnnotation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MissingValueForAnnotationMember" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateAnnotationMember" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UndefinedAnnotationMember" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationValueMustBeClassLiteral" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationValueMustBeConstant" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationFieldNeedConstantInitialization" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForAnnotationField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationCannotOverrideMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationMembersCannotHaveParameters" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationMembersCannotHaveTypeParameters" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationTypeDeclarationCannotHaveSuperclass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationTypeDeclarationCannotHaveSuperinterfaces" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DuplicateTargetInTargetAnnotation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="DisallowedTargetForAnnotation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MethodMustOverride" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationTypeDeclarationCannotHaveConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationValueMustBeAnnotation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationTypeUsedAsSuperInterface" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MissingOverrideAnnotation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="FieldMissingDeprecatedAnnotation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MethodMissingDeprecatedAnnotation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TypeMissingDeprecatedAnnotation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnhandledWarningToken" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationValueMustBeArrayInitializer" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="AnnotationValueMustBeAnEnumConstant" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MethodMustOverrideOrImplement" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnusedWarningToken" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnusedTypeArgumentsForConstructorInvocation" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CorruptedSignature" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="InvalidEncoding" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotReadSource" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="BoxingConversion" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="UnboxingConversion" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForEnum" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForEnumConstant" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForLocalEnum" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForMemberEnum" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotDeclareEnumSpecialMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalQualifiedEnumConstantLabel" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotExtendEnum" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="CannotInvokeSuperConstructorInEnum" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="EnumAbstractMethodMustBeImplemented" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="EnumSwitchCannotTargetField" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalModifierForEnumConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MissingEnumConstantCase" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="EnumStaticFieldInInInitializerContext" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="EnumConstantMustImplementAbstractMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="IllegalExtendedDimensionsForVarArgs" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="MethodVarargsArgumentNeedCast" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ConstructorVarargsArgumentNeedCast" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="VarargsConflict" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocGenericMethodTypeArgumentMismatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocNonGenericMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocIncorrectArityForParameterizedMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocParameterizedMethodArgumentTypeMismatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocTypeArgumentsForRawGenericMethod" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocGenericConstructorTypeArgumentMismatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocNonGenericConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocIncorrectArityForParameterizedConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocParameterizedConstructorArgumentTypeMismatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="JavadocTypeArgumentsForRawGenericConstructor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ExternalProblemNotFixable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="ExternalProblemFixable" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <methods elementName="getArguments" returnType="[Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getID" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getMessage" returnType="Ljava.lang.String;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getOriginatingFileName" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getSourceEnd" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getSourceLineNumber" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getSourceStart" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isError" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isWarning" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="setSourceEnd" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="setSourceLineNumber" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="setSourceStart" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="IScanner.class" isClass="false" isInterface="true">
    <type elementName="IScanner" fullyQualifiedName="org.eclipse.jdt.core.compiler.IScanner" fullyQualifiedParametrizedName="org.eclipse.jdt.core.compiler.IScanner">
      <methods elementName="getCurrentTokenSource" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getRawTokenSource" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCurrentTokenStartPosition" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getCurrentTokenEndPosition" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getLineStart" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getLineEnd" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getLineEnds" returnType="[I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getLineNumber" returnType="I" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
      </methods>
      <methods elementName="getNextToken" returnType="I" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.compiler.InvalidInputException;</exceptionTypes>
      </methods>
      <methods elementName="getSource" returnType="[C" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resetTo" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="I"/>
        <parameters name="arg1" type="I"/>
      </methods>
      <methods elementName="setSource" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="[C"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ITerminalSymbols.class" isClass="false" isInterface="true">
    <type elementName="ITerminalSymbols" fullyQualifiedName="org.eclipse.jdt.core.compiler.ITerminalSymbols" fullyQualifiedParametrizedName="org.eclipse.jdt.core.compiler.ITerminalSymbols">
      <fields elementName="TokenNameWHITESPACE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameCOMMENT_LINE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameCOMMENT_BLOCK" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameCOMMENT_JAVADOC" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameIdentifier" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameabstract" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameassert" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameboolean" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamebreak" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamebyte" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamecase" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamecatch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamechar" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameclass" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamecontinue" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamedefault" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamedo" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamedouble" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameelse" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameextends" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamefalse" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamefinal" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamefinally" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamefloat" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamefor" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameif" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameimplements" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameimport" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameinstanceof" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameint" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameinterface" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamelong" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamenative" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamenew" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamenull" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamepackage" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameprivate" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameprotected" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamepublic" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamereturn" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameshort" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamestatic" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamestrictfp" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamesuper" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameswitch" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamesynchronized" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamethis" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamethrow" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamethrows" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNametransient" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNametrue" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNametry" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamevoid" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamevolatile" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamewhile" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameIntegerLiteral" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLongLiteral" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameFloatingPointLiteral" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameDoubleLiteral" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameCharacterLiteral" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameStringLiteral" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamePLUS_PLUS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameMINUS_MINUS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameEQUAL_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLESS_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameGREATER_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameNOT_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLEFT_SHIFT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameRIGHT_SHIFT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameUNSIGNED_RIGHT_SHIFT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamePLUS_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameMINUS_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameMULTIPLY_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameDIVIDE_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameAND_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameOR_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameXOR_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameREMAINDER_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLEFT_SHIFT_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameRIGHT_SHIFT_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameUNSIGNED_RIGHT_SHIFT_EQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameOR_OR" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameAND_AND" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamePLUS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameMINUS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameNOT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameREMAINDER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameXOR" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameAND" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameMULTIPLY" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameOR" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameTWIDDLE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameDIVIDE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameGREATER" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLESS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLPAREN" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameRPAREN" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLBRACE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameRBRACE" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameLBRACKET" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameRBRACKET" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameSEMICOLON" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameQUESTION" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameCOLON" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameCOMMA" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameDOT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameEQUAL" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameEOF" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameERROR" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameenum" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameAT" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameELLIPSIS" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNameconst" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
      <fields elementName="TokenNamegoto" isEnumConstant="false" typeSignature="I" isVolatile="false" isTransient="false"/>
    </type>
  </classFiles>
  <classFiles elementName="InvalidInputException.class" isClass="true" isInterface="false">
    <type elementName="InvalidInputException" fullyQualifiedName="org.eclipse.jdt.core.compiler.InvalidInputException" fullyQualifiedParametrizedName="org.eclipse.jdt.core.compiler.InvalidInputException">
      <fields elementName="serialVersionUID" isEnumConstant="false" typeSignature="J" isVolatile="false" isTransient="false"/>
      <methods elementName="InvalidInputException" returnType="V" isConstructor="true" isMainMethod="false"/>
      <methods elementName="InvalidInputException" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
      </methods>
    </type>
  </classFiles>
  <classFiles elementName="ReconcileContext.class" isClass="true" isInterface="false">
    <type elementName="ReconcileContext" fullyQualifiedName="org.eclipse.jdt.core.compiler.ReconcileContext" fullyQualifiedParametrizedName="org.eclipse.jdt.core.compiler.ReconcileContext">
      <fields elementName="operation" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation;" isVolatile="false" isTransient="false"/>
      <fields elementName="workingCopy" isEnumConstant="false" typeSignature="Lorg.eclipse.jdt.internal.core.CompilationUnit;" isVolatile="false" isTransient="false"/>
      <methods elementName="ReconcileContext" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="arg0" type="Lorg.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation;"/>
        <parameters name="arg1" type="Lorg.eclipse.jdt.internal.core.CompilationUnit;"/>
      </methods>
      <methods elementName="getAST3" returnType="Lorg.eclipse.jdt.core.dom.CompilationUnit;" isConstructor="false" isMainMethod="false">
        <exceptionTypes>Lorg.eclipse.jdt.core.JavaModelException;</exceptionTypes>
      </methods>
      <methods elementName="getASTLevel" returnType="I" isConstructor="false" isMainMethod="false"/>
      <methods elementName="isResolvingBindings" returnType="Z" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getDelta" returnType="Lorg.eclipse.jdt.core.IJavaElementDelta;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getProblems" returnType="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
      </methods>
      <methods elementName="getWorkingCopy" returnType="Lorg.eclipse.jdt.core.ICompilationUnit;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="resetAST" returnType="V" isConstructor="false" isMainMethod="false"/>
      <methods elementName="putProblems" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="arg0" type="Ljava.lang.String;"/>
        <parameters name="arg1" type="[Lorg.eclipse.jdt.core.compiler.CategorizedProblem;"/>
      </methods>
    </type>
  </classFiles>
</core:IPackageFragment>
