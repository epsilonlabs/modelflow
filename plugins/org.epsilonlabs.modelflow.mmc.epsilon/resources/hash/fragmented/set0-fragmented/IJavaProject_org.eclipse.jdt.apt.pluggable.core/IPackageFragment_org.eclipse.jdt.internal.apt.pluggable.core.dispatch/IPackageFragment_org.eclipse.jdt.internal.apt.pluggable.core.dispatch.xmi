<?xml version="1.0" encoding="ASCII"?>
<core:IPackageFragment xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:core="org.amma.dsl.jdt.core" xmlns:dom="org.amma.dsl.jdt.dom" elementName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch" isDefaultPackage="false">
  <packageFragmentRoot xsi:type="core:SourcePackageFragmentRoot" href="../IJavaProject_org.eclipse.jdt.apt.pluggable.core.xmi#//@packageFragmentRoots.0"/>
  <compilationUnits elementName="IdeReconcileProcessingEnvImpl.java">
    <imports elementName="org.eclipse.jdt.apt.core.env.Phase" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.core.IJavaProject" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.compiler.Compiler" isOnDemand="false" isStatic="false"/>
    <types elementName="IdeReconcileProcessingEnvImpl" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch.IdeReconcileProcessingEnvImpl" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch.IdeReconcileProcessingEnvImpl">
      <methods elementName="IdeReconcileProcessingEnvImpl" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="dispatchManager" type="QIdeAnnotationProcessorManager;"/>
        <parameters name="jproject" type="QIJavaProject;"/>
        <parameters name="compiler" type="QCompiler;"/>
      </methods>
      <methods elementName="getPhase" returnType="QPhase;" isConstructor="false" isMainMethod="false"/>
    </types>
    <ast>
      <package>
        <javadoc>
          <tags nested="false">
            <fragments xsi:type="dom:TextElement" text="Copyright (c) 2007 BEA Systems, Inc. "/>
            <fragments xsi:type="dom:TextElement" text="All rights reserved. This program and the accompanying materials"/>
            <fragments xsi:type="dom:TextElement" text="are made available under the terms of the Eclipse Public License v1.0"/>
            <fragments xsi:type="dom:TextElement" text="which accompanies this distribution, and is available at"/>
            <fragments xsi:type="dom:TextElement" text="http://www.eclipse.org/legal/epl-v10.html"/>
            <fragments xsi:type="dom:TextElement" text="Contributors:"/>
            <fragments xsi:type="dom:TextElement" text="wharley@bea.com - initial API and implementation"/>
          </tags>
        </javadoc>
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch">
          <name fullyQualifiedName="dispatch" identifier="dispatch" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core">
            <name fullyQualifiedName="core" identifier="core" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable">
              <name fullyQualifiedName="pluggable" identifier="pluggable" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                  <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </package>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.env.Phase">
          <name fullyQualifiedName="Phase" identifier="Phase" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.env">
            <name fullyQualifiedName="env" identifier="env" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                  <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                    <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                    <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.core.IJavaProject">
          <name fullyQualifiedName="IJavaProject" identifier="IJavaProject" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.core">
            <name fullyQualifiedName="core" identifier="core" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
              <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.Compiler">
          <name fullyQualifiedName="Compiler" identifier="Compiler" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
            <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
              <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                  <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                  <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <types xsi:type="dom:TypeDeclaration" localTypeDeclaration="false" memberTypeDeclaration="false" packageMemberTypeDeclaration="true" interface="false">
        <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
        <javadoc>
          <tags nested="false">
            <fragments xsi:type="dom:TextElement" text="ProcessingEnvironment for reconciles in IDE."/>
          </tags>
          <tags tagName="@since" nested="false">
            <fragments xsi:type="dom:TextElement" text=" 3.3"/>
          </tags>
        </javadoc>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="true" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:SuperConstructorInvocation">
              <arguments xsi:type="dom:SimpleName" fullyQualifiedName="dispatchManager" identifier="dispatchManager" declaration="false"/>
              <arguments xsi:type="dom:SimpleName" fullyQualifiedName="jproject" identifier="jproject" declaration="false"/>
              <arguments xsi:type="dom:SimpleName" fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
            </statements>
          </body>
          <name fullyQualifiedName="IdeReconcileProcessingEnvImpl" identifier="IdeReconcileProcessingEnvImpl" declaration="false"/>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="dispatchManager" identifier="dispatchManager" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeAnnotationProcessorManager" identifier="IdeAnnotationProcessorManager" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="jproject" identifier="jproject" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="IJavaProject" identifier="IJavaProject" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="compiler" identifier="compiler" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Compiler" identifier="Compiler" declaration="false"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:MarkerAnnotation">
            <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
          </modifiers>
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:ReturnStatement">
              <expression xsi:type="dom:QualifiedName" fullyQualifiedName="Phase.RECONCILE">
                <name fullyQualifiedName="RECONCILE" identifier="RECONCILE" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="Phase" identifier="Phase" declaration="false"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="getPhase" identifier="getPhase" declaration="true"/>
          <returnType xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="Phase" identifier="Phase" declaration="false"/>
          </returnType>
        </bodyDeclarations>
        <name fullyQualifiedName="IdeReconcileProcessingEnvImpl" identifier="IdeReconcileProcessingEnvImpl" declaration="true"/>
        <superclassType xsi:type="dom:SimpleType">
          <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeProcessingEnvImpl" identifier="IdeProcessingEnvImpl" declaration="false"/>
        </superclassType>
      </types>
    </ast>
  </compilationUnits>
  <compilationUnits elementName="IdeBuildProcessingEnvImpl.java">
    <imports elementName="org.eclipse.jdt.apt.core.env.Phase" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.core.IJavaProject" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.compiler.Compiler" isOnDemand="false" isStatic="false"/>
    <types elementName="IdeBuildProcessingEnvImpl" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch.IdeBuildProcessingEnvImpl" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch.IdeBuildProcessingEnvImpl">
      <methods elementName="IdeBuildProcessingEnvImpl" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="dispatchManager" type="QIdeAnnotationProcessorManager;"/>
        <parameters name="jproject" type="QIJavaProject;"/>
        <parameters name="compiler" type="QCompiler;"/>
      </methods>
      <methods elementName="getPhase" returnType="QPhase;" isConstructor="false" isMainMethod="false"/>
    </types>
    <ast>
      <package>
        <javadoc>
          <tags nested="false">
            <fragments xsi:type="dom:TextElement" text="Copyright (c) 2007 BEA Systems, Inc. "/>
            <fragments xsi:type="dom:TextElement" text="All rights reserved. This program and the accompanying materials"/>
            <fragments xsi:type="dom:TextElement" text="are made available under the terms of the Eclipse Public License v1.0"/>
            <fragments xsi:type="dom:TextElement" text="which accompanies this distribution, and is available at"/>
            <fragments xsi:type="dom:TextElement" text="http://www.eclipse.org/legal/epl-v10.html"/>
            <fragments xsi:type="dom:TextElement" text="Contributors:"/>
            <fragments xsi:type="dom:TextElement" text="wharley@bea.com - initial API and implementation"/>
          </tags>
        </javadoc>
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch">
          <name fullyQualifiedName="dispatch" identifier="dispatch" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core">
            <name fullyQualifiedName="core" identifier="core" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable">
              <name fullyQualifiedName="pluggable" identifier="pluggable" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                  <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </package>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.env.Phase">
          <name fullyQualifiedName="Phase" identifier="Phase" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.env">
            <name fullyQualifiedName="env" identifier="env" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                  <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                    <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                    <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.core.IJavaProject">
          <name fullyQualifiedName="IJavaProject" identifier="IJavaProject" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.core">
            <name fullyQualifiedName="core" identifier="core" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
              <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.Compiler">
          <name fullyQualifiedName="Compiler" identifier="Compiler" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
            <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
              <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                  <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                  <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <types xsi:type="dom:TypeDeclaration" localTypeDeclaration="false" memberTypeDeclaration="false" packageMemberTypeDeclaration="true" interface="false">
        <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
        <javadoc>
          <tags nested="false">
            <fragments xsi:type="dom:TextElement" text="ProcessingEnvironment for build phase in IDE."/>
          </tags>
          <tags tagName="@since" nested="false">
            <fragments xsi:type="dom:TextElement" text=" 3.3"/>
          </tags>
        </javadoc>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="true" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:SuperConstructorInvocation">
              <arguments xsi:type="dom:SimpleName" fullyQualifiedName="dispatchManager" identifier="dispatchManager" declaration="false"/>
              <arguments xsi:type="dom:SimpleName" fullyQualifiedName="jproject" identifier="jproject" declaration="false"/>
              <arguments xsi:type="dom:SimpleName" fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
            </statements>
          </body>
          <name fullyQualifiedName="IdeBuildProcessingEnvImpl" identifier="IdeBuildProcessingEnvImpl" declaration="false"/>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="dispatchManager" identifier="dispatchManager" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeAnnotationProcessorManager" identifier="IdeAnnotationProcessorManager" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="jproject" identifier="jproject" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="IJavaProject" identifier="IJavaProject" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="compiler" identifier="compiler" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Compiler" identifier="Compiler" declaration="false"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:MarkerAnnotation">
            <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
          </modifiers>
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:ReturnStatement">
              <expression xsi:type="dom:QualifiedName" fullyQualifiedName="Phase.BUILD">
                <name fullyQualifiedName="BUILD" identifier="BUILD" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="Phase" identifier="Phase" declaration="false"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="getPhase" identifier="getPhase" declaration="true"/>
          <returnType xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="Phase" identifier="Phase" declaration="false"/>
          </returnType>
        </bodyDeclarations>
        <name fullyQualifiedName="IdeBuildProcessingEnvImpl" identifier="IdeBuildProcessingEnvImpl" declaration="true"/>
        <superclassType xsi:type="dom:SimpleType">
          <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeProcessingEnvImpl" identifier="IdeProcessingEnvImpl" declaration="false"/>
        </superclassType>
      </types>
    </ast>
  </compilationUnits>
  <compilationUnits elementName="IdeProcessingEnvImpl.java">
    <imports elementName="java.util.Collections" isOnDemand="false" isStatic="false"/>
    <imports elementName="java.util.HashMap" isOnDemand="false" isStatic="false"/>
    <imports elementName="java.util.Locale" isOnDemand="false" isStatic="false"/>
    <imports elementName="java.util.Map" isOnDemand="false" isStatic="false"/>
    <imports elementName="javax.lang.model.element.Element" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.core.resources.IFile" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.core.resources.IProject" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.core.runtime.Path" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.apt.core.env.Phase" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.apt.core.internal.AptCompilationParticipant" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.apt.core.internal.AptPlugin" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.apt.core.internal.AptProject" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.apt.core.internal.generatedfile.FileGenerationResult" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.apt.core.util.AptConfig" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.core.IJavaProject" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.apt.pluggable.core.filer.IdeFilerImpl" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.compiler.Compiler" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.compiler.apt.model.IElementInfo" isOnDemand="false" isStatic="false"/>
    <types elementName="IdeProcessingEnvImpl" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch.IdeProcessingEnvImpl" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch.IdeProcessingEnvImpl">
      <fields elementName="_dispatchManager" isEnumConstant="false" typeSignature="QIdeAnnotationProcessorManager;" isVolatile="false" isTransient="false"/>
      <fields elementName="_javaProject" isEnumConstant="false" typeSignature="QIJavaProject;" isVolatile="false" isTransient="false"/>
      <fields elementName="_aptProject" isEnumConstant="false" typeSignature="QAptProject;" isVolatile="false" isTransient="false"/>
      <methods elementName="IdeProcessingEnvImpl" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="dispatchManager" type="QIdeAnnotationProcessorManager;"/>
        <parameters name="jproject" type="QIJavaProject;"/>
        <parameters name="compiler" type="QCompiler;"/>
      </methods>
      <methods elementName="getLocale" returnType="QLocale;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getOptions" returnType="QMap&lt;QString;QString;>;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getAptProject" returnType="QAptProject;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getJavaProject" returnType="QIJavaProject;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getProject" returnType="QIProject;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getPhase" returnType="QPhase;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="getEnclosingIFile" returnType="QIFile;" isConstructor="false" isMainMethod="false">
        <parameters name="elem" type="QElement;"/>
      </methods>
      <methods elementName="addNewUnit" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="result" type="QFileGenerationResult;"/>
      </methods>
      <methods elementName="addNewResource" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="file" type="QIFile;"/>
      </methods>
      <methods elementName="currentProcessorSupportsRTTG" returnType="Z" isConstructor="false" isMainMethod="false"/>
    </types>
    <ast>
      <package>
        <javadoc>
          <tags nested="false">
            <fragments xsi:type="dom:TextElement" text="Copyright (c) 2007 BEA Systems, Inc. "/>
            <fragments xsi:type="dom:TextElement" text="All rights reserved. This program and the accompanying materials"/>
            <fragments xsi:type="dom:TextElement" text="are made available under the terms of the Eclipse Public License v1.0"/>
            <fragments xsi:type="dom:TextElement" text="which accompanies this distribution, and is available at"/>
            <fragments xsi:type="dom:TextElement" text="http://www.eclipse.org/legal/epl-v10.html"/>
            <fragments xsi:type="dom:TextElement" text="Contributors:"/>
            <fragments xsi:type="dom:TextElement" text="wharley@bea.com - initial API and implementation"/>
          </tags>
        </javadoc>
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch">
          <name fullyQualifiedName="dispatch" identifier="dispatch" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core">
            <name fullyQualifiedName="core" identifier="core" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable">
              <name fullyQualifiedName="pluggable" identifier="pluggable" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                  <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </package>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="java.util.Collections">
          <name fullyQualifiedName="Collections" identifier="Collections" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="java.util">
            <name fullyQualifiedName="util" identifier="util" declaration="false"/>
            <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="java" identifier="java" declaration="false"/>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="java.util.HashMap">
          <name fullyQualifiedName="HashMap" identifier="HashMap" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="java.util">
            <name fullyQualifiedName="util" identifier="util" declaration="false"/>
            <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="java" identifier="java" declaration="false"/>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="java.util.Locale">
          <name fullyQualifiedName="Locale" identifier="Locale" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="java.util">
            <name fullyQualifiedName="util" identifier="util" declaration="false"/>
            <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="java" identifier="java" declaration="false"/>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="java.util.Map">
          <name fullyQualifiedName="Map" identifier="Map" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="java.util">
            <name fullyQualifiedName="util" identifier="util" declaration="false"/>
            <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="java" identifier="java" declaration="false"/>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang.model.element.Element">
          <name fullyQualifiedName="Element" identifier="Element" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang.model.element">
            <name fullyQualifiedName="element" identifier="element" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang.model">
              <name fullyQualifiedName="model" identifier="model" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang">
                <name fullyQualifiedName="lang" identifier="lang" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="javax" identifier="javax" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core.resources.IFile">
          <name fullyQualifiedName="IFile" identifier="IFile" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core.resources">
            <name fullyQualifiedName="resources" identifier="resources" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core.resources.IProject">
          <name fullyQualifiedName="IProject" identifier="IProject" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core.resources">
            <name fullyQualifiedName="resources" identifier="resources" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core.runtime.Path">
          <name fullyQualifiedName="Path" identifier="Path" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core.runtime">
            <name fullyQualifiedName="runtime" identifier="runtime" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.env.Phase">
          <name fullyQualifiedName="Phase" identifier="Phase" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.env">
            <name fullyQualifiedName="env" identifier="env" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                  <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                    <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                    <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal.AptCompilationParticipant">
          <name fullyQualifiedName="AptCompilationParticipant" identifier="AptCompilationParticipant" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal">
            <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                  <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                    <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                    <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal.AptPlugin">
          <name fullyQualifiedName="AptPlugin" identifier="AptPlugin" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal">
            <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                  <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                    <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                    <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal.AptProject">
          <name fullyQualifiedName="AptProject" identifier="AptProject" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal">
            <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                  <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                    <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                    <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal.generatedfile.FileGenerationResult">
          <name fullyQualifiedName="FileGenerationResult" identifier="FileGenerationResult" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal.generatedfile">
            <name fullyQualifiedName="generatedfile" identifier="generatedfile" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal">
              <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core">
                <name fullyQualifiedName="core" identifier="core" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt">
                  <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.util.AptConfig">
          <name fullyQualifiedName="AptConfig" identifier="AptConfig" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.util">
            <name fullyQualifiedName="util" identifier="util" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                  <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                    <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                    <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.core.IJavaProject">
          <name fullyQualifiedName="IJavaProject" identifier="IJavaProject" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.core">
            <name fullyQualifiedName="core" identifier="core" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
              <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core.filer.IdeFilerImpl">
          <name fullyQualifiedName="IdeFilerImpl" identifier="IdeFilerImpl" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core.filer">
            <name fullyQualifiedName="filer" identifier="filer" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable">
                <name fullyQualifiedName="pluggable" identifier="pluggable" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt">
                  <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                    <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                      <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                      <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                        <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                        <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                      </qualifier>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.Compiler">
          <name fullyQualifiedName="Compiler" identifier="Compiler" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
            <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
              <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                  <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                  <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl">
          <name fullyQualifiedName="BaseProcessingEnvImpl" identifier="BaseProcessingEnvImpl" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.dispatch">
            <name fullyQualifiedName="dispatch" identifier="dispatch" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt">
              <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
                <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                  <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.model.IElementInfo">
          <name fullyQualifiedName="IElementInfo" identifier="IElementInfo" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.model">
            <name fullyQualifiedName="model" identifier="model" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt">
              <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
                <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                  <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <types xsi:type="dom:TypeDeclaration" localTypeDeclaration="false" memberTypeDeclaration="false" packageMemberTypeDeclaration="true" interface="false">
        <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
        <modifiers xsi:type="dom:Modifier" abstract="true" final="false" native="false" private="false" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
        <javadoc>
          <tags nested="false">
            <fragments xsi:type="dom:TextElement" text="Implementation of ProcessingEnvironment when running inside IDE."/>
            <fragments xsi:type="dom:TextElement" text="The lifetime of this object corresponds to the lifetime of the"/>
            <fragments xsi:type="dom:TagElement" tagName="@link" nested="true">
              <fragments xsi:type="dom:SimpleName" fullyQualifiedName="IdeAnnotationProcessorManager" identifier="IdeAnnotationProcessorManager" declaration="false"/>
            </fragments>
            <fragments xsi:type="dom:TextElement" text=" that owns it."/>
          </tags>
          <tags tagName="@see" nested="false">
            <fragments xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl">
              <name fullyQualifiedName="BatchProcessingEnvImpl" identifier="BatchProcessingEnvImpl" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.dispatch">
                <name fullyQualifiedName="dispatch" identifier="dispatch" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt">
                  <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
                    <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                      <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                      <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                        <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                        <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                          <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                          <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                        </qualifier>
                      </qualifier>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </fragments>
          </tags>
        </javadoc>
        <bodyDeclarations xsi:type="dom:FieldDeclaration">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <modifiers xsi:type="dom:Modifier" abstract="false" final="true" native="false" private="false" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <fragments extraDimensions="0">
            <name fullyQualifiedName="_dispatchManager" identifier="_dispatchManager" declaration="true"/>
          </fragments>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeAnnotationProcessorManager" identifier="IdeAnnotationProcessorManager" declaration="false"/>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:FieldDeclaration">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <modifiers xsi:type="dom:Modifier" abstract="false" final="true" native="false" private="false" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <fragments extraDimensions="0">
            <name fullyQualifiedName="_javaProject" identifier="_javaProject" declaration="true"/>
          </fragments>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="IJavaProject" identifier="IJavaProject" declaration="false"/>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:FieldDeclaration">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="true" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <modifiers xsi:type="dom:Modifier" abstract="false" final="true" native="false" private="false" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <fragments extraDimensions="0">
            <name fullyQualifiedName="_aptProject" identifier="_aptProject" declaration="true"/>
          </fragments>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="AptProject" identifier="AptProject" declaration="false"/>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="true" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:Assignment" operator="=">
                <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_dispatchManager" identifier="_dispatchManager" declaration="false"/>
                <rightHandSide xsi:type="dom:SimpleName" fullyQualifiedName="dispatchManager" identifier="dispatchManager" declaration="false"/>
              </expression>
            </statements>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:Assignment" operator="=">
                <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_javaProject" identifier="_javaProject" declaration="false"/>
                <rightHandSide xsi:type="dom:SimpleName" fullyQualifiedName="jproject" identifier="jproject" declaration="false"/>
              </expression>
            </statements>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:Assignment" operator="=">
                <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_compiler" identifier="_compiler" declaration="false"/>
                <rightHandSide xsi:type="dom:SimpleName" fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
              </expression>
            </statements>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:Assignment" operator="=">
                <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_aptProject" identifier="_aptProject" declaration="false"/>
                <rightHandSide xsi:type="dom:MethodInvocation">
                  <arguments xsi:type="dom:SimpleName" fullyQualifiedName="jproject" identifier="jproject" declaration="false"/>
                  <expression xsi:type="dom:SimpleName" fullyQualifiedName="AptPlugin" identifier="AptPlugin" declaration="false"/>
                  <name fullyQualifiedName="getAptProject" identifier="getAptProject" declaration="false"/>
                </rightHandSide>
              </expression>
            </statements>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:Assignment" operator="=">
                <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_filer" identifier="_filer" declaration="false"/>
                <rightHandSide xsi:type="dom:ClassInstanceCreation">
                  <arguments xsi:type="dom:SimpleName" fullyQualifiedName="_dispatchManager" identifier="_dispatchManager" declaration="false"/>
                  <arguments xsi:type="dom:ThisExpression"/>
                  <type xsi:type="dom:SimpleType">
                    <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeFilerImpl" identifier="IdeFilerImpl" declaration="false"/>
                  </type>
                </rightHandSide>
              </expression>
            </statements>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:Assignment" operator="=">
                <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_messager" identifier="_messager" declaration="false"/>
                <rightHandSide xsi:type="dom:ClassInstanceCreation">
                  <arguments xsi:type="dom:SimpleName" fullyQualifiedName="_dispatchManager" identifier="_dispatchManager" declaration="false"/>
                  <arguments xsi:type="dom:ThisExpression"/>
                  <type xsi:type="dom:SimpleType">
                    <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeMessagerImpl" identifier="IdeMessagerImpl" declaration="false"/>
                  </type>
                </rightHandSide>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="IdeProcessingEnvImpl" identifier="IdeProcessingEnvImpl" declaration="false"/>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="dispatchManager" identifier="dispatchManager" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeAnnotationProcessorManager" identifier="IdeAnnotationProcessorManager" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="jproject" identifier="jproject" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="IJavaProject" identifier="IJavaProject" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="compiler" identifier="compiler" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Compiler" identifier="Compiler" declaration="false"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:MarkerAnnotation">
            <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
          </modifiers>
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:ReturnStatement">
              <expression xsi:type="dom:MethodInvocation">
                <expression xsi:type="dom:SimpleName" fullyQualifiedName="Locale" identifier="Locale" declaration="false"/>
                <name fullyQualifiedName="getDefault" identifier="getDefault" declaration="false"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="getLocale" identifier="getLocale" declaration="true"/>
          <returnType xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="Locale" identifier="Locale" declaration="false"/>
          </returnType>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:MarkerAnnotation">
            <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
          </modifiers>
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:IfStatement">
              <expression xsi:type="dom:InfixExpression" operator="==">
                <leftOperand xsi:type="dom:NullLiteral"/>
                <rightOperand xsi:type="dom:SimpleName" fullyQualifiedName="_processorOptions" identifier="_processorOptions" declaration="false"/>
              </expression>
              <thenStatement xsi:type="dom:Block">
                <statements xsi:type="dom:VariableDeclarationStatement">
                  <fragments extraDimensions="0">
                    <initializer xsi:type="dom:MethodInvocation">
                      <arguments xsi:type="dom:SimpleName" fullyQualifiedName="_javaProject" identifier="_javaProject" declaration="false"/>
                      <expression xsi:type="dom:SimpleName" fullyQualifiedName="AptConfig" identifier="AptConfig" declaration="false"/>
                      <name fullyQualifiedName="getProcessorOptions" identifier="getProcessorOptions" declaration="false"/>
                    </initializer>
                    <name fullyQualifiedName="allOptions" identifier="allOptions" declaration="true"/>
                  </fragments>
                  <type xsi:type="dom:ParameterizedType">
                    <type xsi:type="dom:SimpleType">
                      <name xsi:type="dom:SimpleName" fullyQualifiedName="Map" identifier="Map" declaration="false"/>
                    </type>
                    <typeArguments xsi:type="dom:SimpleType">
                      <name xsi:type="dom:SimpleName" fullyQualifiedName="String" identifier="String" declaration="false"/>
                    </typeArguments>
                    <typeArguments xsi:type="dom:SimpleType">
                      <name xsi:type="dom:SimpleName" fullyQualifiedName="String" identifier="String" declaration="false"/>
                    </typeArguments>
                  </type>
                </statements>
                <statements xsi:type="dom:VariableDeclarationStatement">
                  <fragments extraDimensions="0">
                    <initializer xsi:type="dom:ClassInstanceCreation">
                      <type xsi:type="dom:ParameterizedType">
                        <type xsi:type="dom:SimpleType">
                          <name xsi:type="dom:SimpleName" fullyQualifiedName="HashMap" identifier="HashMap" declaration="false"/>
                        </type>
                        <typeArguments xsi:type="dom:SimpleType">
                          <name xsi:type="dom:SimpleName" fullyQualifiedName="String" identifier="String" declaration="false"/>
                        </typeArguments>
                        <typeArguments xsi:type="dom:SimpleType">
                          <name xsi:type="dom:SimpleName" fullyQualifiedName="String" identifier="String" declaration="false"/>
                        </typeArguments>
                      </type>
                    </initializer>
                    <name fullyQualifiedName="procOptions" identifier="procOptions" declaration="true"/>
                  </fragments>
                  <type xsi:type="dom:ParameterizedType">
                    <type xsi:type="dom:SimpleType">
                      <name xsi:type="dom:SimpleName" fullyQualifiedName="Map" identifier="Map" declaration="false"/>
                    </type>
                    <typeArguments xsi:type="dom:SimpleType">
                      <name xsi:type="dom:SimpleName" fullyQualifiedName="String" identifier="String" declaration="false"/>
                    </typeArguments>
                    <typeArguments xsi:type="dom:SimpleType">
                      <name xsi:type="dom:SimpleName" fullyQualifiedName="String" identifier="String" declaration="false"/>
                    </typeArguments>
                  </type>
                </statements>
                <statements xsi:type="dom:EnhancedForStatement">
                  <body xsi:type="dom:Block">
                    <statements xsi:type="dom:IfStatement">
                      <expression xsi:type="dom:PrefixExpression" operator="!">
                        <operand xsi:type="dom:MethodInvocation">
                          <arguments xsi:type="dom:StringLiteral" escapedValue="&quot;-&quot;"/>
                          <expression xsi:type="dom:MethodInvocation">
                            <expression xsi:type="dom:SimpleName" fullyQualifiedName="entry" identifier="entry" declaration="false"/>
                            <name fullyQualifiedName="getKey" identifier="getKey" declaration="false"/>
                          </expression>
                          <name fullyQualifiedName="startsWith" identifier="startsWith" declaration="false"/>
                        </operand>
                      </expression>
                      <thenStatement xsi:type="dom:Block">
                        <statements xsi:type="dom:ExpressionStatement">
                          <expression xsi:type="dom:MethodInvocation">
                            <arguments xsi:type="dom:MethodInvocation">
                              <expression xsi:type="dom:SimpleName" fullyQualifiedName="entry" identifier="entry" declaration="false"/>
                              <name fullyQualifiedName="getKey" identifier="getKey" declaration="false"/>
                            </arguments>
                            <arguments xsi:type="dom:MethodInvocation">
                              <expression xsi:type="dom:SimpleName" fullyQualifiedName="entry" identifier="entry" declaration="false"/>
                              <name fullyQualifiedName="getValue" identifier="getValue" declaration="false"/>
                            </arguments>
                            <expression xsi:type="dom:SimpleName" fullyQualifiedName="procOptions" identifier="procOptions" declaration="false"/>
                            <name fullyQualifiedName="put" identifier="put" declaration="false"/>
                          </expression>
                        </statements>
                      </thenStatement>
                    </statements>
                  </body>
                  <expression xsi:type="dom:MethodInvocation">
                    <expression xsi:type="dom:SimpleName" fullyQualifiedName="allOptions" identifier="allOptions" declaration="false"/>
                    <name fullyQualifiedName="entrySet" identifier="entrySet" declaration="false"/>
                  </expression>
                  <parameter extraDimensions="0" varargs="false">
                    <name fullyQualifiedName="entry" identifier="entry" declaration="true"/>
                    <type xsi:type="dom:ParameterizedType">
                      <type xsi:type="dom:SimpleType">
                        <name xsi:type="dom:QualifiedName" fullyQualifiedName="Map.Entry">
                          <name fullyQualifiedName="Entry" identifier="Entry" declaration="false"/>
                          <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="Map" identifier="Map" declaration="false"/>
                        </name>
                      </type>
                      <typeArguments xsi:type="dom:SimpleType">
                        <name xsi:type="dom:SimpleName" fullyQualifiedName="String" identifier="String" declaration="false"/>
                      </typeArguments>
                      <typeArguments xsi:type="dom:SimpleType">
                        <name xsi:type="dom:SimpleName" fullyQualifiedName="String" identifier="String" declaration="false"/>
                      </typeArguments>
                    </type>
                  </parameter>
                </statements>
                <statements xsi:type="dom:ExpressionStatement">
                  <expression xsi:type="dom:MethodInvocation">
                    <arguments xsi:type="dom:StringLiteral" escapedValue="&quot;phase&quot;"/>
                    <arguments xsi:type="dom:MethodInvocation">
                      <expression xsi:type="dom:MethodInvocation">
                        <name fullyQualifiedName="getPhase" identifier="getPhase" declaration="false"/>
                      </expression>
                      <name fullyQualifiedName="toString" identifier="toString" declaration="false"/>
                    </arguments>
                    <expression xsi:type="dom:SimpleName" fullyQualifiedName="procOptions" identifier="procOptions" declaration="false"/>
                    <name fullyQualifiedName="put" identifier="put" declaration="false"/>
                  </expression>
                </statements>
                <statements xsi:type="dom:ExpressionStatement">
                  <expression xsi:type="dom:Assignment" operator="=">
                    <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_processorOptions" identifier="_processorOptions" declaration="false"/>
                    <rightHandSide xsi:type="dom:MethodInvocation">
                      <arguments xsi:type="dom:SimpleName" fullyQualifiedName="procOptions" identifier="procOptions" declaration="false"/>
                      <expression xsi:type="dom:SimpleName" fullyQualifiedName="Collections" identifier="Collections" declaration="false"/>
                      <name fullyQualifiedName="unmodifiableMap" identifier="unmodifiableMap" declaration="false"/>
                    </rightHandSide>
                  </expression>
                </statements>
              </thenStatement>
            </statements>
            <statements xsi:type="dom:ReturnStatement">
              <expression xsi:type="dom:SimpleName" fullyQualifiedName="_processorOptions" identifier="_processorOptions" declaration="false"/>
            </statements>
          </body>
          <name fullyQualifiedName="getOptions" identifier="getOptions" declaration="true"/>
          <returnType xsi:type="dom:ParameterizedType">
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Map" identifier="Map" declaration="false"/>
            </type>
            <typeArguments xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="String" identifier="String" declaration="false"/>
            </typeArguments>
            <typeArguments xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="String" identifier="String" declaration="false"/>
            </typeArguments>
          </returnType>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:ReturnStatement">
              <expression xsi:type="dom:SimpleName" fullyQualifiedName="_aptProject" identifier="_aptProject" declaration="false"/>
            </statements>
          </body>
          <name fullyQualifiedName="getAptProject" identifier="getAptProject" declaration="true"/>
          <returnType xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="AptProject" identifier="AptProject" declaration="false"/>
          </returnType>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:ReturnStatement">
              <expression xsi:type="dom:SimpleName" fullyQualifiedName="_javaProject" identifier="_javaProject" declaration="false"/>
            </statements>
          </body>
          <name fullyQualifiedName="getJavaProject" identifier="getJavaProject" declaration="true"/>
          <returnType xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="IJavaProject" identifier="IJavaProject" declaration="false"/>
          </returnType>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:ReturnStatement">
              <expression xsi:type="dom:MethodInvocation">
                <expression xsi:type="dom:SimpleName" fullyQualifiedName="_javaProject" identifier="_javaProject" declaration="false"/>
                <name fullyQualifiedName="getProject" identifier="getProject" declaration="false"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="getProject" identifier="getProject" declaration="true"/>
          <returnType xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="IProject" identifier="IProject" declaration="false"/>
          </returnType>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <modifiers xsi:type="dom:Modifier" abstract="true" final="false" native="false" private="false" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <javadoc>
            <tags tagName="@return" nested="false">
              <fragments xsi:type="dom:TextElement" text=" whether this environment supports building or reconciling."/>
            </tags>
          </javadoc>
          <name fullyQualifiedName="getPhase" identifier="getPhase" declaration="true"/>
          <returnType xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="Phase" identifier="Phase" declaration="false"/>
          </returnType>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <javadoc>
            <tags nested="false">
              <fragments xsi:type="dom:TextElement" text="Get the IFile that contains or represents the specified source element."/>
              <fragments xsi:type="dom:TextElement" text="If the element is a package, get the IFile corresponding to its"/>
              <fragments xsi:type="dom:TextElement" text="package-info.java file.  If the element is a top-level type, get the"/>
              <fragments xsi:type="dom:TextElement" text="IFile corresponding to its type.  If the element is a nested element"/>
              <fragments xsi:type="dom:TextElement" text="of some sort (nested type, method, etc.) then get the IFile corresponding"/>
              <fragments xsi:type="dom:TextElement" text="to the containing top-level type."/>
              <fragments xsi:type="dom:TextElement" text="If the element is not a source type at all, then return null."/>
            </tags>
            <tags tagName="@param" nested="false">
              <fragments xsi:type="dom:SimpleName" fullyQualifiedName="elem" identifier="elem" declaration="false"/>
            </tags>
            <tags tagName="@return" nested="false">
              <fragments xsi:type="dom:TextElement" text=" may be null"/>
            </tags>
          </javadoc>
          <body>
            <statements xsi:type="dom:VariableDeclarationStatement">
              <fragments extraDimensions="0">
                <initializer xsi:type="dom:CastExpression">
                  <expression xsi:type="dom:SimpleName" fullyQualifiedName="elem" identifier="elem" declaration="false"/>
                  <type xsi:type="dom:SimpleType">
                    <name xsi:type="dom:SimpleName" fullyQualifiedName="IElementInfo" identifier="IElementInfo" declaration="false"/>
                  </type>
                </initializer>
                <name fullyQualifiedName="impl" identifier="impl" declaration="true"/>
              </fragments>
              <type xsi:type="dom:SimpleType">
                <name xsi:type="dom:SimpleName" fullyQualifiedName="IElementInfo" identifier="IElementInfo" declaration="false"/>
              </type>
            </statements>
            <statements xsi:type="dom:VariableDeclarationStatement">
              <fragments extraDimensions="0">
                <initializer xsi:type="dom:MethodInvocation">
                  <expression xsi:type="dom:SimpleName" fullyQualifiedName="impl" identifier="impl" declaration="false"/>
                  <name fullyQualifiedName="getFileName" identifier="getFileName" declaration="false"/>
                </initializer>
                <name fullyQualifiedName="name" identifier="name" declaration="true"/>
              </fragments>
              <type xsi:type="dom:SimpleType">
                <name xsi:type="dom:SimpleName" fullyQualifiedName="String" identifier="String" declaration="false"/>
              </type>
            </statements>
            <statements xsi:type="dom:IfStatement">
              <expression xsi:type="dom:InfixExpression" operator="==">
                <leftOperand xsi:type="dom:SimpleName" fullyQualifiedName="name" identifier="name" declaration="false"/>
                <rightOperand xsi:type="dom:NullLiteral"/>
              </expression>
              <thenStatement xsi:type="dom:Block">
                <statements xsi:type="dom:ReturnStatement">
                  <expression xsi:type="dom:NullLiteral"/>
                </statements>
              </thenStatement>
            </statements>
            <statements xsi:type="dom:VariableDeclarationStatement">
              <fragments extraDimensions="0">
                <initializer xsi:type="dom:MethodInvocation">
                  <arguments xsi:type="dom:ClassInstanceCreation">
                    <arguments xsi:type="dom:SimpleName" fullyQualifiedName="name" identifier="name" declaration="false"/>
                    <type xsi:type="dom:SimpleType">
                      <name xsi:type="dom:SimpleName" fullyQualifiedName="Path" identifier="Path" declaration="false"/>
                    </type>
                  </arguments>
                  <expression xsi:type="dom:MethodInvocation">
                    <expression xsi:type="dom:MethodInvocation">
                      <expression xsi:type="dom:SimpleName" fullyQualifiedName="_javaProject" identifier="_javaProject" declaration="false"/>
                      <name fullyQualifiedName="getProject" identifier="getProject" declaration="false"/>
                    </expression>
                    <name fullyQualifiedName="getParent" identifier="getParent" declaration="false"/>
                  </expression>
                  <name fullyQualifiedName="getFile" identifier="getFile" declaration="false"/>
                </initializer>
                <name fullyQualifiedName="file" identifier="file" declaration="true"/>
              </fragments>
              <type xsi:type="dom:SimpleType">
                <name xsi:type="dom:SimpleName" fullyQualifiedName="IFile" identifier="IFile" declaration="false"/>
              </type>
            </statements>
            <statements xsi:type="dom:ReturnStatement">
              <expression xsi:type="dom:SimpleName" fullyQualifiedName="file" identifier="file" declaration="false"/>
            </statements>
          </body>
          <name fullyQualifiedName="getEnclosingIFile" identifier="getEnclosingIFile" declaration="true"/>
          <returnType xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="IFile" identifier="IFile" declaration="false"/>
          </returnType>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="elem" identifier="elem" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Element" identifier="Element" declaration="false"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <javadoc>
            <tags nested="false">
              <fragments xsi:type="dom:TextElement" text="Inform the environment that a new Java file has been generated."/>
            </tags>
            <tags tagName="@param" nested="false">
              <fragments xsi:type="dom:SimpleName" fullyQualifiedName="result" identifier="result" declaration="false"/>
              <fragments xsi:type="dom:TextElement" text=" must be non-null"/>
            </tags>
          </javadoc>
          <body>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:MethodInvocation">
                <arguments xsi:type="dom:MethodInvocation">
                  <expression xsi:type="dom:SimpleName" fullyQualifiedName="result" identifier="result" declaration="false"/>
                  <name fullyQualifiedName="getFile" identifier="getFile" declaration="false"/>
                </arguments>
                <expression xsi:type="dom:MethodInvocation">
                  <expression xsi:type="dom:SimpleName" fullyQualifiedName="AptCompilationParticipant" identifier="AptCompilationParticipant" declaration="false"/>
                  <name fullyQualifiedName="getInstance" identifier="getInstance" declaration="false"/>
                </expression>
                <name fullyQualifiedName="addJava6GeneratedFile" identifier="addJava6GeneratedFile" declaration="false"/>
              </expression>
            </statements>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:MethodInvocation">
                <arguments xsi:type="dom:MethodInvocation">
                  <arguments xsi:type="dom:MethodInvocation">
                    <expression xsi:type="dom:SimpleName" fullyQualifiedName="result" identifier="result" declaration="false"/>
                    <name fullyQualifiedName="getFile" identifier="getFile" declaration="false"/>
                  </arguments>
                  <expression xsi:type="dom:SimpleName" fullyQualifiedName="_dispatchManager" identifier="_dispatchManager" declaration="false"/>
                  <name fullyQualifiedName="findCompilationUnit" identifier="findCompilationUnit" declaration="false"/>
                </arguments>
                <name fullyQualifiedName="addNewUnit" identifier="addNewUnit" declaration="false"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="addNewUnit" identifier="addNewUnit" declaration="true"/>
          <returnType xsi:type="dom:PrimitiveType" code="void"/>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="result" identifier="result" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="FileGenerationResult" identifier="FileGenerationResult" declaration="false"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <javadoc>
            <tags nested="false">
              <fragments xsi:type="dom:TextElement" text="Inform the environment that a new non-Java file has been generated."/>
              <fragments xsi:type="dom:TextElement" text="This file will not be submitted to a subsequent round of processing in"/>
              <fragments xsi:type="dom:TextElement" text="the current build, even if the file happens to be in a source location"/>
              <fragments xsi:type="dom:TextElement" text="and named with a Java-like name.  However, its dependencies will be"/>
              <fragments xsi:type="dom:TextElement" text="tracked in the same manner as Java files, e.g., it will be deleted"/>
              <fragments xsi:type="dom:TextElement" text="if changes in source cause it to no longer be generated."/>
            </tags>
            <tags tagName="@param" nested="false">
              <fragments xsi:type="dom:SimpleName" fullyQualifiedName="file" identifier="file" declaration="false"/>
              <fragments xsi:type="dom:TextElement" text=" must be non-null"/>
            </tags>
          </javadoc>
          <body>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:MethodInvocation">
                <arguments xsi:type="dom:SimpleName" fullyQualifiedName="file" identifier="file" declaration="false"/>
                <expression xsi:type="dom:MethodInvocation">
                  <expression xsi:type="dom:SimpleName" fullyQualifiedName="AptCompilationParticipant" identifier="AptCompilationParticipant" declaration="false"/>
                  <name fullyQualifiedName="getInstance" identifier="getInstance" declaration="false"/>
                </expression>
                <name fullyQualifiedName="addJava6GeneratedFile" identifier="addJava6GeneratedFile" declaration="false"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="addNewResource" identifier="addNewResource" declaration="true"/>
          <returnType xsi:type="dom:PrimitiveType" code="void"/>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="file" identifier="file" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="IFile" identifier="IFile" declaration="false"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:ReturnStatement">
              <expression xsi:type="dom:BooleanLiteral" booleanValue="false"/>
            </statements>
          </body>
          <name fullyQualifiedName="currentProcessorSupportsRTTG" identifier="currentProcessorSupportsRTTG" declaration="true"/>
          <returnType xsi:type="dom:PrimitiveType" code="boolean"/>
        </bodyDeclarations>
        <name fullyQualifiedName="IdeProcessingEnvImpl" identifier="IdeProcessingEnvImpl" declaration="true"/>
        <superclassType xsi:type="dom:SimpleType">
          <name xsi:type="dom:SimpleName" fullyQualifiedName="BaseProcessingEnvImpl" identifier="BaseProcessingEnvImpl" declaration="false"/>
        </superclassType>
      </types>
    </ast>
  </compilationUnits>
  <compilationUnits elementName="IdeMessagerImpl.java">
    <imports elementName="javax.annotation.processing.Messager" isOnDemand="false" isStatic="false"/>
    <imports elementName="javax.lang.model.element.AnnotationMirror" isOnDemand="false" isStatic="false"/>
    <imports elementName="javax.lang.model.element.AnnotationValue" isOnDemand="false" isStatic="false"/>
    <imports elementName="javax.lang.model.element.Element" isOnDemand="false" isStatic="false"/>
    <imports elementName="javax.tools.Diagnostic.Kind" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.core.runtime.IStatus" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.core.runtime.Status" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.apt.pluggable.core.Apt6Plugin" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.compiler.CompilationResult" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.compiler.apt.dispatch.AptProblem" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl" isOnDemand="false" isStatic="false"/>
    <types elementName="IdeMessagerImpl" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch.IdeMessagerImpl" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch.IdeMessagerImpl">
      <fields elementName="_manager" isEnumConstant="false" typeSignature="QIdeAnnotationProcessorManager;" isVolatile="false" isTransient="false"/>
      <fields elementName="_env" isEnumConstant="false" typeSignature="QIdeProcessingEnvImpl;" isVolatile="false" isTransient="false"/>
      <methods elementName="IdeMessagerImpl" returnType="V" isConstructor="true" isMainMethod="false">
        <parameters name="manager" type="QIdeAnnotationProcessorManager;"/>
        <parameters name="env" type="QIdeProcessingEnvImpl;"/>
      </methods>
      <methods elementName="printMessage" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="kind" type="QKind;"/>
        <parameters name="msg" type="QCharSequence;"/>
      </methods>
      <methods elementName="printMessage" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="kind" type="QKind;"/>
        <parameters name="msg" type="QCharSequence;"/>
        <parameters name="e" type="QElement;"/>
      </methods>
      <methods elementName="printMessage" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="kind" type="QKind;"/>
        <parameters name="msg" type="QCharSequence;"/>
        <parameters name="e" type="QElement;"/>
        <parameters name="a" type="QAnnotationMirror;"/>
      </methods>
      <methods elementName="printMessage" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="kind" type="QKind;"/>
        <parameters name="msg" type="QCharSequence;"/>
        <parameters name="e" type="QElement;"/>
        <parameters name="a" type="QAnnotationMirror;"/>
        <parameters name="v" type="QAnnotationValue;"/>
      </methods>
    </types>
    <ast>
      <package>
        <javadoc>
          <tags nested="false">
            <fragments xsi:type="dom:TextElement" text="Copyright (c) 2007 BEA Systems, Inc. "/>
            <fragments xsi:type="dom:TextElement" text="All rights reserved. This program and the accompanying materials"/>
            <fragments xsi:type="dom:TextElement" text="are made available under the terms of the Eclipse Public License v1.0"/>
            <fragments xsi:type="dom:TextElement" text="which accompanies this distribution, and is available at"/>
            <fragments xsi:type="dom:TextElement" text="http://www.eclipse.org/legal/epl-v10.html"/>
            <fragments xsi:type="dom:TextElement" text="Contributors:"/>
            <fragments xsi:type="dom:TextElement" text="wharley@bea.com - initial API and implementation"/>
          </tags>
        </javadoc>
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch">
          <name fullyQualifiedName="dispatch" identifier="dispatch" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core">
            <name fullyQualifiedName="core" identifier="core" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable">
              <name fullyQualifiedName="pluggable" identifier="pluggable" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                  <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </package>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="javax.annotation.processing.Messager">
          <name fullyQualifiedName="Messager" identifier="Messager" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.annotation.processing">
            <name fullyQualifiedName="processing" identifier="processing" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.annotation">
              <name fullyQualifiedName="annotation" identifier="annotation" declaration="false"/>
              <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="javax" identifier="javax" declaration="false"/>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang.model.element.AnnotationMirror">
          <name fullyQualifiedName="AnnotationMirror" identifier="AnnotationMirror" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang.model.element">
            <name fullyQualifiedName="element" identifier="element" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang.model">
              <name fullyQualifiedName="model" identifier="model" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang">
                <name fullyQualifiedName="lang" identifier="lang" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="javax" identifier="javax" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang.model.element.AnnotationValue">
          <name fullyQualifiedName="AnnotationValue" identifier="AnnotationValue" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang.model.element">
            <name fullyQualifiedName="element" identifier="element" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang.model">
              <name fullyQualifiedName="model" identifier="model" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang">
                <name fullyQualifiedName="lang" identifier="lang" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="javax" identifier="javax" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang.model.element.Element">
          <name fullyQualifiedName="Element" identifier="Element" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang.model.element">
            <name fullyQualifiedName="element" identifier="element" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang.model">
              <name fullyQualifiedName="model" identifier="model" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.lang">
                <name fullyQualifiedName="lang" identifier="lang" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="javax" identifier="javax" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="javax.tools.Diagnostic.Kind">
          <name fullyQualifiedName="Kind" identifier="Kind" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.tools.Diagnostic">
            <name fullyQualifiedName="Diagnostic" identifier="Diagnostic" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.tools">
              <name fullyQualifiedName="tools" identifier="tools" declaration="false"/>
              <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="javax" identifier="javax" declaration="false"/>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core.runtime.IStatus">
          <name fullyQualifiedName="IStatus" identifier="IStatus" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core.runtime">
            <name fullyQualifiedName="runtime" identifier="runtime" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core.runtime.Status">
          <name fullyQualifiedName="Status" identifier="Status" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core.runtime">
            <name fullyQualifiedName="runtime" identifier="runtime" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core.Apt6Plugin">
          <name fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core">
            <name fullyQualifiedName="core" identifier="core" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable">
              <name fullyQualifiedName="pluggable" identifier="pluggable" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                  <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.CompilationResult">
          <name fullyQualifiedName="CompilationResult" identifier="CompilationResult" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
            <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
              <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                  <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                  <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.dispatch.AptProblem">
          <name fullyQualifiedName="AptProblem" identifier="AptProblem" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.dispatch">
            <name fullyQualifiedName="dispatch" identifier="dispatch" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt">
              <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
                <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                  <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl">
          <name fullyQualifiedName="BatchMessagerImpl" identifier="BatchMessagerImpl" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.dispatch">
            <name fullyQualifiedName="dispatch" identifier="dispatch" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt">
              <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
                <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                  <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <types xsi:type="dom:TypeDeclaration" localTypeDeclaration="false" memberTypeDeclaration="false" packageMemberTypeDeclaration="true" interface="false">
        <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
        <javadoc>
          <tags tagName="@since" nested="false">
            <fragments xsi:type="dom:TextElement" text=" 3.3"/>
          </tags>
        </javadoc>
        <bodyDeclarations xsi:type="dom:FieldDeclaration">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <modifiers xsi:type="dom:Modifier" abstract="false" final="true" native="false" private="false" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <fragments extraDimensions="0">
            <name fullyQualifiedName="_manager" identifier="_manager" declaration="true"/>
          </fragments>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeAnnotationProcessorManager" identifier="IdeAnnotationProcessorManager" declaration="false"/>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:FieldDeclaration">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <modifiers xsi:type="dom:Modifier" abstract="false" final="true" native="false" private="false" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <fragments extraDimensions="0">
            <name fullyQualifiedName="_env" identifier="_env" declaration="true"/>
          </fragments>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeProcessingEnvImpl" identifier="IdeProcessingEnvImpl" declaration="false"/>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="true" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:Assignment" operator="=">
                <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_manager" identifier="_manager" declaration="false"/>
                <rightHandSide xsi:type="dom:SimpleName" fullyQualifiedName="manager" identifier="manager" declaration="false"/>
              </expression>
            </statements>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:Assignment" operator="=">
                <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_env" identifier="_env" declaration="false"/>
                <rightHandSide xsi:type="dom:SimpleName" fullyQualifiedName="env" identifier="env" declaration="false"/>
              </expression>
            </statements>
            <statements xsi:type="dom:IfStatement">
              <expression xsi:type="dom:InfixExpression" operator="||">
                <leftOperand xsi:type="dom:InfixExpression" operator="==">
                  <leftOperand xsi:type="dom:NullLiteral"/>
                  <rightOperand xsi:type="dom:SimpleName" fullyQualifiedName="_manager" identifier="_manager" declaration="false"/>
                </leftOperand>
                <rightOperand xsi:type="dom:InfixExpression" operator="==">
                  <leftOperand xsi:type="dom:NullLiteral"/>
                  <rightOperand xsi:type="dom:SimpleName" fullyQualifiedName="_env" identifier="_env" declaration="false"/>
                </rightOperand>
              </expression>
              <thenStatement xsi:type="dom:Block">
                <statements xsi:type="dom:ThrowStatement">
                  <expression xsi:type="dom:ClassInstanceCreation">
                    <type xsi:type="dom:SimpleType">
                      <name xsi:type="dom:SimpleName" fullyQualifiedName="NullPointerException" identifier="NullPointerException" declaration="false"/>
                    </type>
                  </expression>
                </statements>
              </thenStatement>
            </statements>
          </body>
          <name fullyQualifiedName="IdeMessagerImpl" identifier="IdeMessagerImpl" declaration="false"/>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="manager" identifier="manager" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeAnnotationProcessorManager" identifier="IdeAnnotationProcessorManager" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="env" identifier="env" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeProcessingEnvImpl" identifier="IdeProcessingEnvImpl" declaration="false"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:MethodInvocation">
                <arguments xsi:type="dom:SimpleName" fullyQualifiedName="kind" identifier="kind" declaration="false"/>
                <arguments xsi:type="dom:SimpleName" fullyQualifiedName="msg" identifier="msg" declaration="false"/>
                <arguments xsi:type="dom:NullLiteral"/>
                <arguments xsi:type="dom:NullLiteral"/>
                <arguments xsi:type="dom:NullLiteral"/>
                <name fullyQualifiedName="printMessage" identifier="printMessage" declaration="false"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="printMessage" identifier="printMessage" declaration="true"/>
          <returnType xsi:type="dom:PrimitiveType" code="void"/>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="kind" identifier="kind" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Kind" identifier="Kind" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="msg" identifier="msg" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="CharSequence" identifier="CharSequence" declaration="false"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:MethodInvocation">
                <arguments xsi:type="dom:SimpleName" fullyQualifiedName="kind" identifier="kind" declaration="false"/>
                <arguments xsi:type="dom:SimpleName" fullyQualifiedName="msg" identifier="msg" declaration="false"/>
                <arguments xsi:type="dom:SimpleName" fullyQualifiedName="e" identifier="e" declaration="false"/>
                <arguments xsi:type="dom:NullLiteral"/>
                <arguments xsi:type="dom:NullLiteral"/>
                <name fullyQualifiedName="printMessage" identifier="printMessage" declaration="false"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="printMessage" identifier="printMessage" declaration="true"/>
          <returnType xsi:type="dom:PrimitiveType" code="void"/>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="kind" identifier="kind" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Kind" identifier="Kind" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="msg" identifier="msg" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="CharSequence" identifier="CharSequence" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="e" identifier="e" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Element" identifier="Element" declaration="false"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:MethodInvocation">
                <arguments xsi:type="dom:SimpleName" fullyQualifiedName="kind" identifier="kind" declaration="false"/>
                <arguments xsi:type="dom:SimpleName" fullyQualifiedName="msg" identifier="msg" declaration="false"/>
                <arguments xsi:type="dom:SimpleName" fullyQualifiedName="e" identifier="e" declaration="false"/>
                <arguments xsi:type="dom:SimpleName" fullyQualifiedName="a" identifier="a" declaration="false"/>
                <arguments xsi:type="dom:NullLiteral"/>
                <name fullyQualifiedName="printMessage" identifier="printMessage" declaration="false"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="printMessage" identifier="printMessage" declaration="true"/>
          <returnType xsi:type="dom:PrimitiveType" code="void"/>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="kind" identifier="kind" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Kind" identifier="Kind" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="msg" identifier="msg" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="CharSequence" identifier="CharSequence" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="e" identifier="e" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Element" identifier="Element" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="a" identifier="a" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="AnnotationMirror" identifier="AnnotationMirror" declaration="false"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:VariableDeclarationStatement">
              <fragments extraDimensions="0">
                <initializer xsi:type="dom:MethodInvocation">
                  <arguments xsi:type="dom:SimpleName" fullyQualifiedName="kind" identifier="kind" declaration="false"/>
                  <arguments xsi:type="dom:SimpleName" fullyQualifiedName="msg" identifier="msg" declaration="false"/>
                  <arguments xsi:type="dom:SimpleName" fullyQualifiedName="e" identifier="e" declaration="false"/>
                  <expression xsi:type="dom:SimpleName" fullyQualifiedName="BatchMessagerImpl" identifier="BatchMessagerImpl" declaration="false"/>
                  <name fullyQualifiedName="createProblem" identifier="createProblem" declaration="false"/>
                </initializer>
                <name fullyQualifiedName="problem" identifier="problem" declaration="true"/>
              </fragments>
              <type xsi:type="dom:SimpleType">
                <name xsi:type="dom:SimpleName" fullyQualifiedName="AptProblem" identifier="AptProblem" declaration="false"/>
              </type>
            </statements>
            <statements xsi:type="dom:IfStatement">
              <elseStatement xsi:type="dom:IfStatement">
                <elseStatement xsi:type="dom:Block">
                  <statements xsi:type="dom:ExpressionStatement">
                    <expression xsi:type="dom:MethodInvocation">
                      <arguments xsi:type="dom:ClassInstanceCreation">
                        <arguments xsi:type="dom:QualifiedName" fullyQualifiedName="IStatus.INFO">
                          <name fullyQualifiedName="INFO" identifier="INFO" declaration="false"/>
                          <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="IStatus" identifier="IStatus" declaration="false"/>
                        </arguments>
                        <arguments xsi:type="dom:QualifiedName" fullyQualifiedName="Apt6Plugin.PLUGIN_ID">
                          <name fullyQualifiedName="PLUGIN_ID" identifier="PLUGIN_ID" declaration="false"/>
                          <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
                        </arguments>
                        <arguments xsi:type="dom:QualifiedName" fullyQualifiedName="Apt6Plugin.STATUS_EXCEPTION">
                          <name fullyQualifiedName="STATUS_EXCEPTION" identifier="STATUS_EXCEPTION" declaration="false"/>
                          <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
                        </arguments>
                        <arguments xsi:type="dom:MethodInvocation">
                          <expression xsi:type="dom:SimpleName" fullyQualifiedName="problem" identifier="problem" declaration="false"/>
                          <name fullyQualifiedName="getMessage" identifier="getMessage" declaration="false"/>
                        </arguments>
                        <arguments xsi:type="dom:NullLiteral"/>
                        <type xsi:type="dom:SimpleType">
                          <name xsi:type="dom:SimpleName" fullyQualifiedName="Status" identifier="Status" declaration="false"/>
                        </type>
                      </arguments>
                      <expression xsi:type="dom:SimpleName" fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
                      <name fullyQualifiedName="log" identifier="log" declaration="false"/>
                    </expression>
                  </statements>
                </elseStatement>
                <expression xsi:type="dom:InfixExpression" operator="!=">
                  <leftOperand xsi:type="dom:NullLiteral"/>
                  <rightOperand xsi:type="dom:QualifiedName" fullyQualifiedName="problem._referenceContext">
                    <name fullyQualifiedName="_referenceContext" identifier="_referenceContext" declaration="false"/>
                    <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="problem" identifier="problem" declaration="false"/>
                  </rightOperand>
                </expression>
                <thenStatement xsi:type="dom:Block">
                  <statements xsi:type="dom:VariableDeclarationStatement">
                    <fragments extraDimensions="0">
                      <initializer xsi:type="dom:MethodInvocation">
                        <expression xsi:type="dom:QualifiedName" fullyQualifiedName="problem._referenceContext">
                          <name fullyQualifiedName="_referenceContext" identifier="_referenceContext" declaration="false"/>
                          <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="problem" identifier="problem" declaration="false"/>
                        </expression>
                        <name fullyQualifiedName="compilationResult" identifier="compilationResult" declaration="false"/>
                      </initializer>
                      <name fullyQualifiedName="result" identifier="result" declaration="true"/>
                    </fragments>
                    <type xsi:type="dom:SimpleType">
                      <name xsi:type="dom:SimpleName" fullyQualifiedName="CompilationResult" identifier="CompilationResult" declaration="false"/>
                    </type>
                  </statements>
                  <statements xsi:type="dom:ExpressionStatement">
                    <expression xsi:type="dom:MethodInvocation">
                      <arguments xsi:type="dom:SimpleName" fullyQualifiedName="problem" identifier="problem" declaration="false"/>
                      <arguments xsi:type="dom:QualifiedName" fullyQualifiedName="problem._referenceContext">
                        <name fullyQualifiedName="_referenceContext" identifier="_referenceContext" declaration="false"/>
                        <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="problem" identifier="problem" declaration="false"/>
                      </arguments>
                      <expression xsi:type="dom:SimpleName" fullyQualifiedName="result" identifier="result" declaration="false"/>
                      <name fullyQualifiedName="record" identifier="record" declaration="false"/>
                    </expression>
                  </statements>
                </thenStatement>
              </elseStatement>
              <expression xsi:type="dom:InfixExpression" operator="==">
                <leftOperand xsi:type="dom:SimpleName" fullyQualifiedName="kind" identifier="kind" declaration="false"/>
                <rightOperand xsi:type="dom:QualifiedName" fullyQualifiedName="Kind.NOTE">
                  <name fullyQualifiedName="NOTE" identifier="NOTE" declaration="false"/>
                  <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="Kind" identifier="Kind" declaration="false"/>
                </rightOperand>
              </expression>
              <thenStatement xsi:type="dom:Block">
                <statements xsi:type="dom:ExpressionStatement">
                  <expression xsi:type="dom:MethodInvocation">
                    <arguments xsi:type="dom:ClassInstanceCreation">
                      <arguments xsi:type="dom:QualifiedName" fullyQualifiedName="IStatus.INFO">
                        <name fullyQualifiedName="INFO" identifier="INFO" declaration="false"/>
                        <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="IStatus" identifier="IStatus" declaration="false"/>
                      </arguments>
                      <arguments xsi:type="dom:QualifiedName" fullyQualifiedName="Apt6Plugin.PLUGIN_ID">
                        <name fullyQualifiedName="PLUGIN_ID" identifier="PLUGIN_ID" declaration="false"/>
                        <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
                      </arguments>
                      <arguments xsi:type="dom:QualifiedName" fullyQualifiedName="Apt6Plugin.STATUS_EXCEPTION">
                        <name fullyQualifiedName="STATUS_EXCEPTION" identifier="STATUS_EXCEPTION" declaration="false"/>
                        <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
                      </arguments>
                      <arguments xsi:type="dom:MethodInvocation">
                        <expression xsi:type="dom:SimpleName" fullyQualifiedName="problem" identifier="problem" declaration="false"/>
                        <name fullyQualifiedName="getMessage" identifier="getMessage" declaration="false"/>
                      </arguments>
                      <arguments xsi:type="dom:NullLiteral"/>
                      <type xsi:type="dom:SimpleType">
                        <name xsi:type="dom:SimpleName" fullyQualifiedName="Status" identifier="Status" declaration="false"/>
                      </type>
                    </arguments>
                    <expression xsi:type="dom:SimpleName" fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
                    <name fullyQualifiedName="log" identifier="log" declaration="false"/>
                  </expression>
                </statements>
              </thenStatement>
            </statements>
          </body>
          <name fullyQualifiedName="printMessage" identifier="printMessage" declaration="true"/>
          <returnType xsi:type="dom:PrimitiveType" code="void"/>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="kind" identifier="kind" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Kind" identifier="Kind" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="msg" identifier="msg" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="CharSequence" identifier="CharSequence" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="e" identifier="e" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Element" identifier="Element" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="a" identifier="a" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="AnnotationMirror" identifier="AnnotationMirror" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="v" identifier="v" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="AnnotationValue" identifier="AnnotationValue" declaration="false"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <name fullyQualifiedName="IdeMessagerImpl" identifier="IdeMessagerImpl" declaration="true"/>
        <superInterfaceTypes xsi:type="dom:SimpleType">
          <name xsi:type="dom:SimpleName" fullyQualifiedName="Messager" identifier="Messager" declaration="false"/>
        </superInterfaceTypes>
      </types>
    </ast>
  </compilationUnits>
  <compilationUnits elementName="IdeAnnotationProcessorManager.java">
    <imports elementName="java.util.Iterator" isOnDemand="false" isStatic="false"/>
    <imports elementName="java.util.Map" isOnDemand="false" isStatic="false"/>
    <imports elementName="java.util.Map.Entry" isOnDemand="false" isStatic="false"/>
    <imports elementName="javax.annotation.processing.Processor" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.core.resources.IFile" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.core.runtime.CoreException" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.apt.core.internal.AnnotationProcessorFactoryLoader" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.apt.core.internal.IServiceFactory" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.apt.core.internal.util.FactoryPath" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.apt.core.internal.util.FactoryPath.Attributes" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.core.IJavaProject" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.apt.pluggable.core.Apt6Plugin" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.compiler.Compiler" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.compiler.env.ICompilationUnit" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.core.CompilationUnitProblemFinder" isOnDemand="false" isStatic="false"/>
    <imports elementName="org.eclipse.jdt.internal.core.builder.ICompilationUnitLocator" isOnDemand="false" isStatic="false"/>
    <types elementName="IdeAnnotationProcessorManager" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch.IdeAnnotationProcessorManager" fullyQualifiedParametrizedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch.IdeAnnotationProcessorManager">
      <fields elementName="_javaProject" isEnumConstant="false" typeSignature="QIJavaProject;" isVolatile="false" isTransient="false"/>
      <fields elementName="_cuLocator" isEnumConstant="false" typeSignature="QICompilationUnitLocator;" isVolatile="false" isTransient="false"/>
      <fields elementName="_processorFactories" isEnumConstant="false" typeSignature="QMap&lt;QIServiceFactory;QFactoryPath.Attributes;>;" isVolatile="false" isTransient="false"/>
      <fields elementName="_processorIter" isEnumConstant="false" typeSignature="QIterator&lt;QEntry&lt;QIServiceFactory;QAttributes;>;>;" isVolatile="false" isTransient="false"/>
      <methods elementName="configureFromPlatform" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="compiler" type="QCompiler;"/>
        <parameters name="compilationUnitLocator" type="QObject;"/>
        <parameters name="javaProject" type="QObject;"/>
      </methods>
      <methods elementName="discoverNextProcessor" returnType="QProcessorInfo;" isConstructor="false" isMainMethod="false"/>
      <methods elementName="reportProcessorException" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="p" type="QProcessor;"/>
        <parameters name="e" type="QException;"/>
      </methods>
      <methods elementName="findCompilationUnit" returnType="QICompilationUnit;" isConstructor="false" isMainMethod="false">
        <parameters name="file" type="QIFile;"/>
      </methods>
      <methods elementName="processAnnotations" returnType="V" isConstructor="false" isMainMethod="false">
        <parameters name="units" type="[QCompilationUnitDeclaration;"/>
        <parameters name="referenceBindings" type="[QReferenceBinding;"/>
        <parameters name="isLastRound" type="Z"/>
      </methods>
    </types>
    <ast>
      <package>
        <javadoc>
          <tags nested="false">
            <fragments xsi:type="dom:TextElement" text="Copyright (c) 2007 BEA Systems, Inc. "/>
            <fragments xsi:type="dom:TextElement" text="All rights reserved. This program and the accompanying materials"/>
            <fragments xsi:type="dom:TextElement" text="are made available under the terms of the Eclipse Public License v1.0"/>
            <fragments xsi:type="dom:TextElement" text="which accompanies this distribution, and is available at"/>
            <fragments xsi:type="dom:TextElement" text="http://www.eclipse.org/legal/epl-v10.html"/>
            <fragments xsi:type="dom:TextElement" text="Contributors:"/>
            <fragments xsi:type="dom:TextElement" text="wharley@bea.com - initial API and implementation"/>
          </tags>
        </javadoc>
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core.dispatch">
          <name fullyQualifiedName="dispatch" identifier="dispatch" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core">
            <name fullyQualifiedName="core" identifier="core" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable">
              <name fullyQualifiedName="pluggable" identifier="pluggable" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                  <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </package>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="java.util.Iterator">
          <name fullyQualifiedName="Iterator" identifier="Iterator" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="java.util">
            <name fullyQualifiedName="util" identifier="util" declaration="false"/>
            <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="java" identifier="java" declaration="false"/>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="java.util.Map">
          <name fullyQualifiedName="Map" identifier="Map" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="java.util">
            <name fullyQualifiedName="util" identifier="util" declaration="false"/>
            <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="java" identifier="java" declaration="false"/>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="java.util.Map.Entry">
          <name fullyQualifiedName="Entry" identifier="Entry" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="java.util.Map">
            <name fullyQualifiedName="Map" identifier="Map" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="java.util">
              <name fullyQualifiedName="util" identifier="util" declaration="false"/>
              <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="java" identifier="java" declaration="false"/>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="javax.annotation.processing.Processor">
          <name fullyQualifiedName="Processor" identifier="Processor" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.annotation.processing">
            <name fullyQualifiedName="processing" identifier="processing" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="javax.annotation">
              <name fullyQualifiedName="annotation" identifier="annotation" declaration="false"/>
              <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="javax" identifier="javax" declaration="false"/>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core.resources.IFile">
          <name fullyQualifiedName="IFile" identifier="IFile" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core.resources">
            <name fullyQualifiedName="resources" identifier="resources" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core.runtime.CoreException">
          <name fullyQualifiedName="CoreException" identifier="CoreException" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core.runtime">
            <name fullyQualifiedName="runtime" identifier="runtime" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal.AnnotationProcessorFactoryLoader">
          <name fullyQualifiedName="AnnotationProcessorFactoryLoader" identifier="AnnotationProcessorFactoryLoader" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal">
            <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                  <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                    <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                    <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal.IServiceFactory">
          <name fullyQualifiedName="IServiceFactory" identifier="IServiceFactory" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal">
            <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                  <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                    <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                    <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal.util.FactoryPath">
          <name fullyQualifiedName="FactoryPath" identifier="FactoryPath" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal.util">
            <name fullyQualifiedName="util" identifier="util" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal">
              <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core">
                <name fullyQualifiedName="core" identifier="core" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt">
                  <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal.util.FactoryPath.Attributes">
          <name fullyQualifiedName="Attributes" identifier="Attributes" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal.util.FactoryPath">
            <name fullyQualifiedName="FactoryPath" identifier="FactoryPath" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal.util">
              <name fullyQualifiedName="util" identifier="util" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core.internal">
                <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt.core">
                  <name fullyQualifiedName="core" identifier="core" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.apt">
                    <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                      <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                      <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                        <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                        <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                      </qualifier>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.core.IJavaProject">
          <name fullyQualifiedName="IJavaProject" identifier="IJavaProject" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.core">
            <name fullyQualifiedName="core" identifier="core" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
              <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core.Apt6Plugin">
          <name fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable.core">
            <name fullyQualifiedName="core" identifier="core" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt.pluggable">
              <name fullyQualifiedName="pluggable" identifier="pluggable" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.apt">
                <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                  <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.Compiler">
          <name fullyQualifiedName="Compiler" identifier="Compiler" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
            <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
              <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                  <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                  <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager">
          <name fullyQualifiedName="BaseAnnotationProcessorManager" identifier="BaseAnnotationProcessorManager" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.dispatch">
            <name fullyQualifiedName="dispatch" identifier="dispatch" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt">
              <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
                <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                  <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo">
          <name fullyQualifiedName="ProcessorInfo" identifier="ProcessorInfo" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.dispatch">
            <name fullyQualifiedName="dispatch" identifier="dispatch" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt">
              <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
                <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                  <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                    <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                      <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                      <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration">
          <name fullyQualifiedName="CompilationUnitDeclaration" identifier="CompilationUnitDeclaration" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.ast">
            <name fullyQualifiedName="ast" identifier="ast" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
              <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                  <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                    <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                    <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env.ICompilationUnit">
          <name fullyQualifiedName="ICompilationUnit" identifier="ICompilationUnit" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.env">
            <name fullyQualifiedName="env" identifier="env" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
              <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                  <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                    <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                    <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding">
          <name fullyQualifiedName="ReferenceBinding" identifier="ReferenceBinding" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.lookup">
            <name fullyQualifiedName="lookup" identifier="lookup" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
              <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                  <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                    <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                    <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.core.CompilationUnitProblemFinder">
          <name fullyQualifiedName="CompilationUnitProblemFinder" identifier="CompilationUnitProblemFinder" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.core">
            <name fullyQualifiedName="core" identifier="core" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
              <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                  <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                  <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <imports onDemand="false" static="false">
        <name xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.core.builder.ICompilationUnitLocator">
          <name fullyQualifiedName="ICompilationUnitLocator" identifier="ICompilationUnitLocator" declaration="false"/>
          <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.core.builder">
            <name fullyQualifiedName="builder" identifier="builder" declaration="false"/>
            <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.core">
              <name fullyQualifiedName="core" identifier="core" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                  <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                    <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                    <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                  </qualifier>
                </qualifier>
              </qualifier>
            </qualifier>
          </qualifier>
        </name>
      </imports>
      <types xsi:type="dom:TypeDeclaration" localTypeDeclaration="false" memberTypeDeclaration="false" packageMemberTypeDeclaration="true" interface="false">
        <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
        <javadoc>
          <tags nested="false">
            <fragments xsi:type="dom:TextElement" text="Java 6 annotation processor manager used when compiling within the IDE. "/>
          </tags>
          <tags tagName="@see" nested="false">
            <fragments xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager">
              <name fullyQualifiedName="BatchAnnotationProcessorManager" identifier="BatchAnnotationProcessorManager" declaration="false"/>
              <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt.dispatch">
                <name fullyQualifiedName="dispatch" identifier="dispatch" declaration="false"/>
                <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler.apt">
                  <name fullyQualifiedName="apt" identifier="apt" declaration="false"/>
                  <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal.compiler">
                    <name fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
                    <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt.internal">
                      <name fullyQualifiedName="internal" identifier="internal" declaration="false"/>
                      <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse.jdt">
                        <name fullyQualifiedName="jdt" identifier="jdt" declaration="false"/>
                        <qualifier xsi:type="dom:QualifiedName" fullyQualifiedName="org.eclipse">
                          <name fullyQualifiedName="eclipse" identifier="eclipse" declaration="false"/>
                          <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="org" identifier="org" declaration="false"/>
                        </qualifier>
                      </qualifier>
                    </qualifier>
                  </qualifier>
                </qualifier>
              </qualifier>
            </fragments>
          </tags>
        </javadoc>
        <bodyDeclarations xsi:type="dom:FieldDeclaration">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <fragments extraDimensions="0">
            <name fullyQualifiedName="_javaProject" identifier="_javaProject" declaration="true"/>
          </fragments>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="IJavaProject" identifier="IJavaProject" declaration="false"/>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:FieldDeclaration">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <fragments extraDimensions="0">
            <name fullyQualifiedName="_cuLocator" identifier="_cuLocator" declaration="true"/>
          </fragments>
          <type xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="ICompilationUnitLocator" identifier="ICompilationUnitLocator" declaration="false"/>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:FieldDeclaration">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <fragments extraDimensions="0">
            <name fullyQualifiedName="_processorFactories" identifier="_processorFactories" declaration="true"/>
          </fragments>
          <type xsi:type="dom:ParameterizedType">
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Map" identifier="Map" declaration="false"/>
            </type>
            <typeArguments xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="IServiceFactory" identifier="IServiceFactory" declaration="false"/>
            </typeArguments>
            <typeArguments xsi:type="dom:SimpleType">
              <name xsi:type="dom:QualifiedName" fullyQualifiedName="FactoryPath.Attributes">
                <name fullyQualifiedName="Attributes" identifier="Attributes" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="FactoryPath" identifier="FactoryPath" declaration="false"/>
              </name>
            </typeArguments>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:FieldDeclaration">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="true" protected="false" public="false" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <fragments extraDimensions="0">
            <name fullyQualifiedName="_processorIter" identifier="_processorIter" declaration="true"/>
          </fragments>
          <type xsi:type="dom:ParameterizedType">
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Iterator" identifier="Iterator" declaration="false"/>
            </type>
            <typeArguments xsi:type="dom:ParameterizedType">
              <type xsi:type="dom:SimpleType">
                <name xsi:type="dom:SimpleName" fullyQualifiedName="Entry" identifier="Entry" declaration="false"/>
              </type>
              <typeArguments xsi:type="dom:SimpleType">
                <name xsi:type="dom:SimpleName" fullyQualifiedName="IServiceFactory" identifier="IServiceFactory" declaration="false"/>
              </typeArguments>
              <typeArguments xsi:type="dom:SimpleType">
                <name xsi:type="dom:SimpleName" fullyQualifiedName="Attributes" identifier="Attributes" declaration="false"/>
              </typeArguments>
            </typeArguments>
          </type>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:MarkerAnnotation">
            <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
          </modifiers>
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <javadoc>
            <tags nested="false">
              <fragments xsi:type="dom:TextElement" text="Initialize the processor manager for a particular project.  It is an error"/>
              <fragments xsi:type="dom:TextElement" text="to initialize a manager more than once."/>
            </tags>
            <tags tagName="@param" nested="false">
              <fragments xsi:type="dom:SimpleName" fullyQualifiedName="abstractImageBuilder" identifier="abstractImageBuilder" declaration="false"/>
              <fragments xsi:type="dom:TextElement" text=" must be an instanceof AbstractImageBuilder."/>
              <fragments xsi:type="dom:TextElement" text="(But it can't be prototyped that way because the abstract base class must"/>
              <fragments xsi:type="dom:TextElement" text="compile without Eclipse platform code.)"/>
            </tags>
            <tags tagName="@param" nested="false">
              <fragments xsi:type="dom:SimpleName" fullyQualifiedName="javaProject" identifier="javaProject" declaration="false"/>
              <fragments xsi:type="dom:TextElement" text=" must be an instanceof IJavaProject.  (But it can't be"/>
              <fragments xsi:type="dom:TextElement" text="prototyped that way because the abstract base class must compile without"/>
              <fragments xsi:type="dom:TextElement" text="Eclipse platform code.)"/>
            </tags>
          </javadoc>
          <body>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:Assignment" operator="=">
                <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_javaProject" identifier="_javaProject" declaration="false"/>
                <rightHandSide xsi:type="dom:CastExpression">
                  <expression xsi:type="dom:SimpleName" fullyQualifiedName="javaProject" identifier="javaProject" declaration="false"/>
                  <type xsi:type="dom:SimpleType">
                    <name xsi:type="dom:SimpleName" fullyQualifiedName="IJavaProject" identifier="IJavaProject" declaration="false"/>
                  </type>
                </rightHandSide>
              </expression>
            </statements>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:Assignment" operator="=">
                <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_cuLocator" identifier="_cuLocator" declaration="false"/>
                <rightHandSide xsi:type="dom:CastExpression">
                  <expression xsi:type="dom:SimpleName" fullyQualifiedName="compilationUnitLocator" identifier="compilationUnitLocator" declaration="false"/>
                  <type xsi:type="dom:SimpleType">
                    <name xsi:type="dom:SimpleName" fullyQualifiedName="ICompilationUnitLocator" identifier="ICompilationUnitLocator" declaration="false"/>
                  </type>
                </rightHandSide>
              </expression>
            </statements>
            <statements xsi:type="dom:IfStatement">
              <expression xsi:type="dom:InfixExpression" operator="!=">
                <leftOperand xsi:type="dom:NullLiteral"/>
                <rightOperand xsi:type="dom:SimpleName" fullyQualifiedName="_processingEnv" identifier="_processingEnv" declaration="false"/>
              </expression>
              <thenStatement xsi:type="dom:Block">
                <statements xsi:type="dom:ThrowStatement">
                  <expression xsi:type="dom:ClassInstanceCreation">
                    <arguments xsi:type="dom:StringLiteral" escapedValue="&quot;Calling configure() more than once on an AnnotationProcessorManager is not supported&quot;"/>
                    <type xsi:type="dom:SimpleType">
                      <name xsi:type="dom:SimpleName" fullyQualifiedName="IllegalStateException" identifier="IllegalStateException" declaration="false"/>
                    </type>
                  </expression>
                </statements>
              </thenStatement>
            </statements>
            <statements xsi:type="dom:IfStatement">
              <elseStatement xsi:type="dom:Block">
                <statements xsi:type="dom:ExpressionStatement">
                  <expression xsi:type="dom:Assignment" operator="=">
                    <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_processingEnv" identifier="_processingEnv" declaration="false"/>
                    <rightHandSide xsi:type="dom:ClassInstanceCreation">
                      <arguments xsi:type="dom:ThisExpression"/>
                      <arguments xsi:type="dom:SimpleName" fullyQualifiedName="_javaProject" identifier="_javaProject" declaration="false"/>
                      <arguments xsi:type="dom:SimpleName" fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
                      <type xsi:type="dom:SimpleType">
                        <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeBuildProcessingEnvImpl" identifier="IdeBuildProcessingEnvImpl" declaration="false"/>
                      </type>
                    </rightHandSide>
                  </expression>
                </statements>
              </elseStatement>
              <expression xsi:type="dom:InstanceofExpression">
                <leftOperand xsi:type="dom:SimpleName" fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
                <rightOperand xsi:type="dom:SimpleType">
                  <name xsi:type="dom:SimpleName" fullyQualifiedName="CompilationUnitProblemFinder" identifier="CompilationUnitProblemFinder" declaration="false"/>
                </rightOperand>
              </expression>
              <thenStatement xsi:type="dom:Block">
                <statements xsi:type="dom:ExpressionStatement">
                  <expression xsi:type="dom:Assignment" operator="=">
                    <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_processingEnv" identifier="_processingEnv" declaration="false"/>
                    <rightHandSide xsi:type="dom:ClassInstanceCreation">
                      <arguments xsi:type="dom:ThisExpression"/>
                      <arguments xsi:type="dom:SimpleName" fullyQualifiedName="_javaProject" identifier="_javaProject" declaration="false"/>
                      <arguments xsi:type="dom:SimpleName" fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
                      <type xsi:type="dom:SimpleType">
                        <name xsi:type="dom:SimpleName" fullyQualifiedName="IdeReconcileProcessingEnvImpl" identifier="IdeReconcileProcessingEnvImpl" declaration="false"/>
                      </type>
                    </rightHandSide>
                  </expression>
                </statements>
              </thenStatement>
            </statements>
            <statements xsi:type="dom:IfStatement">
              <expression xsi:type="dom:QualifiedName" fullyQualifiedName="Apt6Plugin.DEBUG">
                <name fullyQualifiedName="DEBUG" identifier="DEBUG" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
              </expression>
              <thenStatement xsi:type="dom:Block">
                <statements xsi:type="dom:ExpressionStatement">
                  <expression xsi:type="dom:MethodInvocation">
                    <arguments xsi:type="dom:InfixExpression" operator="+">
                      <extendedOperands xsi:type="dom:StringLiteral" escapedValue="&quot; on project &quot;"/>
                      <extendedOperands xsi:type="dom:MethodInvocation">
                        <expression xsi:type="dom:SimpleName" fullyQualifiedName="_javaProject" identifier="_javaProject" declaration="false"/>
                        <name fullyQualifiedName="getElementName" identifier="getElementName" declaration="false"/>
                      </extendedOperands>
                      <leftOperand xsi:type="dom:StringLiteral" escapedValue="&quot;Java 6 annotation processor manager initialized for compiler &quot;"/>
                      <rightOperand xsi:type="dom:MethodInvocation">
                        <expression xsi:type="dom:SimpleName" fullyQualifiedName="compiler" identifier="compiler" declaration="false"/>
                        <name fullyQualifiedName="toString" identifier="toString" declaration="false"/>
                      </rightOperand>
                    </arguments>
                    <expression xsi:type="dom:SimpleName" fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
                    <name fullyQualifiedName="trace" identifier="trace" declaration="false"/>
                  </expression>
                </statements>
              </thenStatement>
            </statements>
          </body>
          <name fullyQualifiedName="configureFromPlatform" identifier="configureFromPlatform" declaration="true"/>
          <returnType xsi:type="dom:PrimitiveType" code="void"/>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="compiler" identifier="compiler" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Compiler" identifier="Compiler" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="compilationUnitLocator" identifier="compilationUnitLocator" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Object" identifier="Object" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="javaProject" identifier="javaProject" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Object" identifier="Object" declaration="false"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:MarkerAnnotation">
            <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
          </modifiers>
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <javadoc>
            <tags nested="false">
              <fragments xsi:type="dom:TextElement" text="If this project has a ProcessorPath defined, use it.  Else, construct"/>
              <fragments xsi:type="dom:TextElement" text="one from the classpath."/>
            </tags>
          </javadoc>
          <body>
            <statements xsi:type="dom:IfStatement">
              <expression xsi:type="dom:MethodInvocation">
                <expression xsi:type="dom:SimpleName" fullyQualifiedName="_processorIter" identifier="_processorIter" declaration="false"/>
                <name fullyQualifiedName="hasNext" identifier="hasNext" declaration="false"/>
              </expression>
              <thenStatement xsi:type="dom:Block">
                <statements xsi:type="dom:VariableDeclarationStatement">
                  <fragments extraDimensions="0">
                    <initializer xsi:type="dom:MethodInvocation">
                      <expression xsi:type="dom:SimpleName" fullyQualifiedName="_processorIter" identifier="_processorIter" declaration="false"/>
                      <name fullyQualifiedName="next" identifier="next" declaration="false"/>
                    </initializer>
                    <name fullyQualifiedName="entry" identifier="entry" declaration="true"/>
                  </fragments>
                  <type xsi:type="dom:ParameterizedType">
                    <type xsi:type="dom:SimpleType">
                      <name xsi:type="dom:SimpleName" fullyQualifiedName="Entry" identifier="Entry" declaration="false"/>
                    </type>
                    <typeArguments xsi:type="dom:SimpleType">
                      <name xsi:type="dom:SimpleName" fullyQualifiedName="IServiceFactory" identifier="IServiceFactory" declaration="false"/>
                    </typeArguments>
                    <typeArguments xsi:type="dom:SimpleType">
                      <name xsi:type="dom:SimpleName" fullyQualifiedName="Attributes" identifier="Attributes" declaration="false"/>
                    </typeArguments>
                  </type>
                </statements>
                <statements xsi:type="dom:VariableDeclarationStatement">
                  <fragments extraDimensions="0">
                    <name fullyQualifiedName="p" identifier="p" declaration="true"/>
                  </fragments>
                  <type xsi:type="dom:SimpleType">
                    <name xsi:type="dom:SimpleName" fullyQualifiedName="Processor" identifier="Processor" declaration="false"/>
                  </type>
                </statements>
                <statements xsi:type="dom:TryStatement">
                  <catchClauses>
                    <body>
                      <statements xsi:type="dom:ExpressionStatement">
                        <expression xsi:type="dom:MethodInvocation">
                          <arguments xsi:type="dom:SimpleName" fullyQualifiedName="e" identifier="e" declaration="false"/>
                          <arguments xsi:type="dom:InfixExpression" operator="+">
                            <leftOperand xsi:type="dom:StringLiteral" escapedValue="&quot;Unable to create instance of annotation processor &quot;"/>
                            <rightOperand xsi:type="dom:MethodInvocation">
                              <expression xsi:type="dom:SimpleName" fullyQualifiedName="entry" identifier="entry" declaration="false"/>
                              <name fullyQualifiedName="getKey" identifier="getKey" declaration="false"/>
                            </rightOperand>
                          </arguments>
                          <expression xsi:type="dom:SimpleName" fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
                          <name fullyQualifiedName="log" identifier="log" declaration="false"/>
                        </expression>
                      </statements>
                    </body>
                    <exception extraDimensions="0" varargs="false">
                      <name fullyQualifiedName="e" identifier="e" declaration="true"/>
                      <type xsi:type="dom:SimpleType">
                        <name xsi:type="dom:SimpleName" fullyQualifiedName="CoreException" identifier="CoreException" declaration="false"/>
                      </type>
                    </exception>
                  </catchClauses>
                  <body>
                    <statements xsi:type="dom:ExpressionStatement">
                      <expression xsi:type="dom:Assignment" operator="=">
                        <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="p" identifier="p" declaration="false"/>
                        <rightHandSide xsi:type="dom:CastExpression">
                          <expression xsi:type="dom:MethodInvocation">
                            <expression xsi:type="dom:MethodInvocation">
                              <expression xsi:type="dom:SimpleName" fullyQualifiedName="entry" identifier="entry" declaration="false"/>
                              <name fullyQualifiedName="getKey" identifier="getKey" declaration="false"/>
                            </expression>
                            <name fullyQualifiedName="newInstance" identifier="newInstance" declaration="false"/>
                          </expression>
                          <type xsi:type="dom:SimpleType">
                            <name xsi:type="dom:SimpleName" fullyQualifiedName="Processor" identifier="Processor" declaration="false"/>
                          </type>
                        </rightHandSide>
                      </expression>
                    </statements>
                    <statements xsi:type="dom:ExpressionStatement">
                      <expression xsi:type="dom:MethodInvocation">
                        <arguments xsi:type="dom:SimpleName" fullyQualifiedName="_processingEnv" identifier="_processingEnv" declaration="false"/>
                        <expression xsi:type="dom:SimpleName" fullyQualifiedName="p" identifier="p" declaration="false"/>
                        <name fullyQualifiedName="init" identifier="init" declaration="false"/>
                      </expression>
                    </statements>
                    <statements xsi:type="dom:VariableDeclarationStatement">
                      <fragments extraDimensions="0">
                        <initializer xsi:type="dom:ClassInstanceCreation">
                          <arguments xsi:type="dom:SimpleName" fullyQualifiedName="p" identifier="p" declaration="false"/>
                          <type xsi:type="dom:SimpleType">
                            <name xsi:type="dom:SimpleName" fullyQualifiedName="ProcessorInfo" identifier="ProcessorInfo" declaration="false"/>
                          </type>
                        </initializer>
                        <name fullyQualifiedName="pi" identifier="pi" declaration="true"/>
                      </fragments>
                      <type xsi:type="dom:SimpleType">
                        <name xsi:type="dom:SimpleName" fullyQualifiedName="ProcessorInfo" identifier="ProcessorInfo" declaration="false"/>
                      </type>
                    </statements>
                    <statements xsi:type="dom:IfStatement">
                      <expression xsi:type="dom:QualifiedName" fullyQualifiedName="Apt6Plugin.DEBUG">
                        <name fullyQualifiedName="DEBUG" identifier="DEBUG" declaration="false"/>
                        <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
                      </expression>
                      <thenStatement xsi:type="dom:Block">
                        <statements xsi:type="dom:ExpressionStatement">
                          <expression xsi:type="dom:MethodInvocation">
                            <arguments xsi:type="dom:InfixExpression" operator="+">
                              <leftOperand xsi:type="dom:StringLiteral" escapedValue="&quot;Discovered processor &quot;"/>
                              <rightOperand xsi:type="dom:MethodInvocation">
                                <expression xsi:type="dom:SimpleName" fullyQualifiedName="p" identifier="p" declaration="false"/>
                                <name fullyQualifiedName="toString" identifier="toString" declaration="false"/>
                              </rightOperand>
                            </arguments>
                            <expression xsi:type="dom:SimpleName" fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
                            <name fullyQualifiedName="trace" identifier="trace" declaration="false"/>
                          </expression>
                        </statements>
                      </thenStatement>
                    </statements>
                    <statements xsi:type="dom:ExpressionStatement">
                      <expression xsi:type="dom:MethodInvocation">
                        <arguments xsi:type="dom:SimpleName" fullyQualifiedName="pi" identifier="pi" declaration="false"/>
                        <expression xsi:type="dom:SimpleName" fullyQualifiedName="_processors" identifier="_processors" declaration="false"/>
                        <name fullyQualifiedName="add" identifier="add" declaration="false"/>
                      </expression>
                    </statements>
                    <statements xsi:type="dom:ReturnStatement">
                      <expression xsi:type="dom:SimpleName" fullyQualifiedName="pi" identifier="pi" declaration="false"/>
                    </statements>
                  </body>
                </statements>
              </thenStatement>
            </statements>
            <statements xsi:type="dom:ReturnStatement">
              <expression xsi:type="dom:NullLiteral"/>
            </statements>
          </body>
          <name fullyQualifiedName="discoverNextProcessor" identifier="discoverNextProcessor" declaration="true"/>
          <returnType xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="ProcessorInfo" identifier="ProcessorInfo" declaration="false"/>
          </returnType>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:MarkerAnnotation">
            <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
          </modifiers>
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <body>
            <statements xsi:type="dom:ExpressionStatement">
              <expression xsi:type="dom:MethodInvocation">
                <arguments xsi:type="dom:SimpleName" fullyQualifiedName="e" identifier="e" declaration="false"/>
                <arguments xsi:type="dom:InfixExpression" operator="+">
                  <leftOperand xsi:type="dom:StringLiteral" escapedValue="&quot;Exception thrown by Java annotation processor &quot;"/>
                  <rightOperand xsi:type="dom:SimpleName" fullyQualifiedName="p" identifier="p" declaration="false"/>
                </arguments>
                <expression xsi:type="dom:SimpleName" fullyQualifiedName="Apt6Plugin" identifier="Apt6Plugin" declaration="false"/>
                <name fullyQualifiedName="log" identifier="log" declaration="false"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="reportProcessorException" identifier="reportProcessorException" declaration="true"/>
          <returnType xsi:type="dom:PrimitiveType" code="void"/>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="p" identifier="p" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Processor" identifier="Processor" declaration="false"/>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="e" identifier="e" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="Exception" identifier="Exception" declaration="false"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <javadoc>
            <tags tagName="@return" nested="false">
              <fragments xsi:type="dom:TextElement" text=" an ICompilationUnit corresponding to the specified file.  In IDE mode this"/>
              <fragments xsi:type="dom:TextElement" text="will be backed by an org.eclipse.jdt.internal.core.builder.SourceFile."/>
            </tags>
          </javadoc>
          <body>
            <statements xsi:type="dom:ReturnStatement">
              <expression xsi:type="dom:MethodInvocation">
                <arguments xsi:type="dom:SimpleName" fullyQualifiedName="file" identifier="file" declaration="false"/>
                <expression xsi:type="dom:SimpleName" fullyQualifiedName="_cuLocator" identifier="_cuLocator" declaration="false"/>
                <name fullyQualifiedName="fromIFile" identifier="fromIFile" declaration="false"/>
              </expression>
            </statements>
          </body>
          <name fullyQualifiedName="findCompilationUnit" identifier="findCompilationUnit" declaration="true"/>
          <returnType xsi:type="dom:SimpleType">
            <name xsi:type="dom:SimpleName" fullyQualifiedName="ICompilationUnit" identifier="ICompilationUnit" declaration="false"/>
          </returnType>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="file" identifier="file" declaration="true"/>
            <type xsi:type="dom:SimpleType">
              <name xsi:type="dom:SimpleName" fullyQualifiedName="IFile" identifier="IFile" declaration="false"/>
            </type>
          </parameters>
        </bodyDeclarations>
        <bodyDeclarations xsi:type="dom:MethodDeclaration" extraDimensions="0" constructor="false" varargs="false">
          <modifiers xsi:type="dom:MarkerAnnotation">
            <typeName xsi:type="dom:SimpleName" fullyQualifiedName="Override" identifier="Override" declaration="false"/>
          </modifiers>
          <modifiers xsi:type="dom:Modifier" abstract="false" final="false" native="false" private="false" protected="false" public="true" static="false" strictfp="false" synchronized="false" transient="false" volatile="false"/>
          <javadoc>
            <tags nested="false">
              <fragments xsi:type="dom:TextElement" text="In IDE mode, we are able to determine whether there are no processors.  If that's the case,"/>
              <fragments xsi:type="dom:TextElement" text="then we can avoid doing the work of walking the ASTs to search for annotations.  We still"/>
              <fragments xsi:type="dom:TextElement" text="need to clean up no-longer-generated files when the factory path is changed, but the best"/>
              <fragments xsi:type="dom:TextElement" text="way to do that is to force a clean build."/>
            </tags>
            <tags tagName="@see" nested="false">
              <fragments xsi:type="dom:MethodRef">
                <name fullyQualifiedName="processAnnotations" identifier="processAnnotations" declaration="false"/>
                <qualifier xsi:type="dom:SimpleName" fullyQualifiedName="BaseAnnotationProcessorManager" identifier="BaseAnnotationProcessorManager" declaration="false"/>
                <parameters varargs="false">
                  <type xsi:type="dom:ArrayType" dimensions="1">
                    <componentType xsi:type="dom:SimpleType">
                      <name xsi:type="dom:SimpleName" fullyQualifiedName="CompilationUnitDeclaration" identifier="CompilationUnitDeclaration" declaration="false"/>
                    </componentType>
                  </type>
                </parameters>
                <parameters varargs="false">
                  <type xsi:type="dom:PrimitiveType" code="boolean"/>
                </parameters>
              </fragments>
            </tags>
          </javadoc>
          <body>
            <statements xsi:type="dom:IfStatement">
              <expression xsi:type="dom:InfixExpression" operator="==">
                <leftOperand xsi:type="dom:NullLiteral"/>
                <rightOperand xsi:type="dom:SimpleName" fullyQualifiedName="_processorFactories" identifier="_processorFactories" declaration="false"/>
              </expression>
              <thenStatement xsi:type="dom:Block">
                <statements xsi:type="dom:ExpressionStatement">
                  <expression xsi:type="dom:Assignment" operator="=">
                    <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_processorFactories" identifier="_processorFactories" declaration="false"/>
                    <rightHandSide xsi:type="dom:MethodInvocation">
                      <arguments xsi:type="dom:SimpleName" fullyQualifiedName="_javaProject" identifier="_javaProject" declaration="false"/>
                      <expression xsi:type="dom:MethodInvocation">
                        <expression xsi:type="dom:SimpleName" fullyQualifiedName="AnnotationProcessorFactoryLoader" identifier="AnnotationProcessorFactoryLoader" declaration="false"/>
                        <name fullyQualifiedName="getLoader" identifier="getLoader" declaration="false"/>
                      </expression>
                      <name fullyQualifiedName="getJava6FactoriesAndAttributesForProject" identifier="getJava6FactoriesAndAttributesForProject" declaration="false"/>
                    </rightHandSide>
                  </expression>
                </statements>
                <statements xsi:type="dom:ExpressionStatement">
                  <expression xsi:type="dom:Assignment" operator="=">
                    <leftHandSide xsi:type="dom:SimpleName" fullyQualifiedName="_processorIter" identifier="_processorIter" declaration="false"/>
                    <rightHandSide xsi:type="dom:MethodInvocation">
                      <expression xsi:type="dom:MethodInvocation">
                        <expression xsi:type="dom:SimpleName" fullyQualifiedName="_processorFactories" identifier="_processorFactories" declaration="false"/>
                        <name fullyQualifiedName="entrySet" identifier="entrySet" declaration="false"/>
                      </expression>
                      <name fullyQualifiedName="iterator" identifier="iterator" declaration="false"/>
                    </rightHandSide>
                  </expression>
                </statements>
              </thenStatement>
            </statements>
            <statements xsi:type="dom:IfStatement">
              <expression xsi:type="dom:PrefixExpression" operator="!">
                <operand xsi:type="dom:MethodInvocation">
                  <expression xsi:type="dom:SimpleName" fullyQualifiedName="_processorFactories" identifier="_processorFactories" declaration="false"/>
                  <name fullyQualifiedName="isEmpty" identifier="isEmpty" declaration="false"/>
                </operand>
              </expression>
              <thenStatement xsi:type="dom:Block">
                <statements xsi:type="dom:ExpressionStatement">
                  <expression xsi:type="dom:SuperMethodInvocation">
                    <arguments xsi:type="dom:SimpleName" fullyQualifiedName="units" identifier="units" declaration="false"/>
                    <arguments xsi:type="dom:SimpleName" fullyQualifiedName="referenceBindings" identifier="referenceBindings" declaration="false"/>
                    <arguments xsi:type="dom:SimpleName" fullyQualifiedName="isLastRound" identifier="isLastRound" declaration="false"/>
                    <name xsi:type="dom:SimpleName" fullyQualifiedName="processAnnotations" identifier="processAnnotations" declaration="false"/>
                  </expression>
                </statements>
              </thenStatement>
            </statements>
          </body>
          <name fullyQualifiedName="processAnnotations" identifier="processAnnotations" declaration="true"/>
          <returnType xsi:type="dom:PrimitiveType" code="void"/>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="units" identifier="units" declaration="true"/>
            <type xsi:type="dom:ArrayType" dimensions="1">
              <componentType xsi:type="dom:SimpleType">
                <name xsi:type="dom:SimpleName" fullyQualifiedName="CompilationUnitDeclaration" identifier="CompilationUnitDeclaration" declaration="false"/>
              </componentType>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="referenceBindings" identifier="referenceBindings" declaration="true"/>
            <type xsi:type="dom:ArrayType" dimensions="1">
              <componentType xsi:type="dom:SimpleType">
                <name xsi:type="dom:SimpleName" fullyQualifiedName="ReferenceBinding" identifier="ReferenceBinding" declaration="false"/>
              </componentType>
            </type>
          </parameters>
          <parameters extraDimensions="0" varargs="false">
            <name fullyQualifiedName="isLastRound" identifier="isLastRound" declaration="true"/>
            <type xsi:type="dom:PrimitiveType" code="boolean"/>
          </parameters>
        </bodyDeclarations>
        <name fullyQualifiedName="IdeAnnotationProcessorManager" identifier="IdeAnnotationProcessorManager" declaration="true"/>
        <superclassType xsi:type="dom:SimpleType">
          <name xsi:type="dom:SimpleName" fullyQualifiedName="BaseAnnotationProcessorManager" identifier="BaseAnnotationProcessorManager" declaration="false"/>
        </superclassType>
      </types>
    </ast>
  </compilationUnits>
</core:IPackageFragment>
